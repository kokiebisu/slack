[{"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.stories.tsx":"1","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.stories.tsx":"2","/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.component.tsx":"3","/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.channel.tsx":"4","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.invite.tsx":"5","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.landing.tsx":"6","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.error.tsx":"7","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.together.tsx":"8","/Users/ken/Desktop/slack/web/src/components/template/invite/invite.after.tsx":"9","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.hashtag.tsx":"10","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.workspace.tsx":"11","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.confirm.tsx":"12","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.launch.tsx":"13","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.nav.tsx":"14","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.password.tsx":"15","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.mention.tsx":"16","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.launch.tsx":"17","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.software.tsx":"18","/Users/ken/Desktop/slack/web/src/context/toggle-context.tsx":"19","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.plain.tsx":"20","/Users/ken/Desktop/slack/web/src/assets/svg/Icons.tsx":"21","/Users/ken/Desktop/slack/web/src/global/colors.ts":"22","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.more.tsx":"23","/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.stories.tsx":"24","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.stories.tsx":"25","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.component.tsx":"26","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.channel.tsx":"27","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.directmessage.tsx":"28","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.thread.tsx":"29","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.saved.tsx":"30","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.find.tsx":"31","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.transparent.tsx":"32","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.socialmedia.tsx":"33","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.getstarted.tsx":"34","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.link.tsx":"35","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.banner.tsx":"36","/Users/ken/Desktop/slack/web/src/util/string.ts":"37","/Users/ken/Desktop/slack/web/src/components/template/invite/invite.before.tsx":"38","/Users/ken/Desktop/slack/web/src/assets/svg/Logo.tsx":"39","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.password.tsx":"40","/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.validation.tsx":"41","/Users/ken/Desktop/slack/web/src/global/globalStyles.ts":"42","/Users/ken/Desktop/slack/web/src/global/globalFonts.ts":"43","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.check.tsx":"44","/Users/ken/Desktop/slack/web/src/global/blocks.ts":"45","/Users/ken/Desktop/slack/web/src/assets/svg/index.tsx":"46","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.stories.tsx":"47","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.channel.tsx":"48","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.primary.tsx":"49","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.square.tsx":"50","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.reaction.tsx":"51","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.component.tsx":"52","/Users/ken/Desktop/slack/web/src/components/template/invite/index.tsx":"53","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.getstarted.tsx":"54","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.available.tsx":"55","/Users/ken/Desktop/slack/web/src/hooks/useTabTitle.ts":"56","/Users/ken/Desktop/slack/web/src/animations/Buttons.ts":"57","/Users/ken/Desktop/slack/web/src/components/Workspace/Channel/Container.tsx":"58","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.landing.tsx":"59","/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/MessageHeader.ts":"60","/Users/ken/Desktop/slack/web/src/components/layout/layout.workspace.tsx":"61","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.draft.tsx":"62","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.stories.tsx":"63","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.stories.tsx":"64","/Users/ken/Desktop/slack/web/src/styles/Workspace/Content/DragDrop.ts":"65","/Users/ken/Desktop/slack/web/src/styles/Workspace/Channel/Container.ts":"66","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.hamburger.tsx":"67","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.landing.tsx":"68","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.stories.tsx":"69","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.component.tsx":"70","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.next.tsx":"71","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.email.tsx":"72","/Users/ken/Desktop/slack/web/src/util/passwordUtil.ts":"73","/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.component.tsx":"74","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.stories.tsx":"75","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.message.tsx":"76","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.together.tsx":"77","/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/Container.ts":"78","/Users/ken/Desktop/slack/web/src/styles/Workspace/Switch.ts":"79","/Users/ken/Desktop/slack/web/src/index.tsx":"80","/Users/ken/Desktop/slack/web/src/pages/Signin.tsx":"81","/Users/ken/Desktop/slack/web/src/pages/FindTeam.tsx":"82","/Users/ken/Desktop/slack/web/src/styles/ConfirmDigit/Dialog.ts":"83","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/index.ts":"84","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Sections.ts":"85","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Options.ts":"86","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Option.ts":"87","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Channel.ts":"88","/Users/ken/Desktop/slack/web/src/routes/App.tsx":"89","/Users/ken/Desktop/slack/web/src/context/index.tsx":"90","/Users/ken/Desktop/slack/web/src/components/layout/layout.getstarted.tsx":"91","/Users/ken/Desktop/slack/web/src/styles/Landing/index.ts":"92","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.activity.tsx":"93","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.choose.tsx":"94","/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/Container.tsx":"95","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.create.tsx":"96","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Section.ts":"97","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Message.ts":"98","/Users/ken/Desktop/slack/web/src/global/sizes.ts":"99","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.signin.tsx":"100","/Users/ken/Desktop/slack/web/src/global/token.ts":"101","/Users/ken/Desktop/slack/web/src/assets/fonts/index.tsx":"102","/Users/ken/Desktop/slack/web/src/util/randomColor.ts":"103","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Profile.ts":"104","/Users/ken/Desktop/slack/web/src/pages/Landing.tsx":"105","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.modal.tsx":"106","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Messages.ts":"107","/Users/ken/Desktop/slack/web/src/styles/Workspace/index.ts":"108","/Users/ken/Desktop/slack/web/src/pages/index.tsx":"109","/Users/ken/Desktop/slack/web/src/pages/GetStarted.tsx":"110","/Users/ken/Desktop/slack/web/src/components/molecules/card/index.tsx":"111","/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.stories.tsx":"112","/Users/ken/Desktop/slack/web/src/components/molecules/seperator/seperator.date.tsx":"113","/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.tsx":"114","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/index.tsx":"115","/Users/ken/Desktop/slack/web/src/styles/FindTeam/index.ts":"116","/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/MessageHeader.tsx":"117","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.switch.tsx":"118","/Users/ken/Desktop/slack/web/src/animations/FadeInStagger.ts":"119","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.workspace.tsx":"120","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.stories.tsx":"121","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.tsx":"122","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.menu.tsx":"123","/Users/ken/Desktop/slack/web/src/components/molecules/option/option.profile.tsx":"124","/Users/ken/Desktop/slack/web/src/components/molecules/option/index.tsx":"125","/Users/ken/Desktop/slack/web/src/components/molecules/option/option.menu.tsx":"126","/Users/ken/Desktop/slack/web/src/components/molecules/option/option.status.tsx":"127","/Users/ken/Desktop/slack/web/src/components/atoms/button/index.tsx":"128","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.auth.tsx":"129","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.email.tsx":"130","/Users/ken/Desktop/slack/web/src/pages/Client.tsx":"131","/Users/ken/Desktop/slack/web/src/components/prototype/client/index.tsx":"132","/Users/ken/Desktop/slack/web/src/components/prototype/client/setup-team-name.tsx":"133","/Users/ken/Desktop/slack/web/src/components/prototype/client/index.stories.tsx":"134","/Users/ken/Desktop/slack/web/src/components/prototype/get-started/index.stories.tsx":"135","/Users/ken/Desktop/slack/web/src/components/prototype/get-started/index.tsx":"136","/Users/ken/Desktop/slack/web/src/components/prototype/get-started/getstarted.create.tsx":"137","/Users/ken/Desktop/slack/web/src/components/prototype/get-started/getstarted.confirmdigit.tsx":"138","/Users/ken/Desktop/slack/web/src/components/layout/index.tsx":"139","/Users/ken/Desktop/slack/web/src/components/prototype/client/setup-channels.tsx":"140","/Users/ken/Desktop/slack/web/src/components/prototype/client/setup-invites.tsx":"141","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/setup-channels.tsx":"142","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/setup-team-name.tsx":"143","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/setup-invites.tsx":"144","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.stories.tsx":"145","/Users/ken/Desktop/slack/web/src/components/organisms/auth/index.tsx":"146","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.signup.tsx":"147","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.find.tsx":"148","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.invited.tsx":"149","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.workspaces.tsx":"150","/Users/ken/Desktop/slack/web/src/components/prototype/signin/index.tsx":"151","/Users/ken/Desktop/slack/web/src/components/prototype/landing/index.tsx":"152","/Users/ken/Desktop/slack/web/src/components/atoms/input/index.tsx":"153","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/index.tsx":"154","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/index.stories.tsx":"155","/Users/ken/Desktop/slack/web/src/components/atoms/input/index.stories.tsx":"156","/Users/ken/Desktop/slack/web/src/components/prototype/signin/index.stories.tsx":"157","/Users/ken/Desktop/slack/web/src/components/organisms/modal/index.tsx":"158","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.skip.tsx":"159","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.modal.tsx":"160","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.close.tsx":"161","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/index.stories.tsx":"162","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/plain.tsx":"163","/Users/ken/Desktop/slack/web/src/components/organisms/header/index.tsx":"164","/Users/ken/Desktop/slack/web/src/components/organisms/header/index.stories.tsx":"165","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.client.tsx":"166","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.search.tsx":"167","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.avatar.tsx":"168","/Users/ken/Desktop/slack/web/src/components/layout/layout.content.tsx":"169","/Users/ken/Desktop/slack/web/src/components/prototype/client/channel.tsx":"170","/Users/ken/Desktop/slack/web/src/context/client-context.tsx":"171","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.add.tsx":"172"},{"size":460,"mtime":1610180626391,"results":"173","hashOfConfig":"174"},{"size":908,"mtime":1610336674329,"results":"175","hashOfConfig":"174"},{"size":475,"mtime":1610246469400,"results":"176","hashOfConfig":"174"},{"size":2758,"mtime":1610258195346,"results":"177","hashOfConfig":"174"},{"size":2638,"mtime":1610180626429,"results":"178","hashOfConfig":"174"},{"size":5227,"mtime":1610344250168,"results":"179","hashOfConfig":"174"},{"size":1101,"mtime":1610180626401,"results":"180","hashOfConfig":"174"},{"size":1539,"mtime":1610246634847,"results":"181","hashOfConfig":"174"},{"size":4263,"mtime":1610248348752,"results":"182","hashOfConfig":"174"},{"size":440,"mtime":1610180626392,"results":"183","hashOfConfig":"174"},{"size":2284,"mtime":1610421025299,"results":"184","hashOfConfig":"174"},{"size":1150,"mtime":1610420976673,"results":"185","hashOfConfig":"174"},{"size":697,"mtime":1610180626395,"results":"186","hashOfConfig":"174"},{"size":2877,"mtime":1610180626396,"results":"187","hashOfConfig":"174"},{"size":1667,"mtime":1610335720100,"results":"188","hashOfConfig":"174"},{"size":3194,"mtime":1610180626421,"results":"189","hashOfConfig":"174"},{"size":1564,"mtime":1610247634271,"results":"190","hashOfConfig":"174"},{"size":5458,"mtime":1610180626440,"results":"191","hashOfConfig":"174"},{"size":1453,"mtime":1610344828548,"results":"192","hashOfConfig":"174"},{"size":1899,"mtime":1610325488309,"results":"193","hashOfConfig":"174"},{"size":68100,"mtime":1610435577922,"results":"194","hashOfConfig":"174"},{"size":1794,"mtime":1610430291885,"results":"195","hashOfConfig":"174"},{"size":596,"mtime":1610180626392,"results":"196","hashOfConfig":"174"},{"size":420,"mtime":1610180626437,"results":"197","hashOfConfig":"174"},{"size":652,"mtime":1610180626408,"results":"198","hashOfConfig":"174"},{"size":923,"mtime":1610247380135,"results":"199","hashOfConfig":"174"},{"size":5232,"mtime":1610258128112,"results":"200","hashOfConfig":"174"},{"size":1414,"mtime":1610258134969,"results":"201","hashOfConfig":"174"},{"size":1525,"mtime":1610180626422,"results":"202","hashOfConfig":"174"},{"size":1703,"mtime":1610180626421,"results":"203","hashOfConfig":"174"},{"size":4083,"mtime":1610180626426,"results":"204","hashOfConfig":"174"},{"size":842,"mtime":1610313726258,"results":"205","hashOfConfig":"174"},{"size":1352,"mtime":1610246834301,"results":"206","hashOfConfig":"174"},{"size":1250,"mtime":1610246806482,"results":"207","hashOfConfig":"174"},{"size":731,"mtime":1610180626396,"results":"208","hashOfConfig":"174"},{"size":5055,"mtime":1610255807251,"results":"209","hashOfConfig":"174"},{"size":185,"mtime":1610180626482,"results":"210","hashOfConfig":"174"},{"size":9162,"mtime":1610335721185,"results":"211","hashOfConfig":"174"},{"size":13437,"mtime":1610180626386,"results":"212","hashOfConfig":"174"},{"size":494,"mtime":1610180626401,"results":"213","hashOfConfig":"174"},{"size":826,"mtime":1610180626391,"results":"214","hashOfConfig":"174"},{"size":739,"mtime":1610180626450,"results":"215","hashOfConfig":"174"},{"size":1115,"mtime":1610244248879,"results":"216","hashOfConfig":"174"},{"size":588,"mtime":1610180626391,"results":"217","hashOfConfig":"174"},{"size":6188,"mtime":1610421759436,"results":"218","hashOfConfig":"174"},{"size":49,"mtime":1610180626386,"results":"219","hashOfConfig":"174"},{"size":1081,"mtime":1610335623723,"results":"220","hashOfConfig":"174"},{"size":6446,"mtime":1610344208497,"results":"221","hashOfConfig":"174"},{"size":1129,"mtime":1610243277870,"results":"222","hashOfConfig":"174"},{"size":694,"mtime":1610237122941,"results":"223","hashOfConfig":"174"},{"size":737,"mtime":1610180626397,"results":"224","hashOfConfig":"174"},{"size":684,"mtime":1610247447498,"results":"225","hashOfConfig":"174"},{"size":423,"mtime":1610248256025,"results":"226","hashOfConfig":"174"},{"size":1341,"mtime":1610314753755,"results":"227","hashOfConfig":"174"},{"size":1978,"mtime":1610255808765,"results":"228","hashOfConfig":"174"},{"size":194,"mtime":1610180626460,"results":"229","hashOfConfig":"174"},{"size":1174,"mtime":1610180626364,"results":"230","hashOfConfig":"174"},{"size":3822,"mtime":1610248533685,"results":"231","hashOfConfig":"174"},{"size":8150,"mtime":1610313537106,"results":"232","hashOfConfig":"174"},{"size":1008,"mtime":1610180626476,"results":"233","hashOfConfig":"174"},{"size":1087,"mtime":1610435713666,"results":"234","hashOfConfig":"174"},{"size":1928,"mtime":1610180626419,"results":"235","hashOfConfig":"174"},{"size":598,"mtime":1610180626424,"results":"236","hashOfConfig":"174"},{"size":2939,"mtime":1610421396092,"results":"237","hashOfConfig":"174"},{"size":2102,"mtime":1610180626475,"results":"238","hashOfConfig":"239"},{"size":264,"mtime":1610180626475,"results":"240","hashOfConfig":"174"},{"size":426,"mtime":1610180626395,"results":"241","hashOfConfig":"174"},{"size":2144,"mtime":1610343839377,"results":"242","hashOfConfig":"174"},{"size":715,"mtime":1610180626393,"results":"243","hashOfConfig":"174"},{"size":698,"mtime":1610246496063,"results":"244","hashOfConfig":"174"},{"size":742,"mtime":1610341952111,"results":"245","hashOfConfig":"174"},{"size":655,"mtime":1610248942071,"results":"246","hashOfConfig":"174"},{"size":2010,"mtime":1610180626482,"results":"247","hashOfConfig":"174"},{"size":447,"mtime":1610247875695,"results":"248","hashOfConfig":"174"},{"size":487,"mtime":1610180626422,"results":"249","hashOfConfig":"174"},{"size":2036,"mtime":1610247071505,"results":"250","hashOfConfig":"174"},{"size":4258,"mtime":1610246527392,"results":"251","hashOfConfig":"174"},{"size":264,"mtime":1610180626476,"results":"252","hashOfConfig":"174"},{"size":648,"mtime":1610162018016,"results":"253","hashOfConfig":"239"},{"size":2017,"mtime":1610261173741,"results":"254","hashOfConfig":"174"},{"size":1322,"mtime":1610347405604,"results":"255","hashOfConfig":"174"},{"size":466,"mtime":1610348247531,"results":"256","hashOfConfig":"174"},{"size":1518,"mtime":1610180626468,"results":"257","hashOfConfig":"174"},{"size":1286,"mtime":1610180626481,"results":"258","hashOfConfig":"174"},{"size":258,"mtime":1610180626480,"results":"259","hashOfConfig":"174"},{"size":797,"mtime":1610180626480,"results":"260","hashOfConfig":"174"},{"size":852,"mtime":1610180626479,"results":"261","hashOfConfig":"174"},{"size":899,"mtime":1610180626479,"results":"262","hashOfConfig":"174"},{"size":929,"mtime":1610348142608,"results":"263","hashOfConfig":"174"},{"size":383,"mtime":1610433034433,"results":"264","hashOfConfig":"174"},{"size":1903,"mtime":1610266469749,"results":"265","hashOfConfig":"174"},{"size":355,"mtime":1610180626474,"results":"266","hashOfConfig":"174"},{"size":2160,"mtime":1610255808762,"results":"267","hashOfConfig":"174"},{"size":1582,"mtime":1610255807251,"results":"268","hashOfConfig":"174"},{"size":3935,"mtime":1610248573333,"results":"269","hashOfConfig":"174"},{"size":952,"mtime":1610234969081,"results":"270","hashOfConfig":"174"},{"size":2177,"mtime":1610180626480,"results":"271","hashOfConfig":"174"},{"size":876,"mtime":1610180626479,"results":"272","hashOfConfig":"174"},{"size":2062,"mtime":1610180626451,"results":"273","hashOfConfig":"174"},{"size":6913,"mtime":1610255808801,"results":"274","hashOfConfig":"174"},{"size":180,"mtime":1610180626451,"results":"275","hashOfConfig":"174"},{"size":665,"mtime":1610245315341,"results":"276","hashOfConfig":"174"},{"size":133,"mtime":1610180626482,"results":"277","hashOfConfig":"174"},{"size":1187,"mtime":1610180626480,"results":"278","hashOfConfig":"174"},{"size":1498,"mtime":1610348247531,"results":"279","hashOfConfig":"174"},{"size":752,"mtime":1610246968926,"results":"280","hashOfConfig":"174"},{"size":902,"mtime":1610180626479,"results":"281","hashOfConfig":"174"},{"size":500,"mtime":1610180626481,"results":"282","hashOfConfig":"174"},{"size":698,"mtime":1610331961150,"results":"283","hashOfConfig":"174"},{"size":1103,"mtime":1610332371675,"results":"284","hashOfConfig":"174"},{"size":665,"mtime":1610247129384,"results":"285","hashOfConfig":"174"},{"size":394,"mtime":1610180626409,"results":"286","hashOfConfig":"174"},{"size":1881,"mtime":1610237663378,"results":"287","hashOfConfig":"174"},{"size":348,"mtime":1610180626410,"results":"288","hashOfConfig":"174"},{"size":833,"mtime":1610347730887,"results":"289","hashOfConfig":"174"},{"size":197,"mtime":1610180626470,"results":"290","hashOfConfig":"174"},{"size":1471,"mtime":1610258277004,"results":"291","hashOfConfig":"174"},{"size":992,"mtime":1610180626413,"results":"292","hashOfConfig":"174"},{"size":341,"mtime":1610180626364,"results":"293","hashOfConfig":"174"},{"size":6576,"mtime":1610244224686,"results":"294","hashOfConfig":"174"},{"size":455,"mtime":1610180626411,"results":"295","hashOfConfig":"174"},{"size":445,"mtime":1610237747961,"results":"296","hashOfConfig":"174"},{"size":2635,"mtime":1610258493590,"results":"297","hashOfConfig":"174"},{"size":1885,"mtime":1610239351751,"results":"298","hashOfConfig":"174"},{"size":510,"mtime":1610240045539,"results":"299","hashOfConfig":"174"},{"size":1997,"mtime":1610245228754,"results":"300","hashOfConfig":"174"},{"size":1080,"mtime":1610249093271,"results":"301","hashOfConfig":"174"},{"size":3753,"mtime":1610434399098,"results":"302","hashOfConfig":"174"},{"size":834,"mtime":1610263813867,"results":"303","hashOfConfig":"174"},{"size":746,"mtime":1610265489729,"results":"304","hashOfConfig":"174"},{"size":1398,"mtime":1610433094822,"results":"305","hashOfConfig":"174"},{"size":737,"mtime":1610433493308,"results":"306","hashOfConfig":"174"},{"size":1160,"mtime":1610335661284,"results":"307","hashOfConfig":"174"},{"size":743,"mtime":1610433309728,"results":"308","hashOfConfig":"174"},{"size":524,"mtime":1610331804515,"results":"309","hashOfConfig":"174"},{"size":993,"mtime":1610331776146,"results":"310","hashOfConfig":"174"},{"size":1005,"mtime":1610335661122,"results":"311","hashOfConfig":"174"},{"size":6447,"mtime":1610332387314,"results":"312","hashOfConfig":"174"},{"size":690,"mtime":1610436247567,"results":"313","hashOfConfig":"174"},{"size":900,"mtime":1610335661123,"results":"314","hashOfConfig":"174"},{"size":1997,"mtime":1610345958499,"results":"315","hashOfConfig":"174"},{"size":602,"mtime":1610334628469,"results":"316","hashOfConfig":"174"},{"size":739,"mtime":1610334641360,"results":"317","hashOfConfig":"174"},{"size":2157,"mtime":1610334635785,"results":"318","hashOfConfig":"174"},{"size":1186,"mtime":1610335193482,"results":"319","hashOfConfig":"174"},{"size":1136,"mtime":1610335369901,"results":"320","hashOfConfig":"174"},{"size":2374,"mtime":1610335720869,"results":"321","hashOfConfig":"174"},{"size":1246,"mtime":1610335720100,"results":"322","hashOfConfig":"174"},{"size":2146,"mtime":1610335720100,"results":"323","hashOfConfig":"174"},{"size":3207,"mtime":1610255021673,"results":"324","hashOfConfig":"174"},{"size":1568,"mtime":1610336349005,"results":"325","hashOfConfig":"174"},{"size":750,"mtime":1610335500167,"results":"326","hashOfConfig":"174"},{"size":657,"mtime":1610335653102,"results":"327","hashOfConfig":"174"},{"size":621,"mtime":1610335673724,"results":"328","hashOfConfig":"174"},{"size":723,"mtime":1610336129184,"results":"329","hashOfConfig":"174"},{"size":849,"mtime":1610335821961,"results":"330","hashOfConfig":"174"},{"size":365,"mtime":1610336319116,"results":"331","hashOfConfig":"174"},{"size":2319,"mtime":1610345573203,"results":"332","hashOfConfig":"174"},{"size":1725,"mtime":1610346068240,"results":"333","hashOfConfig":"174"},{"size":710,"mtime":1610346026350,"results":"334","hashOfConfig":"174"},{"size":566,"mtime":1610345904323,"results":"335","hashOfConfig":"174"},{"size":706,"mtime":1610346644428,"results":"336","hashOfConfig":"174"},{"size":2124,"mtime":1610431036847,"results":"337","hashOfConfig":"174"},{"size":818,"mtime":1610350144512,"results":"338","hashOfConfig":"174"},{"size":614,"mtime":1610348834703,"results":"339","hashOfConfig":"174"},{"size":2489,"mtime":1610435651082,"results":"340","hashOfConfig":"174"},{"size":1271,"mtime":1610352445936,"results":"341","hashOfConfig":"174"},{"size":959,"mtime":1610435360397,"results":"342","hashOfConfig":"174"},{"size":552,"mtime":1610434992487,"results":"343","hashOfConfig":"174"},{"size":2110,"mtime":1610436334316,"results":"344","hashOfConfig":"174"},{"size":1470,"mtime":1610433202031,"results":"345","hashOfConfig":"174"},{"size":710,"mtime":1610434733990,"results":"346","hashOfConfig":"174"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},"1x578ns",{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"349"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"354"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"354"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"354"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"349"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"349"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"349"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"349"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"354"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"354"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"472"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"349"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"354"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},"gk2xnr",{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"354"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"354"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"349"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"354"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"567"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"567"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"354"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"354"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"349"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"354"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"354"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"354"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"354"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"354"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"354"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"354"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"354"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.stories.tsx",[],["727","728"],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.component.tsx",[],["729","730"],"/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.channel.tsx",["731","732"],"import * as React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\nimport { size } from \"global/sizes\";\n\n// Svgs\nimport { User, MapPinAlt } from \"assets/svg\";\n\n// Query\nimport {\n  useGetBelongingUsersQuery,\n  useGetChannelByIdQuery,\n} from \"generated/graphql\";\n\nexport const ChannelSubSection: React.FC<{\n  channelId?: string;\n}> = ({ channelId = \"channelId\" }) => {\n  // const { data: { getBelongingUsers } = {} } = useGetBelongingUsersQuery({\n  //   variables: { channelId },\n  // });\n  // const { data: { getChannelById } = {} } = useGetChannelByIdQuery({\n  //   variables: { channelId },\n  // });\n\n  return (\n    <Wrapper>\n      <b.Flex>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <IconWrapper className=\"person\">\n              <User />\n            </IconWrapper>\n            <b.Box ml={1}>\n              <b.Text fontSize={13} color=\"gray__light\">\n                {/* {getBelongingUsers?.belongingUsers?.length} */}\n              </b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <Seperator />\n          </b.Flex>\n        </b.Box>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <IconWrapper className=\"pin\">\n              <MapPinAlt />\n            </IconWrapper>\n            <b.Box ml={1}>\n              <b.Text fontSize={13} color=\"gray__light\">\n                1\n              </b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <Seperator className=\"second\" />\n          </b.Flex>\n        </b.Box>\n        <Descriptions>\n          <b.Flex alignItems=\"center\">\n            <b.Box className=\"descriptions__wrapper\">\n              <b.Span fontSize={13} color=\"gray__light\">\n                {/* {getChannelById?.ok && getChannelById.channel?.topic} */}\n              </b.Span>\n            </b.Box>\n          </b.Flex>\n        </Descriptions>\n      </b.Flex>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.person {\n    bottom: 0.8px;\n    svg {\n      width: 10px;\n      height: 10px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n\n  &.pin {\n    svg {\n      width: 10px;\n      height: 10px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst Seperator = styled(b.Box)`\n  height: 10px;\n  width: 1.2px;\n  background-color: ${({ theme }) => theme.colors.gray__light};\n  margin: 0 4px;\n  &.second {\n    display: none;\n    @media ${size[\"xs\"]} {\n      display: block;\n    }\n  }\n`;\n\nconst Descriptions = styled(b.Box)`\n  display: none;\n  @media ${size[\"xs\"]} {\n    display: block;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.invite.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.landing.tsx",["733"],"import React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport { size } from \"../../../global/sizes\";\nimport * as b from \"../../../global/blocks\";\nimport { Close } from \"../../../assets/svg\";\nimport { NameLogo } from \"../../../assets/svg/Logo\";\nimport { ChevronRight } from \"../../../assets/svg\";\nimport { useToggleDispatch } from \"../../../context/toggle-context\";\nimport { TransparentButtonMotion } from \"../../../animations/Buttons\";\n\nexport const LandingModal: React.FC<{ data?: any; loading?: boolean }> = ({\n  data,\n  loading,\n}) => {\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    document.body.style.height = \"100vh\";\n    return () => {\n      document.body.style.overflow = \"initial\";\n      document.body.style.height = \"initial\";\n    };\n  }, []);\n  const dispatchToggle = useToggleDispatch();\n\n  const options = [\n    { name: \"Why Slack?\", sub: [] },\n    { name: \"Solutions\", sub: [] },\n    { name: \"Resources\", sub: [] },\n    { name: \"Enterprise\" },\n    { name: \"Pricing\" },\n  ];\n\n  return (\n    <Wrapper>\n      <b.Box className=\"header\">\n        <b.Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <IconWrapper className=\"logo\">\n            <NameLogo />\n          </IconWrapper>\n          <IconButtonWrapper className=\"close\">\n            <Close />\n          </IconButtonWrapper>\n        </b.Flex>\n      </b.Box>\n      <b.Box className=\"content\">\n        {options.map((option) => {\n          return (\n            <Option>\n              <b.Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <b.Box>\n                  <b.Text>{option.name}</b.Text>\n                </b.Box>\n                {option.sub && (\n                  <b.Box>\n                    <IconWrapper className=\"arrow\">\n                      <ChevronRight />\n                    </IconWrapper>\n                  </b.Box>\n                )}\n              </b.Flex>\n            </Option>\n          );\n        })}\n      </b.Box>\n      <Buttons>\n        <b.Box>\n          {!loading &&\n          data &&\n          data.myTeams.teams! &&\n          data.myTeams.teams!.length > 0 ? (\n            <Button\n              initial=\"rest\"\n              animate=\"rest\"\n              whileHover=\"hovered\"\n              className=\"button__filled\"\n            >\n              <b.Button>Sign In</b.Button>\n            </Button>\n          ) : (\n            <Button\n              initial=\"rest\"\n              animate=\"rest\"\n              whileHover=\"hovered\"\n              className=\"button__filled\"\n            >\n              <b.Button>Launch</b.Button>\n            </Button>\n          )}\n          <Button\n            initial=\"rest\"\n            animate=\"rest\"\n            whileHover=\"hovered\"\n            className=\"button__border\"\n          >\n            <b.Button variants={TransparentButtonMotion}>\n              Download Slack\n            </b.Button>\n          </Button>\n        </b.Box>\n      </Buttons>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  background-color: white;\n  position: fixed;\n  z-index: 9999;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  .header {\n    padding: 25px;\n    margin-bottom: 7px;\n  }\n  .content {\n    padding-right: 5px;\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.logo {\n    svg {\n      width: 100px;\n      height: auto;\n\n      path {\n        &:nth-child(2) {\n          fill: ${({ theme }) => theme.colors.blue__lighter};\n        }\n        &:nth-child(3) {\n          fill: ${({ theme }) => theme.colors.green__lighter};\n        }\n        &:nth-child(4) {\n          fill: ${({ theme }) => theme.colors.yellow};\n        }\n        &:nth-child(5) {\n          fill: ${({ theme }) => theme.colors.red};\n        }\n      }\n    }\n  }\n  &.arrow {\n    margin-right: 16px;\n    svg {\n      width: 10px;\n    }\n  }\n`;\n\nexport const IconButtonWrapper = styled(b.Button)`\n  &.close {\n    margin-right: 8px;\n    svg {\n      width: 16px;\n    }\n  }\n`;\n\nconst Option = styled(b.Box)`\n  padding: 17px 25px;\n  p {\n    font-family: \"SlackLato-Regular\";\n    font-size: 17px;\n  }\n`;\n\nconst Buttons = styled(b.Box)`\n  position: absolute;\n  bottom: 10px;\n  width: 100%;\n  background-color: white;\n\n  & > div {\n    display: block;\n    padding: 15px;\n    @media ${size.md} {\n      width: 100%;\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      grid-column-gap: 10px;\n    }\n  }\n`;\n\nconst Button = styled(b.AnimatedBox)`\n  & > button {\n    font-size: 14px;\n    font-family: \"CircularPro-Bold\";\n\n    letter-spacing: 1px;\n    width: 100%;\n    padding: 20px 0;\n    text-transform: uppercase;\n    height: 60px;\n    @media ${size.lg} {\n      width: auto;\n      padding: 0 40px;\n    }\n  }\n  &.button__filled {\n    border-radius: 6px;\n    background-color: ${({ theme }) => theme.colors.primary};\n    & > button {\n      color: ${({ theme }) => theme.colors.white};\n    }\n  }\n\n  &.button__border {\n    border-radius: 6px;\n    margin-top: 15px;\n    margin-left: 0px;\n    @media ${size.md} {\n      margin-top: 0;\n      margin-left: 15px;\n    }\n    & > button {\n      background-color: transparent;\n      border: 1px solid ${({ theme }) => theme.colors.primary__light};\n      color: ${({ theme }) => theme.colors.primary__light};\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.error.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.together.tsx",[],"/Users/ken/Desktop/slack/web/src/components/template/invite/invite.after.tsx",["734"],"import React from \"react\";\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\n// Svg\nimport { PaperPlaneLight } from \"assets/svg\";\n\nexport const AfterInvite: React.FC<{\n  input?: { email: string; name: string; done: boolean };\n  dispatchToggle?: any;\n}> = ({\n  input = { email: \"email@gmail.com\", name: \"name\", done: false },\n  dispatchToggle,\n}) => {\n  return (\n    <>\n      <Header>\n        <b.Flex justifyContent=\"space-between\">\n          <Title>\n            <b.Text>Invites sent</b.Text>\n          </Title>\n        </b.Flex>\n      </Header>\n      <Description>\n        <b.Text>\n          You've invited <span>1 Member</span> to your workspace\n        </b.Text>\n      </Description>\n      <Content>\n        <ContentHeader>\n          <b.Flex>\n            <b.Box className=\"content__section\">\n              <b.Text>Email Address</b.Text>\n            </b.Box>\n            <b.Box className=\"content__section\">\n              <b.Text>Name</b.Text>\n            </b.Box>\n          </b.Flex>\n        </ContentHeader>\n        <Line />\n        <b.Box my={2} width={1}>\n          <b.Flex>\n            <b.Box width={1 / 2}>\n              <b.Text fontSize={14}>{input.name}</b.Text>\n            </b.Box>\n            <b.Box width={1 / 2}>\n              <b.Text fontSize={14}>{input.name}</b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n      </Content>\n      <Footer>\n        <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <b.Box>\n            <b.Flex>\n              <IconWrapper className=\"paper-plane\" mr={2}>\n                <PaperPlaneLight />\n              </IconWrapper>\n              <b.Box>\n                <b.Text>See past invites</b.Text>\n              </b.Box>\n            </b.Flex>\n          </b.Box>\n          <SendButton\n            onClick={() => {\n              dispatchToggle({ type: \"toggle_invite\" });\n            }}\n          >\n            Done\n          </SendButton>\n        </b.Flex>\n      </Footer>\n    </>\n  );\n};\n\nconst Header = styled(b.Box)`\n  margin-bottom: 20px;\n`;\n\nconst Title = styled(b.Box)`\n  & > p {\n    font-family: \"SlackLato-Black\";\n    font-size: 18px;\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.user-plus {\n    & svg {\n      width: 20px;\n      height: 20px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue};\n      }\n    }\n  }\n\n  &.plus-circle {\n    & svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue__light};\n      }\n    }\n  }\n\n  &.google {\n    & svg {\n      width: 18px;\n      height: 18px;\n    }\n  }\n\n  &.paper-plane {\n    & svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst IconButtonWrapper = styled(b.Button)`\n  position: relative;\n  &.close {\n    width: 35px;\n    height: 35px;\n    svg {\n      position: relative;\n      top: 2px;\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.black};\n      }\n    }\n    &:hover {\n      border-radius: 100%;\n      background-color: ${({ theme }) => theme.colors.white__dark};\n    }\n  }\n  &.info {\n    top: 1.5px;\n    svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst Footer = styled(b.Box)`\n  margin-top: 60px;\n\n  & p {\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.gray__light};\n  }\n`;\n\nconst SendButton = styled(b.Button)`\n  background-color: ${({ theme }) => theme.colors.green};\n  padding: 8px 18px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.white};\n  font-family: \"SlackLato-Bold\";\n  font-size: 14px;\n`;\n\nconst Description = styled(b.Box)`\n  & > p {\n    font-family: \"SlackLato-Regular\";\n    font-size: 14px;\n\n    & > span {\n      font-family: \"SlackLato-Bold\";\n    }\n  }\n`;\nconst Content = styled(b.Box)``;\n\nconst ContentHeader = styled(b.Box)`\n  margin: 20px 0 6px 0;\n  & p {\n    font-size: 14px;\n    font-family: \"SlackLato-Bold\";\n  }\n\n  & div {\n    &.content__section {\n      width: 50%;\n    }\n  }\n`;\n\nconst Line = styled(b.Box)`\n  background-color: ${({ theme }) => theme.colors.green};\n  width: 100%;\n  height: 2px;\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.hashtag.tsx",["735"],"import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as b from \"global/blocks\";\n\nimport { ThinHashTag } from \"assets/svg\";\n\nimport { ThemeContext } from \"styled-components\";\n\nexport const HashtagBullet: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  return (\n    <b.Box bottom={1.5}>\n      <ThinHashTag width={8} height={8} fill={theme.colors.pink__light} />\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.workspace.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.confirm.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.launch.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.nav.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/input.password.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.mention.tsx",["736","737","738"],"import React from \"react\";\n\nimport * as b from \"global/blocks\";\n\n// Svgs\nimport { AtSign, Close } from \"assets/svg\";\n\nimport styled from \"styled-components\";\n\nimport { Card } from \"../../molecules/card\";\n\nexport const MentionContent: React.FC<{}> = () => {\n  return (\n    <Bottom>\n      <Notice p={3}>\n        <b.Box>\n          <b.Flex justifyContent=\"space-between\">\n            <NoticeTitle>\n              <b.Flex alignItems=\"center\">\n                <IconWrapper className=\"atsign\" mr={2}>\n                  <AtSign />\n                </IconWrapper>\n                <b.Box mb={1}>\n                  <b.Text>See new activity in real time</b.Text>\n                </b.Box>\n              </b.Flex>\n            </NoticeTitle>\n            <IconWrapper className=\"close\">\n              <Close />\n            </IconWrapper>\n          </b.Flex>\n        </b.Box>\n        <NoticeDescription mt={3}>\n          <b.Text>\n            When people react to your messages or mention you or your keywords,\n            you’ll see it here.\n          </b.Text>\n        </NoticeDescription>\n      </Notice>\n      <div>\n        <Card variant=\"activity\" />\n        <Card variant=\"activity\" />\n      </div>\n    </Bottom>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  display: grid;\n  grid-template-rows: 65px auto;\n\n  & > div {\n    &.top {\n      border-bottom: 1px solid ${({ theme }) => theme.colors.white__dark};\n      height: 100%;\n    }\n\n    &.bottom {\n      height: 100%;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      background-color: ${({ theme }) => theme.colors.white__dark};\n    }\n  }\n`;\n\nconst Top = styled(b.Flex)`\n  justify-content: space-between;\n  align-items: center;\n  height: inherit;\n  padding: 0 19px;\n`;\n\nconst Bottom = styled(b.Box)`\n  width: 100%;\n  padding: 20px 20px 0px 20px;\n  /* margin: 20px 20px 0 20px; */\n`;\n\nconst Section = styled(b.Box)`\n  & > p {\n    color: ${({ theme }) => theme.colors.black__light};\n    font-family: \"SlackLato-Black\";\n    font-size: 15px;\n  }\n`;\n\nconst Notice = styled(b.Box)`\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 25px;\n  border-radius: 10px;\n  margin-bottom: 25px;\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.atsign {\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.orange__dark};\n      }\n    }\n  }\n\n  &.close {\n    svg {\n      width: 13px;\n      height: 13px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n\n  &.sideoption {\n    padding: 8px 10px 6px 10px;\n    background-color: transparent;\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.white__dark};\n      border-radius: 3px;\n    }\n\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n`;\n\nconst NoticeTitle = styled(b.Box)`\n  p {\n    color: ${({ theme }) => theme.colors.black__light};\n    font-size: 18px;\n    font-family: \"SlackLato-Bold\";\n    letter-spacing: -0.025em;\n  }\n`;\n\nconst NoticeDescription = styled(b.Box)`\n  & > p {\n    font-family: \"SlackLato-Regular\";\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.black__light};\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.launch.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.software.tsx",[],"/Users/ken/Desktop/slack/web/src/context/toggle-context.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/input.plain.tsx",[],"/Users/ken/Desktop/slack/web/src/assets/svg/Icons.tsx",["739"],"/Users/ken/Desktop/slack/web/src/global/colors.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.more.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.channel.tsx",["740","741","742","743","744","745"],"import * as React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\n// Svg\nimport { LayerPlus, UserPlus } from \"assets/svg\";\n\n// Components\nimport { useParams } from \"react-router-dom\";\nimport { useGetChannelByIdQuery } from \"generated/graphql\";\n\nimport { MessageContainer } from \"components/Workspace/Channel/Container\";\nimport { MessageBox } from \"components/Workspace/MessageBox\";\nimport { useSendMessageMutation } from \"generated/graphql\";\n\nexport const ChannelContent: React.FC<{}> = () => {\n  const { channelId } = useParams<{ channelId: string }>();\n  // const { data: { getChannelById } = {} } = useGetChannelByIdQuery({\n  //   variables: { channelId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n\n  // const [send] = useSendMessageMutation();\n  // const sendMessage = async (message: string) => {\n  //   if (localStorage.getItem(\"teamId\")) {\n  //     await send({\n  //       variables: {\n  //         channelId,\n  //         teamId: localStorage.getItem(\"teamId\")!,\n  //         body: message,\n  //       },\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Wrapper>\n        <b.Box className=\"section_header\">\n          {/* <Title mb={2}>\n            {getChannelById?.channel && (\n              <b.Text> #{getChannelById?.channel?.name}</b.Text>\n            )}\n          </Title>\n          <Description>\n            <b.Text>\n              <b.Span className=\"creator\">\n                @{getChannelById?.channel?.fullname}\n              </b.Span>{\" \"}\n              created this channel on{\" \"}\n              {getChannelById?.channel?.createdAt\n                .split(\",\")\n                .slice(0, 2)\n                .join(\",\")}\n              . This is the very beginning of the{\" \"}\n              <b.Span className=\"channel_name\">\n                #{getChannelById?.channel?.name}\n              </b.Span>{\" \"}\n              channel. &nbsp;\n              {getChannelById?.channel &&\n                getChannelById?.channel.description &&\n                `Description: ${getChannelById?.channel?.description}`}\n              &nbsp;\n              <b.Span>\n                {getChannelById?.channel &&\n                  getChannelById?.channel.description && (\n                    <>\n                      <b.Span>(</b.Span>\n                      <b.Span className=\"edit_button\">edit</b.Span>\n                      <b.Span>)</b.Span>\n                    </>\n                  )}\n              </b.Span>\n            </b.Text>\n          </Description> */}\n          <Options>\n            <b.Flex alignItems=\"center\">\n              <Option mr={2}>\n                <b.Flex alignItems=\"center\">\n                  <IconWrapper className=\"layer_plus\" mr={2}>\n                    <LayerPlus />\n                  </IconWrapper>\n                  <b.Box>\n                    <b.Text>Add an app</b.Text>\n                  </b.Box>\n                </b.Flex>\n              </Option>\n              <Option>\n                <b.Flex alignItems=\"center\">\n                  <IconWrapper className=\"user_plus\" mr={2}>\n                    <UserPlus />\n                  </IconWrapper>\n                  <b.Box>\n                    <b.Text>Add people</b.Text>\n                  </b.Box>\n                </b.Flex>\n              </Option>\n            </b.Flex>\n          </Options>\n        </b.Box>\n        <MessageContainer />\n        {/* <MessageBox sendMessage={sendMessage} /> */}\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  height: calc(100vh - 65px - 37px);\n  overflow-y: auto;\n  position: relative;\n  & > div {\n    &.section_header {\n      padding: 25px 20px;\n    }\n    &.section_content {\n      position: relative;\n      height: calc(100vh - 65px - 180px- 104px);\n      padding: 40px 20px 40px 20px;\n    }\n  }\n`;\n\nconst Title = styled(b.Box)`\n  & > p {\n    font-size: 28px;\n    font-family: \"SlackLato-Black\";\n  }\n`;\n\nconst Description = styled(b.Box)`\n  & > p {\n    font-size: 18px;\n    line-height: 1.5;\n    span {\n      &.creator {\n        background-color: ${({ theme }) => theme.colors.blue__0};\n        color: ${({ theme }) => theme.colors.blue};\n      }\n      &.channel_name {\n        font-family: \"SlackLato-Bold\";\n      }\n      &.edit_button {\n        color: ${({ theme }) => theme.colors.blue};\n        &:hover {\n          cursor: pointer;\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n`;\n\nconst Options = styled(b.Box)`\n  margin: 15px 0 25px 0;\n`;\n\nconst Option = styled(b.Button)`\n  p {\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.blue__light};\n  }\n  &:hover {\n    & > div {\n      & > div {\n        &:nth-child(1) {\n          & > svg {\n            & > path {\n              fill: ${({ theme }) => theme.colors.blue};\n            }\n          }\n        }\n        &:nth-child(2) {\n          & > p {\n            color: ${({ theme }) => theme.colors.blue};\n          }\n        }\n      }\n    }\n  }\n  &:nth-child(2) {\n    position: relative;\n    top: 2px;\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  position: relative;\n  &.layer_plus {\n    svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue__light};\n      }\n    }\n  }\n  &.user_plus {\n    svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue__light};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.directmessage.tsx",["746","747","748","749","750"],"import React from \"react\";\nimport { useState } from \"react\";\n\n// Components\nimport { MessageContainer } from \"components/Workspace/DirectMessage/Container\";\nimport { MessageBox } from \"components/Workspace/MessageBox\";\n\nimport styled from \"styled-components\";\nimport * as b from \"global/blocks\";\n\n// Styles\n\nimport { useParams } from \"react-router\";\nimport { useSendDirectMessageMutation, useUserQuery } from \"generated/graphql\";\n\nexport const DirectMessageContent: React.FC<{}> = () => {\n  const { userId } = useParams<{ userId: string }>();\n\n  // const { data, loading } = useUserQuery({\n  //   variables: { userId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n  // const [value, setValue] = useState<any>(\n  //   localStorage.getItem(`${userId}`)\n  //     ? JSON.parse(localStorage.getItem(`${userId}`)!)\n  //     : [\n  //         {\n  //           type: \"paragraph\",\n  //           children: [{ text: \"\" }],\n  //         },\n  //       ]\n  // );\n  // const [send] = useSendDirectMessageMutation();\n\n  // const sendMessage = async (message: any) => {\n  //   if (localStorage.getItem(\"teamId\")) {\n  //     await send({\n  //       variables: {\n  //         toId: userId,\n  //         body: message,\n  //       },\n  //     });\n  //   }\n  // };\n\n  return (\n    <Wrapper>\n      <MessageContainer />\n      {/* <MessageBox sendMessage={sendMessage} /> */}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  height: calc(100vh - 65px - 37px);\n  overflow-y: auto;\n  position: relative;\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.thread.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.saved.tsx",["751"],"import React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Svgs\nimport { Bookmark } from \"assets/svg\";\nimport styled from \"styled-components\";\n\nexport const SavedContent: React.FC<{}> = () => {\n  return (\n    <Wrapper>\n      <b.Flex justifyContent=\"center\" alignItems=\"center\">\n        <Bottom>\n          <IconWrapper className=\"bookmark\">\n            <Bookmark />\n          </IconWrapper>\n          <b.Box pt={3} pb={2}>\n            <b.Text fontSize={17} fontFamily=\"SlackLato-Bold\" color=\"black\">\n              Save messages and files to come back to later\n            </b.Text>\n          </b.Box>\n          <b.Box>\n            <b.Text\n              fontSize={15}\n              fontFamily=\"SlackLato-Regular\"\n              color=\"gray__light\"\n            >\n              Mark your to-dos or save something for another time. Only you can\n              see your saved items, so use them however you’d like.\n            </b.Text>\n          </b.Box>\n        </Bottom>\n      </b.Flex>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  height: 100%;\n`;\n\nconst Bottom = styled(b.Box)`\n  max-width: 420px;\n  text-align: center;\n`;\n\nconst SideOption = styled(b.Button)`\n  padding: 8px 10px 6px 10px;\n  background-color: transparent;\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.white__dark};\n    border-radius: 3px;\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.bookmark {\n    svg {\n      width: 26px;\n      height: 26px;\n      path {\n        fill: ${({ theme }) => theme.colors.pink__dark};\n      }\n    }\n  }\n\n  &.transition {\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.find.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.transparent.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.socialmedia.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.getstarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.link.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.banner.tsx",[],"/Users/ken/Desktop/slack/web/src/util/string.ts",["752"],"declare global {\n  interface String {\n    capitalize(): string;\n  }\n}\n\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nexport {};\n","/Users/ken/Desktop/slack/web/src/components/template/invite/invite.before.tsx",[],"/Users/ken/Desktop/slack/web/src/assets/svg/Logo.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.password.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.validation.tsx",[],"/Users/ken/Desktop/slack/web/src/global/globalStyles.ts",[],"/Users/ken/Desktop/slack/web/src/global/globalFonts.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.check.tsx",[],"/Users/ken/Desktop/slack/web/src/global/blocks.ts",[],"/Users/ken/Desktop/slack/web/src/assets/svg/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.channel.tsx",["753","754","755"],"import React, { useContext } from \"react\";\nimport { useState, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled, { ThemeContext } from \"styled-components\";\n// Blocks\nimport * as b from \"../../../global/blocks\";\n\n// Svgs\nimport { Close, Info, ThinHashTag } from \"../../../assets/svg\";\n\n// Components\nimport { Toggle } from \"../../molecules/toggle\";\n\n// Context\nimport { useToggleDispatch } from \"../../../context/toggle-context\";\n\nexport const ChannelModal: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  const [isPrivate, setIsPrivate] = useState(false);\n  return (\n    <b.Box>\n      <b.Box mb={20}>\n        <b.Flex justifyContent=\"space-between\">\n          <b.Box>\n            <b.Text\n              fontFamily=\"SlackLato-Black\"\n              fontSize={28}\n              color={theme.colors.black}\n            >\n              {isPrivate ? \"Create a private channel\" : \"Create a channel\"}\n            </b.Text>\n          </b.Box>\n          <IconButtonWrapper className=\"close\">\n            <Close />\n          </IconButtonWrapper>\n        </b.Flex>\n      </b.Box>\n      <b.Box>\n        <b.Text\n          fontSize={14}\n          lineHeight={1.5}\n          fontFamily=\"SlackLato-Regular\"\n          color={theme.colors.gray__light}\n        >\n          Channels are where your team communicates. They’re best when organized\n          around a topic — #marketing, for example.\n        </b.Text>\n      </b.Box>\n      <SectionHeader>\n        <b.Text>Name</b.Text>\n      </SectionHeader>\n      <NameWrapper>\n        <b.Box>\n          <ThinHashTag />\n        </b.Box>\n        <StyledInput placeholder=\"e.g. plan-budget\" className=\"name\" />\n      </NameWrapper>\n      {/* {error && (\n        <b.Box>\n          <b.Text>{error}</b.Text>\n        </b.Box>\n      )} */}\n      <SectionHeader>\n        <b.Text>Description (optional)</b.Text>\n      </SectionHeader>\n      <b.Box>\n        {/* <StyledInput\n          onChange={(e) =>\n            dispatchInput({\n              type: \"add_description\",\n              payload: e.target.value,\n            })\n          }\n          value={input.description}\n          className=\"description\"\n        /> */}\n      </b.Box>\n      <Hint>\n        <b.Text>What's this channel about?</b.Text>\n      </Hint>\n      <PrivateOption>\n        <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <b.Box>\n            <b.Box className=\"title\">\n              <b.Text>Make Private</b.Text>\n            </b.Box>\n            <b.Box className=\"description\">\n              {isPrivate ? (\n                <b.Text>\n                  <b.Span>This can’t be undone.</b.Span> A private channel\n                  cannot be made public later on.\n                </b.Text>\n              ) : (\n                <b.Text>\n                  When a channel is set to private, it can only be viewed or\n                  joined by invitation.\n                </b.Text>\n              )}\n            </b.Box>\n          </b.Box>\n          <b.Box>\n            <Toggle\n              variant=\"switch\"\n              isOn={isPrivate}\n              switchToggle={() => setIsPrivate((isPrivate) => !isPrivate)}\n            />\n          </b.Box>\n        </b.Flex>\n      </PrivateOption>\n      <b.Box>\n        <b.Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <b.Box>\n            <b.Flex alignItems=\"center\">\n              <IconButtonWrapper className=\"info\">\n                <Info />\n              </IconButtonWrapper>\n              <b.Box>\n                <b.Text\n                  fontSize={15}\n                  color={theme.colors.gray__light}\n                  fontFamily=\"SlackLato-Regular\"\n                >\n                  Learn more\n                </b.Text>\n              </b.Box>\n            </b.Flex>\n          </b.Box>\n          <b.Button\n            borderRadius={5}\n            py={3}\n            px={4}\n            backgroundColor={theme.colors.gray__lighter}\n          >\n            <b.Text\n              fontSize={15}\n              fontFamily=\"SlackLato-Bold\"\n              color={theme.colors.gray}\n            >\n              Create\n            </b.Text>\n          </b.Button>\n        </b.Flex>\n      </b.Box>\n    </b.Box>\n  );\n};\n\nconst IconButtonWrapper = styled(b.Button)`\n  position: relative;\n  &.close {\n    width: 35px;\n    height: 35px;\n    svg {\n      position: relative;\n      top: 2px;\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.black};\n      }\n    }\n\n    &:hover {\n      border-radius: 100%;\n      background-color: ${({ theme }) => theme.colors.white__dark};\n    }\n  }\n  &.info {\n    top: 1.5px;\n    svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst SectionHeader = styled(b.Box)`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  & > p {\n    font-family: \"SlackLato-Bold\";\n    font-size: 14px;\n  }\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid ${({ theme }) => theme.colors.gray__light};\n  font-size: 17px;\n  color: ${({ theme }) => theme.colors.gray};\n  &.name {\n    padding: 12px 0 12px 40px;\n  }\n  &.description {\n    padding: 12px 0 12px 15px;\n  }\n`;\n\nconst Hint = styled(b.Box)`\n  margin-top: 6px;\n  p {\n    font-size: 13px;\n    font-family: \"SlackLato-Light\";\n    color: ${({ theme }) => theme.colors.gray};\n  }\n`;\n\nconst PrivateOption = styled(b.Box)`\n  margin: 30px 0;\n  & > div {\n    & > div {\n      &:nth-child(1) {\n        width: 60%;\n      }\n      &:nth-child(2) {\n        width: auto;\n      }\n    }\n  }\n  div {\n    &.title {\n      margin-bottom: 10px;\n      p {\n        font-size: 15px;\n        font-family: \"SlackLato-Bold\";\n        color: ${({ theme }) => theme.colors.black__light};\n      }\n    }\n    &.description {\n      p {\n        line-height: 1.5;\n        font-family: \"SlackLato-Regular\";\n        font-size: 15px;\n        color: ${({ theme }) => theme.colors.gray__light};\n        span {\n          font-family: \"SlackLato-Bold\";\n          color: ${({ theme }) => theme.colors.gray__darker};\n        }\n      }\n    }\n  }\n`;\n\nconst NameWrapper = styled(b.Box)`\n  position: relative;\n  & > div {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-40%) translateX(100%);\n    svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.primary.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.square.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.reaction.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/template/invite/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.getstarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.available.tsx",[],"/Users/ken/Desktop/slack/web/src/hooks/useTabTitle.ts",["756"],"import { useEffect } from \"react\";\n\nexport const useTabTitle: (name: string) => void = (\n  name = \"Where work happens | Slack\"\n) => {\n  useEffect(() => {\n    document.title = name;\n  }, []);\n};\n",["757","758"],"/Users/ken/Desktop/slack/web/src/animations/Buttons.ts",[],"/Users/ken/Desktop/slack/web/src/components/Workspace/Channel/Container.tsx",["759","760","761","762","763","764","765"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as b from \"global/blocks\";\nimport { Seperator } from \"components/molecules/seperator\";\nimport { Card } from \"../../molecules/card\";\nimport { Wrapper } from \"styles/Workspace/Channel/Container\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\n\nexport const MessageContainer = () => {\n  const { channelId } = useParams<{ channelId: string }>();\n\n  // const subscribeToNewMessages = (latestChannel: string) =>\n  //   subscribeToMore({\n  //     document: SUBSCRIBE_TO_MESSAGES,\n  //     variables: { channelID: latestChannel },\n  //     updateQuery: (prev, { subscriptionData }) => {\n  //       if (!subscriptionData.data) return prev;\n  //       const newMessage = subscriptionData.data.subscribeToMessages;\n  //       return Object.assign({}, prev, {\n  //         fetchMessages: [...prev.fetchMessages, newMessage],\n  //       });\n  //     },\n  //   });\n\n  // useEffect(() => {\n  //   const unsubscribe = subscribeToNewMessages(channelId);\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // }, [channelId, subscribeToNewMessages]);\n\n  // const SUBSCRIBE_TO_MESSAGES = gql`\n  //   subscription SubscribeToMessages($channelID: String!) {\n  //     subscribeToMessages(channelID: $channelID) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const FETCH_MESSAGES = gql`\n  //   query FetchMessages($channelId: String!) {\n  //     fetchMessages(channelId: $channelId) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const {\n  //   subscribeToMore,\n  //   data: fetchMessagesData,\n  //   loading: fetchMessagesLoading,\n  // } = useQuery(FETCH_MESSAGES, {\n  //   variables: { channelId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n\n  // // this gives an object with dates as keys\n\n  // type tplotOptions = {\n  //   [key: string]: {\n  //     id: number;\n  //     fullname: string;\n  //     avatarBackground: string;\n  //     body: string;\n  //     createdAt: string;\n  //   }[];\n  // };\n\n  // let messagesByDates;\n\n  // if (!fetchMessagesLoading && fetchMessagesData) {\n  //   let groups: tplotOptions = fetchMessagesData.fetchMessages.reduce(\n  //     (groups: any, message: any) => {\n  //       const createdAt = message.createdAt.split(\",\").slice(0, 2);\n  //       if (!groups[createdAt]) {\n  //         groups[createdAt] = [];\n  //       }\n  //       groups[createdAt].push(message);\n  //       return groups;\n  //     },\n  //     {}\n  //   );\n  //   messagesByDates = Object.keys(groups).map((createdAt) => {\n  //     return {\n  //       createdAt,\n  //       messages: groups[createdAt],\n  //     };\n  //   });\n  // }\n\n  return (\n    <>\n      <Wrapper>\n        {/* {messagesByDates?.map((element, index) => {\n          return (\n            <React.Fragment key={index}>\n              <DateSeperator\n                date={element.createdAt.split(\",\").slice(0, 2).join(\", \")}\n              />\n              <b.Box className=\"section_content\">\n                {element.messages.map((message, index) => {\n                  return (\n                    <div key={index}>\n                      <Card\n                        variant=\"message\"\n                        id={message.id}\n                        sender={message.fullname}\n                        avatar={message.avatarBackground}\n                        time={message.createdAt}\n                        body={{ type: \"message\", message: message.body }}\n                      />\n                    </div>\n                  );\n                })}\n              </b.Box>\n            </React.Fragment>\n          );\n        })} */}\n      </Wrapper>\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.landing.tsx",["766"],"import React, { useContext } from \"react\";\nimport * as b from \"global/blocks\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n/** assets */\nimport { Globe } from \"assets/svg\";\nimport { BottomArrow } from \"assets/svg\";\nimport { NoNameLogo } from \"assets/svg/Logo\";\n\n/** global */\nimport { size } from \"global/sizes\";\n\n/** components */\nimport { Button } from \"components/atoms/button\";\n\nexport const LandingFooter: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  const options = [\n    { name: \"Status\", url: \"/\" },\n    { name: \"Privacy & Terms\", url: \"/\" },\n    { name: \"Contact Us\", url: \"/\" },\n  ];\n\n  const socialmedias = [\"twitter\", \"facebook\", \"linkedin\", \"youtube\"];\n\n  const sections = [\n    {\n      subsections: [\n        {\n          title: \"Product\",\n          items: [\n            { name: \"Features\", url: \"/\" },\n            { name: \"Enterprise\", url: \"/\" },\n            { name: \"Security\", url: \"/\" },\n            { name: \"Customer Stories\", url: \"/\" },\n            { name: \"Pricing\", url: \"/\" },\n            { name: \"Slack Demo\", url: \"/\" },\n          ],\n        },\n        {\n          title: \"Slack for teams\",\n          items: [\n            { name: \"Engineering\", url: \"/\" },\n            { name: \"Financial Services\", url: \"/\" },\n            { name: \"Sales\", url: \"/\" },\n            { name: \"IT\", url: \"/\" },\n            { name: \"Marketing\", url: \"/\" },\n            { name: \"Customer Support\", url: \"/\" },\n            { name: \"Human Resources\", url: \"/\" },\n            { name: \"Project Management\", url: \"/\" },\n            { name: \"Media\", url: \"/\" },\n          ],\n        },\n      ],\n    },\n    {\n      subsections: [\n        {\n          title: \"Resources\",\n          items: [\n            { name: \"Slack Tips\", url: \"/\" },\n            { name: \"Blog\", url: \"/\" },\n            { name: \"Events\", url: \"/\" },\n            { name: \"Slack Certified Program\", url: \"/\" },\n            { name: \"Help Center\", url: \"/\" },\n            { name: \"API\", url: \"/\" },\n            { name: \"App Directory\", url: \"/\" },\n            { name: \"Download Slack\", url: \"/\" },\n            { name: \"Partners\", url: \"/\" },\n          ],\n        },\n        {\n          title: \"Company\",\n          items: [\n            { name: \"About Us\", url: \"/\" },\n            { name: \"Leadership\", url: \"/\" },\n            { name: \"News\", url: \"/\" },\n            { name: \"Media Kit\", url: \"/\" },\n            { name: \"Careers\", url: \"/\" },\n          ],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div>\n      <b.Box className=\"footer__logo\">\n        <b.Container>\n          <b.Box py={4} className=\"logo\">\n            <b.Flex>\n              <Logo>\n                <NoNameLogo width={65} />\n              </Logo>\n              <Sections>\n                {sections.map((section, index) => {\n                  return (\n                    <b.Box width={1} key={index}>\n                      <b.Flex>\n                        {section.subsections.map((subsection, index) => {\n                          return (\n                            <SectionWrapper key={index}>\n                              <b.Box>\n                                <b.Box py={2}>\n                                  <b.Text\n                                    color={theme.colors.gray__lighter}\n                                    uppercase\n                                    fontSize={14}\n                                    fontFamily=\"CircularPro-Bold\"\n                                  >\n                                    {subsection.title}\n                                  </b.Text>\n                                </b.Box>\n                                <b.Box p={0} m={0}>\n                                  {subsection.items.map((item, index) => {\n                                    return (\n                                      <b.Li py={3} key={index}>\n                                        <b.Text\n                                          fontSize={14}\n                                          color={theme.colors.gray__light}\n                                        >\n                                          {item.name}\n                                        </b.Text>\n                                      </b.Li>\n                                    );\n                                  })}\n                                </b.Box>\n                              </b.Box>\n                            </SectionWrapper>\n                          );\n                        })}\n                      </b.Flex>\n                    </b.Box>\n                  );\n                })}\n              </Sections>\n            </b.Flex>\n          </b.Box>\n        </b.Container>\n      </b.Box>\n      <b.Box className=\"footer__options\">\n        <b.Box py={4}>\n          <b.Container>\n            <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <OptionsWrapper>\n                <b.Flex alignItems=\"center\">\n                  <b.Flex>\n                    {options.map((option, index) => {\n                      return (\n                        <b.Box mr={3} key={index}>\n                          <Button\n                            variant=\"transparent\"\n                            px={4}\n                            py={3}\n                            to={option.url}\n                            content={\n                              <b.Text fontSize={15}>{option.name}</b.Text>\n                            }\n                          />\n                        </b.Box>\n                      );\n                    })}\n                  </b.Flex>\n                  <Button\n                    variant=\"transparent\"\n                    px={4}\n                    py={3}\n                    content={\n                      <b.Flex alignItems=\"center\">\n                        <b.Box mr={1}>\n                          <Globe\n                            width={16}\n                            height={16}\n                            fill={theme.colors.gray}\n                          />\n                        </b.Box>\n                        <b.Text fontSize={15}>Change Region</b.Text>\n                        <b.Box ml={2}>\n                          <b.Box>\n                            <BottomArrow\n                              width={8}\n                              height={8}\n                              fill={theme.colors.gray}\n                            />\n                          </b.Box>\n                        </b.Box>\n                      </b.Flex>\n                    }\n                  />\n                </b.Flex>\n              </OptionsWrapper>\n              <SocialMediaWrapper>\n                {socialmedias.map((socialmedia, index) => {\n                  return (\n                    <div key={index}>\n                      <Button variant=\"socialmedia\" type={socialmedia} />\n                    </div>\n                  );\n                })}\n              </SocialMediaWrapper>\n            </b.Flex>\n          </b.Container>\n        </b.Box>\n      </b.Box>\n      <b.Box backgroundColor={theme.colors.gray__lighter} py={3}>\n        <b.Container>\n          <b.Text fontSize={12}>\n            © Copyright 2020 Slack Technologies, Inc. All rights reserved.\n            Various trademarks held by their respective owners.\n          </b.Text>\n        </b.Container>\n      </b.Box>\n    </div>\n  );\n};\n\nconst OptionsWrapper = styled(b.Box)`\n  & > div {\n    flex-direction: column;\n    @media ${size.sm} {\n      flex-direction: row;\n    }\n  }\n`;\n\nconst Logo = styled(b.Box)`\n  width: 100%;\n  margin-bottom: 30px;\n  @media ${size.md} {\n    width: 35%;\n    margin-bottom: 0;\n  }\n`;\n\nconst Sections = styled(b.Box)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  @media ${size.xs} {\n    flex-direction: row;\n  }\n`;\n\nconst SectionWrapper = styled(b.Flex)`\n  width: 100%;\n  flex-direction: row;\n  @media ${size.xs} {\n    width: 50%;\n  }\n\n  & > div {\n    width: 50%;\n  }\n`;\n\nconst ItemLink = styled(Link)`\n  &:hover {\n    color: #1264a3;\n  }\n`;\n\nconst SocialMediaWrapper = styled(b.Flex)`\n  justify-content: center;\n  @media ${size.sm} {\n    justify-content: flex-end;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/MessageHeader.ts",[],"/Users/ken/Desktop/slack/web/src/components/layout/layout.workspace.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.draft.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Content/DragDrop.ts",[],["767","768"],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Channel/Container.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.hamburger.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.landing.tsx",["769","770","771","772","773","774","775"],"import React, { useState, useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { useToggleDispatch } from \"context/toggle-context\";\n\nimport * as b from \"global/blocks\";\nimport { size } from \"global/sizes\";\n\nimport { NameLogo } from \"assets/svg/Logo\";\n\nimport { Button } from \"components/atoms/button\";\nimport { Modal } from \"components/organisms/modal\";\nimport { useHistory } from \"react-router\";\n\nexport const LandingHeader: React.FC<{}> = () => {\n  return (\n    <div>\n      <b.Box py={3}>\n        <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <b.Box width={1}>\n            <b.Flex alignItems=\"center\">\n              <b.Box mr={3}>\n                <NameLogo width={110} />\n              </b.Box>\n              <Options>\n                <div>\n                  <Button variant=\"nav\" nav=\"why\" />\n                </div>\n                <div>\n                  <Button variant=\"nav\" nav=\"solutions\" />\n                </div>\n                <div>\n                  <Button variant=\"nav\" nav=\"resources\" />\n                </div>\n              </Options>\n            </b.Flex>\n          </b.Box>\n          <div>\n            <Normal>\n              <b.Flex alignItems=\"center\">\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    size=\"sm\"\n                    title=\"Sign in\"\n                    to=\"/signin\"\n                  />\n                </div>\n              </b.Flex>\n            </Normal>\n            <Mobile>\n              <Button variant=\"hamburger\" />\n            </Mobile>\n          </div>\n        </b.Flex>\n      </b.Box>\n    </div>\n  );\n};\n\nconst Normal = styled.div`\n  display: none;\n  @media ${size.sm} {\n    display: block;\n  }\n`;\n\nconst Mobile = styled.div`\n  display: block;\n  @media ${size.sm} {\n    display: none;\n  }\n`;\n\nconst LaunchWrapper = styled(b.Box)`\n  display: none;\n\n  @media ${size.md} {\n    display: block;\n    position: absolute;\n    top: 80px;\n    right: calc(5%);\n    border-radius: 3px;\n  }\n`;\n\nconst Options = styled(b.Flex)`\n  display: none;\n  @media ${size.sm} {\n    display: flex;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.next.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.email.tsx",[],"/Users/ken/Desktop/slack/web/src/util/passwordUtil.ts",[],"/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.message.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.together.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/Container.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Switch.ts",[],["776","777"],"/Users/ken/Desktop/slack/web/src/index.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/Signin.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/FindTeam.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/ConfirmDigit/Dialog.ts",[],["778","779"],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/index.ts",[],["780","781"],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Sections.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Options.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Option.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Channel.ts",[],"/Users/ken/Desktop/slack/web/src/routes/App.tsx",[],"/Users/ken/Desktop/slack/web/src/context/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/layout/layout.getstarted.tsx",["782"],"import React, { useContext } from \"react\";\nimport * as b from \"global/blocks\";\n// Svg\nimport { NameLogo } from \"assets/svg\";\nimport { ThemeContext } from \"styled-components\";\nimport styled from \"styled-components\";\n\nimport { Footer } from \"components/organisms/footer/footer.component\";\n\nexport const GetStartedLayout: React.FC<{\n  children?: any;\n  title?: string;\n  subtitle?: string;\n}> = ({ children, title, subtitle }) => {\n  const theme = useContext(ThemeContext);\n  return (\n    <b.Grid height=\"100%\" gridTemplateRows=\"auto 1fr 100px\">\n      <b.Container>\n        <b.Box mt={3}>\n          <b.Flex justifyContent=\"center\">\n            <b.Box py={2}>\n              <NameLogo\n                width={140}\n                height={60}\n                fill={[\n                  theme.colors.blue__lighter,\n                  theme.colors.green__lighter,\n                  theme.colors.yellow,\n                  theme.colors.red,\n                ]}\n              />\n            </b.Box>\n          </b.Flex>\n          {title && (\n            <b.Box>\n              <b.Text\n                fontSize={48}\n                color=\"black__light\"\n                fontFamily=\"Larsseit-Bold\"\n                textAlign=\"center\"\n              >\n                {title}\n              </b.Text>\n            </b.Box>\n          )}\n          {subtitle && (\n            <b.Box pt={2} pb={4}>\n              <b.Text\n                lineHeight={1.5}\n                textAlign=\"center\"\n                color=\"gray\"\n                fontFamily=\"SlackLato-Regular\"\n                fontSize={20}\n              >\n                {subtitle}\n              </b.Text>\n            </b.Box>\n          )}\n        </b.Box>\n      </b.Container>\n      <b.Box width={1}>\n        <b.Flex justifyContent=\"center\">{children}</b.Flex>\n      </b.Box>\n      <b.Box py={4}>\n        <Footer variant=\"getstarted\" />\n      </b.Box>\n    </b.Grid>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/styles/Landing/index.ts",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.activity.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.choose.tsx",[],"/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/Container.tsx",["783","784","785","786","787","788","789"],"import React from \"react\";\nimport { useEffect } from \"react\";\n\nimport * as b from \"global/blocks\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { MessageHeader } from \"components/Workspace/DirectMessage/MessageHeader\";\n\nimport { Wrapper } from \"styles/Workspace/DirectMessage/Container\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { Seperator } from \"components/molecules/seperator\";\nimport { Card } from \"../../molecules/card\";\n\nexport const MessageContainer = () => {\n  const { userId } = useParams<{ userId: string }>();\n\n  // const subscribeToNewMessages = (latestUser: string) =>\n  //   subscribeToMore({\n  //     document: SUBSCRIBE_TO_DIRECT_MESSAGES,\n  //     variables: { fromId: latestUser },\n  //     updateQuery: (prev, { subscriptionData }) => {\n  //       if (!subscriptionData.data) return prev;\n  //       const newMessage = subscriptionData.data.subscribeToDirectMessages;\n  //       return Object.assign({}, prev, {\n  //         fetchDirectMessages: [...prev.fetchDirectMessages, newMessage],\n  //       });\n  //     },\n  //   });\n\n  // useEffect(() => {\n  //   const unsubscribe = subscribeToNewMessages(userId);\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // }, [userId]);\n\n  // const SUBSCRIBE_TO_DIRECT_MESSAGES = gql`\n  //   subscription SubscribeToDirectMessages($fromId: String!) {\n  //     subscribeToDirectMessages(fromId: $fromId) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const FETCH_DIRECT_MESSAGES = gql`\n  //   query FetchDirectMessages($fromId: String!) {\n  //     fetchDirectMessages(fromId: $fromId) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const {\n  //   subscribeToMore,\n  //   data: fetchDirectMessagesData,\n  //   loading: fetchDirectMessagesLoading,\n  // } = useQuery(FETCH_DIRECT_MESSAGES, {\n  //   variables: { fromId: userId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n\n  // this gives an object with dates as keys\n\n  // type tplotOptions = {\n  //   [key: string]: {\n  //     id: number;\n  //     fullname: string;\n  //     avatarBackground: string;\n  //     body: string;\n  //     createdAt: string;\n  //   }[];\n  // };\n\n  // let messagesByDates;\n\n  // if (!fetchDirectMessagesLoading && fetchDirectMessagesData) {\n  //   let groups: tplotOptions = fetchDirectMessagesData.fetchDirectMessages.reduce(\n  //     (groups: any, message: any) => {\n  //       const createdAt = message.createdAt.split(\",\").slice(0, 2);\n  //       if (!groups[createdAt]) {\n  //         groups[createdAt] = [];\n  //       }\n  //       groups[createdAt].push(message);\n  //       return groups;\n  //     },\n  //     {}\n  //   );\n  //   messagesByDates = Object.keys(groups).map((createdAt) => {\n  //     return {\n  //       createdAt,\n  //       messages: groups[createdAt],\n  //     };\n  //   });\n  // }\n\n  return (\n    <Wrapper>\n      <MessageHeader />\n      {/* {messagesByDates?.map((element, index) => {\n        return (\n          <React.Fragment key={index}>\n            <DateSeperator\n              date={element.createdAt.split(\",\").slice(0, 2).join(\", \")}\n            />\n            <b.Box className=\"section_content\">\n              {element.messages.map((message, index) => {\n                return (\n                  <div key={index}>\n                    <Card\n                      variant=\"message\"\n                      id={message.id}\n                      sender={message.fullname}\n                      avatar={message.avatarBackground}\n                      time={message.createdAt}\n                      body={{ type: \"message\", message: message.body }}\n                    />\n                  </div>\n                );\n              })}\n            </b.Box>\n          </React.Fragment>\n        );\n      })} */}\n    </Wrapper>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.create.tsx",["790"],"import React, { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n/** global */\nimport * as b from \"../../../global/blocks\";\n\n/** assets */\nimport { NameLogo } from \"../../../assets/svg\";\n\nexport const CreateHeader: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  return (\n    <b.Box position=\"sticky\" top=\"0\" zIndex={99}>\n      <b.Box\n        boxShadow=\"0 1px 1px rgba(0, 0, 0, 0.15)\"\n        borderBottom=\"0.5px solid\"\n        borderColor={theme.colors.white__dark}\n        height={70}\n        backgroundColor={theme.colors.white}\n      >\n        <b.Container>\n          <b.Flex alignItems=\"center\" justifyContent=\"center\">\n            <Link to=\"/\">\n              <b.Box mr={4}>\n                <NameLogo width={100} height={60} />\n              </b.Box>\n            </Link>\n          </b.Flex>\n        </b.Container>\n      </b.Box>\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Section.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Message.ts",[],["791","792"],"/Users/ken/Desktop/slack/web/src/global/sizes.ts",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.signin.tsx",[],"/Users/ken/Desktop/slack/web/src/global/token.ts",[],"/Users/ken/Desktop/slack/web/src/assets/fonts/index.tsx",[],"/Users/ken/Desktop/slack/web/src/util/randomColor.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Profile.ts",[],"/Users/ken/Desktop/slack/web/src/pages/Landing.tsx",["793","794","795"],"import { useContext, useEffect } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { ThemeContext } from \"styled-components\";\nimport * as b from \"../global/blocks\";\nimport { Header } from \"../components/organisms/header\";\n\nimport { Footer } from \"../components/organisms/footer/footer.component\";\n\nimport { Modal } from \"../components/organisms/modal\";\nimport { useToggleState } from \"../context/toggle-context\";\nimport { ModalWrapper } from \"../styles/Landing\";\nimport { Prototype } from \"../components/prototype/landing\";\n\nexport const LandingPage: React.FC<{}> = () => {\n  useEffect(() => {\n    document.title = \"Where work happens | Slack\";\n  }, []);\n\n  const state = useToggleState();\n  const theme = useContext(ThemeContext);\n  return (\n    <div>\n      <AnimatePresence>\n        {/* {state.landing && (\n          <ModalWrapper\n            initial={{ width: 0 }}\n            animate={{ width: \"100%\" }}\n            exit={{ width: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <Modal variant=\"landing\" />\n          </ModalWrapper>\n        )} */}\n      </AnimatePresence>\n      <b.Box zIndex={100} backgroundColor={theme.colors.white__darker}>\n        <b.Container>\n          <Header variant=\"landing\" />\n        </b.Container>\n      </b.Box>\n      <Prototype variant=\"banner\" />\n      <Prototype variant=\"together\" />\n      <Prototype variant=\"software\" />\n      <Prototype variant=\"choose\" />\n      <Footer variant=\"landing\" />\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.modal.tsx",["796"],"import React from \"react\";\nimport * as b from \"../../../global/blocks\";\nimport styled from \"styled-components\";\n\ntype Action =\n  | { type: \"add_email\"; payload: string }\n  | { type: \"add_name\"; payload: string };\n\nexport const ModalInput: React.FC<{ value?: string; onChange?: any }> = ({\n  value,\n  onChange,\n}) => {\n  return (\n    <StyledInput>\n      <input value={value} placeholder=\"name@example.com\" onChange={onChange} />\n    </StyledInput>\n  );\n};\n\nconst StyledInput = styled(b.Box)`\n  width: 50%;\n  padding-right: 7px;\n  & > input {\n    width: 100%;\n    border-radius: 5px;\n    border: 1px solid ${({ theme }) => theme.colors.gray__light};\n    font-size: 17px;\n    color: ${({ theme }) => theme.colors.gray};\n    padding: 7px 0 7px 6px;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Messages.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/index.ts",[],"/Users/ken/Desktop/slack/web/src/pages/index.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/GetStarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/seperator/seperator.date.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/index.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/FindTeam/index.ts",[],"/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/MessageHeader.tsx",["797","798","799","800","801"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Styles\nimport {\n  Header,\n  Description,\n  Wrapper,\n  Profile,\n  IconWrapper,\n} from \"styles/Workspace/DirectMessage/MessageHeader\";\n\n// Svgs\nimport { UserAlt } from \"assets/svg\";\n\n// Queries\nimport { useUserQuery } from \"generated/graphql\";\n\nexport const MessageHeader = () => {\n  const { userId } = useParams<{ userId: string }>();\n  // const { data: userData } = useUserQuery({\n  //   variables: {\n  //     userId,\n  //   },\n  // });\n  return (\n    <Wrapper>\n      <b.Box>\n        <b.Flex alignItems=\"center\">\n          <b.Box mr={2}>\n            {/* {userData && userData.user.user && (\n              <Profile\n                backgroundColor={userData.user.user.avatarBackground}\n                mr={2}\n              >\n                <IconWrapper className=\"avatar\">\n                  <UserAlt />\n                </IconWrapper>\n              </Profile>\n            )} */}\n          </b.Box>\n          <Header>\n            {/* {userData && userData.user.user && (\n              <b.Text>{userData.user.user.fullname} </b.Text>\n            )} */}\n          </Header>\n        </b.Flex>\n      </b.Box>\n      <Description>\n        <b.Text>\n          This is the very beginning of your direct message history with &nbsp;\n          {/* {userData && userData.user.user && (\n            <b.Span>@{userData.user.user.fullname}</b.Span>\n          )} */}\n        </b.Text>\n      </Description>\n    </Wrapper>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.switch.tsx",[],"/Users/ken/Desktop/slack/web/src/animations/FadeInStagger.ts",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.workspace.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.menu.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/option.profile.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/option.menu.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/option.status.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.auth.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.email.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/Client.tsx",["802"],"import { Layout } from \"components/layout\";\nimport { Modal } from \"components/organisms/modal\";\nimport { Sidebar } from \"components/organisms/sidebar\";\nimport { Prototype } from \"components/prototype/client\";\nimport { useToggleState } from \"context/toggle-context\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as b from \"global/blocks\";\nimport { Header } from \"components/organisms/header\";\nimport { useClientState } from \"context/client-context\";\n\nexport const ClientPage: React.FC<{}> = () => {\n  const { teamId, variant } = useParams<{ teamId: string; variant?: string }>();\n  const { selected } = useClientState();\n\n  const { skip } = useToggleState();\n  // fetch data using teamid\n  return (\n    <div>\n      <Layout\n        variant=\"workspace\"\n        header={!variant && <Header variant=\"client\" />}\n        sidebar={<Sidebar variant={variant} />}\n        content={<Prototype variant={variant || selected} />}\n      />\n      {skip && (\n        <b.Box\n          position=\"absolute\"\n          top={0}\n          bottom={0}\n          right={0}\n          left={0}\n          bg=\"rgba(0, 0, 0, 0.7)\"\n        >\n          <b.Box height=\"100%\" width=\"100%\">\n            <b.Flex justifyContent=\"center\" alignItems=\"center\">\n              <Modal variant=\"skip\" criteria={skip} />\n            </b.Flex>\n          </b.Box>\n        </b.Box>\n      )}\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/client/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/client/setup-team-name.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/client/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/get-started/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/get-started/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/get-started/getstarted.create.tsx",["803"],"import React, { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport * as b from \"../../../global/blocks\";\n\nimport { Button } from \"../../atoms/button\";\n\n// Image\nimport { Input } from \"components/atoms/input\";\n\nexport const CreateGetStarted: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  return (\n    <div>\n      <b.Box mb={3}>\n        <Input variant=\"plain\" type=\"email\" />\n      </b.Box>\n      <div>\n        <Button variant=\"confirm\" label=\"Continue\" block py={10} />\n      </div>\n      <b.Box my={3}>\n        <b.Flex>\n          <b.Box mr={2}></b.Box>\n          <b.Box>\n            <b.Text>It's okay to send me emails about Slack.</b.Text>\n          </b.Box>\n        </b.Flex>\n      </b.Box>\n      <b.Box>\n        <b.Text fontSize={14} color={theme.colors.gray__light}>\n          By continuing, you're agreeing to our Customer Terms of Service,\n          Privacy Policy, and Cookie Policy.\n        </b.Text>\n      </b.Box>\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/get-started/getstarted.confirmdigit.tsx",["804","805","806","807","808","809","810","811","812","813","814"],"import { useContext } from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styled, { ThemeContext } from \"styled-components\";\n\n// Components\nimport * as b from \"global/blocks\";\nimport { Layout } from \"components/layout\";\nimport { Button } from \"components/atoms/button\";\n\nimport {\n  LoadingText,\n  Rotate,\n  spinTransition,\n} from \"styles/ConfirmDigit/Dialog\";\nimport { Warning } from \"assets/svg\";\n\nexport const ConfirmDigitGetStarted: React.FC<{}> = () => {\n  const input_1: any = useRef(null);\n  const input_2: any = useRef(null);\n  const input_3: any = useRef(null);\n  const input_4: any = useRef(null);\n  const input_5: any = useRef(null);\n  const input_6: any = useRef(null);\n  const formRef = useRef(null);\n\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n\n  const [first, setFirst] = useState(\"\");\n  const [second, setSecond] = useState(\"\");\n  const [third, setThird] = useState(\"\");\n  const [fourth, setFourth] = useState(\"\");\n  const [fifth, setFifth] = useState(\"\");\n  const [sixth, setSixth] = useState(\"\");\n\n  const location: any = useLocation();\n\n  useEffect(() => {\n    if (first && second && third && fourth && fifth && sixth) {\n      sendQuery();\n    }\n  }, [first, second, third, fourth, fifth, sixth]);\n\n  const sendQuery = async () => {\n    try {\n      const newDigit = parseInt(\n        `${first}${second}${third}${fourth}${fifth}${sixth}`,\n        10\n      );\n    } catch (err) {\n      setError(\"something went awfully wrong\");\n    }\n  };\n\n  return (\n    <div>\n      <b.Box mb={5}>\n        <form\n          ref={formRef}\n          onSubmit={() => {\n            console.log(`${first}`);\n          }}\n        >\n          <b.Box>\n            <b.Flex justifyContent=\"center\">\n              <b.Box>\n                <b.Flex>\n                  <b.Box>\n                    <TextInput\n                      type=\"text\"\n                      className={first !== \"\" ? `added input_1` : `input_1`}\n                      ref={input_1}\n                      maxLength={1}\n                      onChange={(e: any) => {\n                        setFirst(e.target?.value);\n                        input_2.current!.focus();\n                      }}\n                    />\n                  </b.Box>\n                  <b.Box>\n                    <TextInput\n                      className={second !== \"\" ? `added input_2` : `input_2`}\n                      ref={input_2}\n                      maxLength={1}\n                      onChange={(e: any) => {\n                        setSecond(e.target?.value);\n                        input_3.current!.focus();\n                      }}\n                    />\n                  </b.Box>\n                  <b.Box>\n                    <TextInput\n                      className={third !== \"\" ? `added input_3` : `input_3`}\n                      ref={input_3}\n                      maxLength={1}\n                      onChange={(e: any) => {\n                        setThird(e.target?.value);\n                        input_4.current!.focus();\n                      }}\n                    />\n                  </b.Box>\n                </b.Flex>\n              </b.Box>\n              <b.Box mx={3}>\n                <b.Flex alignItems=\"center\">\n                  <b.Box>\n                    <b.Text fontFamily=\"SlackLato-Thin\" fontSize={32}>\n                      -\n                    </b.Text>\n                  </b.Box>\n                </b.Flex>\n              </b.Box>\n              <b.Box>\n                <b.Flex>\n                  <b.Box>\n                    <TextInput\n                      className={fourth !== \"\" ? `added input_4` : `input_4`}\n                      ref={input_4}\n                      maxLength={1}\n                      onChange={(e: any) => {\n                        setFourth(e.target?.value);\n                        input_5.current!.focus();\n                      }}\n                    />\n                  </b.Box>\n                  <b.Box>\n                    <TextInput\n                      className={fifth !== \"\" ? `added input_5` : `input_5`}\n                      ref={input_5}\n                      maxLength={1}\n                      onChange={(e: any) => {\n                        setFifth(e.target?.value);\n\n                        input_6.current!.focus();\n                      }}\n                    />\n                  </b.Box>\n                  <b.Box>\n                    <TextInput\n                      className={sixth !== \"\" ? `added input_6` : `input_6`}\n                      ref={input_6}\n                      maxLength={1}\n                      onChange={(e: any) => {\n                        setSixth(e.target?.value);\n                      }}\n                    />\n                  </b.Box>\n                </b.Flex>\n              </b.Box>\n            </b.Flex>\n          </b.Box>\n        </form>\n      </b.Box>\n      <b.Flex justifyContent=\"Center\">\n        <b.Box>\n          <b.Flex justifyContent=\"center\">\n            <b.Box mx={3}>\n              <Button variant=\"email\" type=\"gmail\"></Button>\n            </b.Box>\n            <b.Box mx={3}>\n              <Button variant=\"email\" type=\"outlook\"></Button>\n            </b.Box>\n          </b.Flex>\n          <b.Box>\n            <b.Text>Can’t find your code? Check your spam folder!</b.Text>\n          </b.Box>\n        </b.Box>\n      </b.Flex>\n    </div>\n  );\n};\n\nconst TextInput = styled.input`\n  font-size: 56px;\n  width: 80px;\n  padding: 15px 0 15px 37px;\n  border: 0.5px solid gray;\n  color: ${({ theme }) => theme.colors.black};\n\n  &:focus {\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  }\n\n  &.added {\n    padding: 15px 0 15px 23px;\n  }\n\n  &.input_1 {\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n  }\n\n  &.input_2 {\n    border-top: 0.5px solid gray;\n    border-left: none;\n\n    &:focus {\n      border-left: 0.5px solid gray;\n    }\n  }\n\n  &.input_3 {\n    border-top: 0.5px solid gray;\n    border-left: none;\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  &.input_4 {\n    border-top: 0.5px solid gray;\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n  }\n\n  &.input_5 {\n    border-top: 0.5px solid gray;\n    border-left: none;\n    &:focus {\n      border-left: 0.5px solid gray;\n    }\n  }\n\n  &.input_6 {\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-left: none;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/layout/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/client/setup-channels.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/client/setup-invites.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/setup-channels.tsx",["815"],"import React, { useContext } from \"react\";\nimport * as b from \"global/blocks\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nexport const SetupChannelsSidebar: React.FC<{ label?: string }> = ({\n  label,\n}) => {\n  const theme = useContext(ThemeContext);\n  return (\n    <b.Box\n      px={3}\n      py={20}\n      bg={theme.colors.primary}\n      borderBottom=\"1px solid\"\n      borderColor={theme.colors.primary__lighter}\n    >\n      <b.Text\n        color={theme.colors.white}\n        fontSize={13}\n        fontFamily=\"SlackLato-Bold\"\n      >\n        {label}\n      </b.Text>\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/setup-team-name.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/setup-invites.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/auth/index.tsx",["816"],"import React from \"react\";\n\nimport * as b from \"../../../global/blocks\";\n\n/** variants */\nimport { SignUpAuth } from \"./auth.signup\";\nimport { FindAuth } from \"./auth.find\";\nimport { InvitedAuth } from \"./auth.invited\";\nimport { WorkspacesAuth } from \"./auth.workspaces\";\nimport { css } from \"styled-components\";\n\nexport interface PrototypeProps {\n  variant: string;\n  extendsTo?: any;\n  [property: string]: any;\n}\n\nexport const Prototype: React.FC<PrototypeProps> = ({\n  variant = \"signin\",\n  extendsTo,\n  width,\n  ...props\n}) => {\n  const variants: {\n    [variant: string]: {\n      component: JSX.Element;\n      [property: string]: any;\n    };\n  } = {\n    signup: {\n      component: <SignUpAuth {...props} />,\n    },\n    find: {\n      component: <FindAuth {...props} />,\n    },\n    invited: {\n      component: <InvitedAuth {...props} />,\n    },\n    workspaces: {\n      component: <WorkspacesAuth {...props} />,\n    },\n  };\n  return (\n    <b.Box\n      data-testid={`${variant}-auth`}\n      extends={variants[variant].extendsTo}\n      style={extendsTo}\n      width={width}\n    >\n      {variants[variant].component}\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.signup.tsx",["817","818","819","820"],"import React, { useState } from \"react\";\nimport * as b from \"global/blocks\";\nimport { Input } from \"components/atoms/input\";\nimport { Dialog } from \"components/atoms/dialog/dialog.component\";\nimport { Button } from \"components/atoms/button\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  emailRegex,\n  fullNameRegex,\n  weakRegex,\n} from \"../../../util/passwordUtil\";\nimport { randomColor } from \"../../../util/randomColor\";\nimport { profile } from \"global/colors\";\n\nexport const SignUpAuth: React.FC<{}> = () => {\n  const history = useHistory();\n  const [info, setInfo] = useState({\n    fullname: \"\",\n    password: \"\",\n    email: \"\",\n  });\n  const [errorLog, setErrorLog] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const createAccount = async () => {\n    if (!info.fullname) {\n      displayError(\"Whoops! You forgot your name!\");\n      return;\n    }\n\n    if (!info.fullname.match(fullNameRegex)) {\n      displayError(\"I want your full name! Not your nickname!\");\n      return;\n    }\n\n    if (!info.email) {\n      displayError(\"Wait,, you forgot your email!\");\n      return;\n    }\n\n    if (!info.email.match(emailRegex)) {\n      displayError(\"Is this really an email?\");\n      return;\n    }\n\n    if (!info.password.match(weakRegex)) {\n      displayError(\"The password is not 6 characters! Give it another try!\");\n      return;\n    }\n\n    const avatarBackground = randomColor(profile);\n  };\n\n  const displayError = (phrase: string) => {\n    setErrorLog(phrase);\n    setTimeout(() => {\n      setErrorLog(\"\");\n    }, 5000);\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        createAccount();\n      }}\n    >\n      <div>\n        <b.Box mt={3}>\n          {[\n            {\n              value: \"fullname\",\n              variant: \"plain\",\n            },\n            {\n              value: \"email\",\n              variant: \"plain\",\n            },\n            {\n              value: \"password\",\n              variant: \"password\",\n            },\n          ].map((params, index) => (\n            <b.Box my={2} key={index}>\n              <Input setInfo={setInfo} info={info} {...params} />\n            </b.Box>\n          ))}\n        </b.Box>\n        <div>\n          <Dialog variant=\"error\" error={errorLog} />\n        </div>\n        <div>\n          <Button variant=\"confirm\" block />\n        </div>\n      </div>\n    </form>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.find.tsx",["821","822"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Input } from \"components/atoms/input\";\nimport * as b from \"global/blocks\";\nimport { emailRegex } from \"util/passwordUtil\";\nimport { Dialog } from \"components/atoms/dialog/dialog.component\";\nimport { Button } from \"components/atoms/button\";\n\nexport const FindAuth: React.FC<{}> = () => {\n  // const [check, { data }] = useCheckEmailLazyQuery();\n  const [info, setInfo] = useState({\n    email: \"\",\n  });\n  return (\n    <div>\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault();\n          // check({ variables: { email: info.email } });\n        }}\n      >\n        <b.Box my={2}>\n          <Input\n            variant=\"plain\"\n            setInfo={setInfo}\n            info={info}\n            value=\"email\"\n            placeholder=\"name@work-email.com\"\n            criteria={info.email?.match(emailRegex)}\n          />\n        </b.Box>\n\n        <b.Box height={35} my={2}>\n          {/* {data?.checkEmail && (\n            <b.Box>\n              <Dialog variant=\"error\" />\n            </b.Box>\n          )} */}\n        </b.Box>\n        <b.Box>\n          <Button variant=\"confirm\" loading={false} block />\n        </b.Box>\n      </form>\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.invited.tsx",["823","824","825","826","827","828","829"],"import React, { useState } from \"react\";\nimport { useParams, Redirect, useHistory } from \"react-router-dom\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport { Dialog } from \"components/atoms/dialog\";\n\n// Utils\nimport { Input } from \"components/atoms/input\";\n\nimport { fullNameRegex, weakRegex } from \"util/passwordUtil\";\nimport { randomColor } from \"util/randomColor\";\nimport { profile } from \"global/colors\";\n\nimport { Button } from \"components/atoms/button\";\n\nexport const InvitedAuth: React.FC<{}> = () => {\n  const { invitorId, token } = useParams<{\n    invitorId: string;\n    token: string;\n  }>();\n\n  const history = useHistory();\n\n  const [info, setInfo] = useState({\n    fullname: \"\",\n    password: \"\",\n  });\n  const [errorLog, setErrorLog] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const displayError = (phrase: string) => {\n    setErrorLog(phrase);\n    setTimeout(() => {\n      setErrorLog(\"\");\n    }, 5000);\n  };\n\n  const createAccount = async () => {\n    if (!info.fullname) {\n      displayError(\"Whoops! You forgot your name!\");\n      return;\n    }\n\n    if (!info.password) {\n      displayError(\"Password field is empty\");\n      return;\n    }\n\n    if (!info.fullname.match(fullNameRegex)) {\n      displayError(\"I want your full name! Not your nickname!\");\n      return;\n    }\n\n    if (!info.password.match(weakRegex)) {\n      displayError(\"The password is not 6 characters! Give it another try!\");\n      return;\n    }\n\n    const avatarBackground = randomColor(profile);\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          createAccount();\n        }}\n      >\n        {[\n          {\n            value: \"fullname\",\n            variant: \"plain\",\n          },\n          { value: \"password\", variant: \"password\" },\n        ].map((params, index) => (\n          <b.Box key={index}>\n            <Input invite info={info} setInfo={setInfo} {...params} />\n          </b.Box>\n        ))}\n        <Dialog variant=\"error\" error={errorLog} />\n        <b.Box mt={3}>\n          <Button variant=\"confirm\" block />\n        </b.Box>\n      </form>\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/auth/auth.workspaces.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/signin/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/signin/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.skip.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.modal.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.close.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/plain.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.client.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.search.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.avatar.tsx",[],"/Users/ken/Desktop/slack/web/src/components/layout/layout.content.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/client/channel.tsx",[],"/Users/ken/Desktop/slack/web/src/context/client-context.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.add.tsx",[],{"ruleId":"830","replacedBy":"831"},{"ruleId":"832","replacedBy":"833"},{"ruleId":"830","replacedBy":"834"},{"ruleId":"832","replacedBy":"835"},{"ruleId":"836","severity":1,"message":"837","line":15,"column":3,"nodeType":"838","messageId":"839","endLine":15,"endColumn":28},{"ruleId":"836","severity":1,"message":"840","line":16,"column":3,"nodeType":"838","messageId":"839","endLine":16,"endColumn":25},{"ruleId":"836","severity":1,"message":"841","line":25,"column":9,"nodeType":"838","messageId":"839","endLine":25,"endColumn":23},{"ruleId":"836","severity":1,"message":"842","line":129,"column":7,"nodeType":"838","messageId":"839","endLine":129,"endColumn":24},{"ruleId":"836","severity":1,"message":"843","line":2,"column":8,"nodeType":"838","messageId":"839","endLine":2,"endColumn":14},{"ruleId":"836","severity":1,"message":"844","line":48,"column":7,"nodeType":"838","messageId":"839","endLine":48,"endColumn":14},{"ruleId":"836","severity":1,"message":"845","line":68,"column":7,"nodeType":"838","messageId":"839","endLine":68,"endColumn":10},{"ruleId":"836","severity":1,"message":"846","line":81,"column":7,"nodeType":"838","messageId":"839","endLine":81,"endColumn":14},{"ruleId":"836","severity":1,"message":"847","line":439,"column":11,"nodeType":"838","messageId":"839","endLine":439,"endColumn":16},{"ruleId":"836","severity":1,"message":"840","line":13,"column":10,"nodeType":"838","messageId":"839","endLine":13,"endColumn":32},{"ruleId":"836","severity":1,"message":"848","line":16,"column":10,"nodeType":"838","messageId":"839","endLine":16,"endColumn":20},{"ruleId":"836","severity":1,"message":"849","line":17,"column":10,"nodeType":"838","messageId":"839","endLine":17,"endColumn":32},{"ruleId":"836","severity":1,"message":"850","line":20,"column":11,"nodeType":"838","messageId":"839","endLine":20,"endColumn":20},{"ruleId":"836","severity":1,"message":"851","line":127,"column":7,"nodeType":"838","messageId":"839","endLine":127,"endColumn":12},{"ruleId":"836","severity":1,"message":"852","line":134,"column":7,"nodeType":"838","messageId":"839","endLine":134,"endColumn":18},{"ruleId":"836","severity":1,"message":"853","line":2,"column":10,"nodeType":"838","messageId":"839","endLine":2,"endColumn":18},{"ruleId":"836","severity":1,"message":"848","line":6,"column":10,"nodeType":"838","messageId":"839","endLine":6,"endColumn":20},{"ruleId":"836","severity":1,"message":"854","line":14,"column":10,"nodeType":"838","messageId":"839","endLine":14,"endColumn":38},{"ruleId":"836","severity":1,"message":"855","line":14,"column":40,"nodeType":"838","messageId":"839","endLine":14,"endColumn":52},{"ruleId":"836","severity":1,"message":"856","line":17,"column":11,"nodeType":"838","messageId":"839","endLine":17,"endColumn":17},{"ruleId":"836","severity":1,"message":"857","line":48,"column":7,"nodeType":"838","messageId":"839","endLine":48,"endColumn":17},{"ruleId":"858","severity":1,"message":"859","line":7,"column":1,"nodeType":"860","messageId":"861","endLine":9,"endColumn":2},{"ruleId":"836","severity":1,"message":"862","line":2,"column":20,"nodeType":"838","messageId":"839","endLine":2,"endColumn":30},{"ruleId":"836","severity":1,"message":"863","line":3,"column":10,"nodeType":"838","messageId":"839","endLine":3,"endColumn":19},{"ruleId":"836","severity":1,"message":"864","line":15,"column":10,"nodeType":"838","messageId":"839","endLine":15,"endColumn":27},{"ruleId":"865","severity":1,"message":"866","line":8,"column":6,"nodeType":"867","endLine":8,"endColumn":8,"suggestions":"868"},{"ruleId":"830","replacedBy":"869"},{"ruleId":"832","replacedBy":"870"},{"ruleId":"836","severity":1,"message":"871","line":1,"column":17,"nodeType":"838","messageId":"839","endLine":1,"endColumn":26},{"ruleId":"836","severity":1,"message":"872","line":3,"column":13,"nodeType":"838","messageId":"839","endLine":3,"endColumn":14},{"ruleId":"836","severity":1,"message":"873","line":4,"column":10,"nodeType":"838","messageId":"839","endLine":4,"endColumn":19},{"ruleId":"836","severity":1,"message":"874","line":5,"column":10,"nodeType":"838","messageId":"839","endLine":5,"endColumn":14},{"ruleId":"836","severity":1,"message":"875","line":7,"column":8,"nodeType":"838","messageId":"839","endLine":7,"endColumn":11},{"ruleId":"836","severity":1,"message":"876","line":8,"column":10,"nodeType":"838","messageId":"839","endLine":8,"endColumn":18},{"ruleId":"836","severity":1,"message":"850","line":11,"column":11,"nodeType":"838","messageId":"839","endLine":11,"endColumn":20},{"ruleId":"836","severity":1,"message":"877","line":257,"column":7,"nodeType":"838","messageId":"839","endLine":257,"endColumn":15},{"ruleId":"830","replacedBy":"878"},{"ruleId":"832","replacedBy":"879"},{"ruleId":"836","severity":1,"message":"853","line":1,"column":17,"nodeType":"838","messageId":"839","endLine":1,"endColumn":25},{"ruleId":"836","severity":1,"message":"880","line":1,"column":27,"nodeType":"838","messageId":"839","endLine":1,"endColumn":37},{"ruleId":"836","severity":1,"message":"881","line":2,"column":18,"nodeType":"838","messageId":"839","endLine":2,"endColumn":30},{"ruleId":"836","severity":1,"message":"864","line":4,"column":10,"nodeType":"838","messageId":"839","endLine":4,"endColumn":27},{"ruleId":"836","severity":1,"message":"882","line":12,"column":10,"nodeType":"838","messageId":"839","endLine":12,"endColumn":15},{"ruleId":"836","severity":1,"message":"883","line":13,"column":10,"nodeType":"838","messageId":"839","endLine":13,"endColumn":20},{"ruleId":"836","severity":1,"message":"884","line":75,"column":7,"nodeType":"838","messageId":"839","endLine":75,"endColumn":20},{"ruleId":"830","replacedBy":"885"},{"ruleId":"832","replacedBy":"886"},{"ruleId":"830","replacedBy":"887"},{"ruleId":"832","replacedBy":"888"},{"ruleId":"830","replacedBy":"889"},{"ruleId":"832","replacedBy":"890"},{"ruleId":"836","severity":1,"message":"843","line":6,"column":8,"nodeType":"838","messageId":"839","endLine":6,"endColumn":14},{"ruleId":"836","severity":1,"message":"871","line":2,"column":10,"nodeType":"838","messageId":"839","endLine":2,"endColumn":19},{"ruleId":"836","severity":1,"message":"872","line":4,"column":13,"nodeType":"838","messageId":"839","endLine":4,"endColumn":14},{"ruleId":"836","severity":1,"message":"875","line":12,"column":8,"nodeType":"838","messageId":"839","endLine":12,"endColumn":11},{"ruleId":"836","severity":1,"message":"876","line":13,"column":10,"nodeType":"838","messageId":"839","endLine":13,"endColumn":18},{"ruleId":"836","severity":1,"message":"873","line":14,"column":10,"nodeType":"838","messageId":"839","endLine":14,"endColumn":19},{"ruleId":"836","severity":1,"message":"874","line":15,"column":10,"nodeType":"838","messageId":"839","endLine":15,"endColumn":14},{"ruleId":"836","severity":1,"message":"856","line":18,"column":11,"nodeType":"838","messageId":"839","endLine":18,"endColumn":17},{"ruleId":"836","severity":1,"message":"843","line":2,"column":8,"nodeType":"838","messageId":"839","endLine":2,"endColumn":14},{"ruleId":"830","replacedBy":"891"},{"ruleId":"832","replacedBy":"892"},{"ruleId":"836","severity":1,"message":"882","line":9,"column":10,"nodeType":"838","messageId":"839","endLine":9,"endColumn":15},{"ruleId":"836","severity":1,"message":"893","line":11,"column":10,"nodeType":"838","messageId":"839","endLine":11,"endColumn":22},{"ruleId":"836","severity":1,"message":"894","line":19,"column":9,"nodeType":"838","messageId":"839","endLine":19,"endColumn":14},{"ruleId":"836","severity":1,"message":"895","line":5,"column":6,"nodeType":"838","messageId":"839","endLine":5,"endColumn":12},{"ruleId":"836","severity":1,"message":"896","line":12,"column":3,"nodeType":"838","messageId":"839","endLine":12,"endColumn":10},{"ruleId":"836","severity":1,"message":"897","line":13,"column":3,"nodeType":"838","messageId":"839","endLine":13,"endColumn":14},{"ruleId":"836","severity":1,"message":"898","line":17,"column":10,"nodeType":"838","messageId":"839","endLine":17,"endColumn":17},{"ruleId":"836","severity":1,"message":"855","line":20,"column":10,"nodeType":"838","messageId":"839","endLine":20,"endColumn":22},{"ruleId":"836","severity":1,"message":"856","line":23,"column":11,"nodeType":"838","messageId":"839","endLine":23,"endColumn":17},{"ruleId":"836","severity":1,"message":"899","line":13,"column":11,"nodeType":"838","messageId":"839","endLine":13,"endColumn":17},{"ruleId":"836","severity":1,"message":"843","line":2,"column":8,"nodeType":"838","messageId":"839","endLine":2,"endColumn":14},{"ruleId":"836","severity":1,"message":"900","line":8,"column":10,"nodeType":"838","messageId":"839","endLine":8,"endColumn":16},{"ruleId":"836","severity":1,"message":"901","line":12,"column":3,"nodeType":"838","messageId":"839","endLine":12,"endColumn":14},{"ruleId":"836","severity":1,"message":"902","line":13,"column":3,"nodeType":"838","messageId":"839","endLine":13,"endColumn":9},{"ruleId":"836","severity":1,"message":"903","line":14,"column":3,"nodeType":"838","messageId":"839","endLine":14,"endColumn":17},{"ruleId":"836","severity":1,"message":"904","line":16,"column":10,"nodeType":"838","messageId":"839","endLine":16,"endColumn":17},{"ruleId":"836","severity":1,"message":"905","line":27,"column":9,"nodeType":"838","messageId":"839","endLine":27,"endColumn":16},{"ruleId":"836","severity":1,"message":"906","line":28,"column":10,"nodeType":"838","messageId":"839","endLine":28,"endColumn":15},{"ruleId":"836","severity":1,"message":"907","line":37,"column":9,"nodeType":"838","messageId":"839","endLine":37,"endColumn":22},{"ruleId":"865","severity":1,"message":"908","line":43,"column":6,"nodeType":"867","endLine":43,"endColumn":50,"suggestions":"909"},{"ruleId":"836","severity":1,"message":"910","line":47,"column":13,"nodeType":"838","messageId":"839","endLine":47,"endColumn":21},{"ruleId":"836","severity":1,"message":"911","line":56,"column":9,"nodeType":"838","messageId":"839","endLine":56,"endColumn":14},{"ruleId":"836","severity":1,"message":"843","line":3,"column":8,"nodeType":"838","messageId":"839","endLine":3,"endColumn":14},{"ruleId":"836","severity":1,"message":"912","line":10,"column":10,"nodeType":"838","messageId":"839","endLine":10,"endColumn":13},{"ruleId":"836","severity":1,"message":"905","line":16,"column":9,"nodeType":"838","messageId":"839","endLine":16,"endColumn":16},{"ruleId":"836","severity":1,"message":"913","line":23,"column":10,"nodeType":"838","messageId":"839","endLine":23,"endColumn":17},{"ruleId":"836","severity":1,"message":"914","line":23,"column":19,"nodeType":"838","messageId":"839","endLine":23,"endColumn":29},{"ruleId":"836","severity":1,"message":"915","line":51,"column":11,"nodeType":"838","messageId":"839","endLine":51,"endColumn":27},{"ruleId":"836","severity":1,"message":"916","line":2,"column":10,"nodeType":"838","messageId":"839","endLine":2,"endColumn":18},{"ruleId":"836","severity":1,"message":"917","line":6,"column":10,"nodeType":"838","messageId":"839","endLine":6,"endColumn":16},{"ruleId":"836","severity":1,"message":"916","line":2,"column":21,"nodeType":"838","messageId":"839","endLine":2,"endColumn":29},{"ruleId":"836","severity":1,"message":"918","line":19,"column":11,"nodeType":"838","messageId":"839","endLine":19,"endColumn":20},{"ruleId":"836","severity":1,"message":"919","line":19,"column":22,"nodeType":"838","messageId":"839","endLine":19,"endColumn":27},{"ruleId":"836","severity":1,"message":"905","line":24,"column":9,"nodeType":"838","messageId":"839","endLine":24,"endColumn":16},{"ruleId":"836","severity":1,"message":"913","line":31,"column":10,"nodeType":"838","messageId":"839","endLine":31,"endColumn":17},{"ruleId":"836","severity":1,"message":"914","line":31,"column":19,"nodeType":"838","messageId":"839","endLine":31,"endColumn":29},{"ruleId":"836","severity":1,"message":"915","line":61,"column":11,"nodeType":"838","messageId":"839","endLine":61,"endColumn":27},"no-native-reassign",["920"],"no-negated-in-lhs",["921"],["920"],["921"],"@typescript-eslint/no-unused-vars","'useGetBelongingUsersQuery' is defined but never used.","Identifier","unusedVar","'useGetChannelByIdQuery' is defined but never used.","'dispatchToggle' is assigned a value but never used.","'IconButtonWrapper' is assigned a value but never used.","'styled' is defined but never used.","'Wrapper' is assigned a value but never used.","'Top' is assigned a value but never used.","'Section' is assigned a value but never used.","'Props' is defined but never used.","'MessageBox' is defined but never used.","'useSendMessageMutation' is defined but never used.","'channelId' is assigned a value but never used.","'Title' is assigned a value but never used.","'Description' is assigned a value but never used.","'useState' is defined but never used.","'useSendDirectMessageMutation' is defined but never used.","'useUserQuery' is defined but never used.","'userId' is assigned a value but never used.","'SideOption' is assigned a value but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'useReducer' is defined but never used.","'useParams' is defined but never used.","'useToggleDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["922"],["920"],["921"],"'useEffect' is defined but never used.","'b' is defined but never used.","'Seperator' is defined but never used.","'Card' is defined but never used.","'gql' is defined but never used.","'useQuery' is defined but never used.","'ItemLink' is assigned a value but never used.",["920"],["921"],"'useContext' is defined but never used.","'ThemeContext' is defined but never used.","'Modal' is defined but never used.","'useHistory' is defined but never used.","'LaunchWrapper' is assigned a value but never used.",["920"],["921"],["920"],["921"],["920"],["921"],["920"],["921"],"'ModalWrapper' is defined but never used.","'state' is assigned a value but never used.","'Action' is defined but never used.","'Profile' is defined but never used.","'IconWrapper' is defined but never used.","'UserAlt' is defined but never used.","'teamId' is assigned a value but never used.","'Layout' is defined but never used.","'LoadingText' is defined but never used.","'Rotate' is defined but never used.","'spinTransition' is defined but never used.","'Warning' is defined but never used.","'history' is assigned a value but never used.","'error' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sendQuery'. Either include it or remove the dependency array.",["923"],"'newDigit' is assigned a value but never used.","'theme' is assigned a value but never used.","'css' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'avatarBackground' is assigned a value but never used.","'Redirect' is defined but never used.","'Dialog' is defined but never used.","'invitorId' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},"Update the dependencies array to be: [name]",{"range":"928","text":"929"},"Update the dependencies array to be: [first, second, third, fourth, fifth, sixth, sendQuery]",{"range":"930","text":"931"},[186,188],"[name]",[1299,1343],"[first, second, third, fourth, fifth, sixth, sendQuery]"]