[{"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.stories.tsx":"1","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.stories.tsx":"2","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.stories.tsx":"3","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.stories.tsx":"4","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.component.tsx":"5","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.component.tsx":"6","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.component.tsx":"7","/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.component.tsx":"8","/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.channel.tsx":"9","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.invite.tsx":"10","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.landing.tsx":"11","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.error.tsx":"12","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.together.tsx":"13","/Users/ken/Desktop/slack/web/src/components/template/invite/invite.after.tsx":"14","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.hashtag.tsx":"15","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.workspace.tsx":"16","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.confirm.tsx":"17","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.launch.tsx":"18","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.nav.tsx":"19","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.password.tsx":"20","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.mention.tsx":"21","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.launch.tsx":"22","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.software.tsx":"23","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.saved.tsx":"24","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.channel.tsx":"25","/Users/ken/Desktop/slack/web/src/context/toggle-context.tsx":"26","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.plain.tsx":"27","/Users/ken/Desktop/slack/web/src/assets/svg/Icons.tsx":"28","/Users/ken/Desktop/slack/web/src/global/colors.ts":"29","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.more.tsx":"30","/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.stories.tsx":"31","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.stories.tsx":"32","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.stories.tsx":"33","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.component.tsx":"34","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.component.tsx":"35","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.component.tsx":"36","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.channel.tsx":"37","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.directmessage.tsx":"38","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.thread.tsx":"39","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.saved.tsx":"40","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.find.tsx":"41","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.transparent.tsx":"42","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.socialmedia.tsx":"43","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.getstarted.tsx":"44","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.link.tsx":"45","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.banner.tsx":"46","/Users/ken/Desktop/slack/web/src/util/string.ts":"47","/Users/ken/Desktop/slack/web/src/components/template/invite/invite.before.tsx":"48","/Users/ken/Desktop/slack/web/src/assets/svg/Logo.tsx":"49","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.password.tsx":"50","/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.validation.tsx":"51","/Users/ken/Desktop/slack/web/src/global/globalStyles.ts":"52","/Users/ken/Desktop/slack/web/src/global/globalFonts.ts":"53","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.check.tsx":"54","/Users/ken/Desktop/slack/web/src/global/blocks.ts":"55","/Users/ken/Desktop/slack/web/src/assets/svg/index.tsx":"56","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.stories.tsx":"57","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.stories.tsx":"58","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.directmessage.tsx":"59","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.threads.tsx":"60","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.channel.tsx":"61","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.primary.tsx":"62","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.square.tsx":"63","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.reaction.tsx":"64","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.component.tsx":"65","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.workspace.tsx":"66","/Users/ken/Desktop/slack/web/src/components/template/invite/index.tsx":"67","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.getstarted.tsx":"68","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.available.tsx":"69","/Users/ken/Desktop/slack/web/src/hooks/useTabTitle.ts":"70","/Users/ken/Desktop/slack/web/src/animations/Buttons.ts":"71","/Users/ken/Desktop/slack/web/src/components/Workspace/Channel/Container.tsx":"72","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.landing.tsx":"73","/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/MessageHeader.ts":"74","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.draft.tsx":"75","/Users/ken/Desktop/slack/web/src/components/layout/layout.workspace.tsx":"76","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.draft.tsx":"77","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.stories.tsx":"78","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.stories.tsx":"79","/Users/ken/Desktop/slack/web/src/styles/Workspace/Content/DragDrop.ts":"80","/Users/ken/Desktop/slack/web/src/styles/Workspace/Channel/Container.ts":"81","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.hamburger.tsx":"82","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.landing.tsx":"83","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.stories.tsx":"84","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.component.tsx":"85","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.next.tsx":"86","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.email.tsx":"87","/Users/ken/Desktop/slack/web/src/util/passwordUtil.ts":"88","/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.component.tsx":"89","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.stories.tsx":"90","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.message.tsx":"91","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.together.tsx":"92","/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/Container.ts":"93","/Users/ken/Desktop/slack/web/src/styles/Workspace/Switch.ts":"94","/Users/ken/Desktop/slack/web/src/index.tsx":"95","/Users/ken/Desktop/slack/web/src/routes/GetStarted.tsx":"96","/Users/ken/Desktop/slack/web/src/pages/Signin.tsx":"97","/Users/ken/Desktop/slack/web/src/pages/FindTeam.tsx":"98","/Users/ken/Desktop/slack/web/src/pages/ConfirmDigit.tsx":"99","/Users/ken/Desktop/slack/web/src/styles/ConfirmDigit/Dialog.ts":"100","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/index.ts":"101","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Sections.ts":"102","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Options.ts":"103","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Option.ts":"104","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Channel.ts":"105","/Users/ken/Desktop/slack/web/src/routes/App.tsx":"106","/Users/ken/Desktop/slack/web/src/context/index.tsx":"107","/Users/ken/Desktop/slack/web/src/components/layout/layout.getstarted.tsx":"108","/Users/ken/Desktop/slack/web/src/routes/Create.tsx":"109","/Users/ken/Desktop/slack/web/src/pages/CreateTeam.tsx":"110","/Users/ken/Desktop/slack/web/src/styles/Landing/index.ts":"111","/Users/ken/Desktop/slack/web/src/components/molecules/card/card.activity.tsx":"112","/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.choose.tsx":"113","/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/Container.tsx":"114","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.create.tsx":"115","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Section.ts":"116","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Message.ts":"117","/Users/ken/Desktop/slack/web/src/global/sizes.ts":"118","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.component.tsx":"119","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.signin.tsx":"120","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.signin.tsx":"121","/Users/ken/Desktop/slack/web/src/global/token.ts":"122","/Users/ken/Desktop/slack/web/src/assets/fonts/index.tsx":"123","/Users/ken/Desktop/slack/web/src/pages/Workspace.tsx":"124","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.mention.tsx":"125","/Users/ken/Desktop/slack/web/src/util/randomColor.ts":"126","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Profile.ts":"127","/Users/ken/Desktop/slack/web/src/pages/Landing.tsx":"128","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.modal.tsx":"129","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Messages.ts":"130","/Users/ken/Desktop/slack/web/src/styles/Workspace/index.ts":"131","/Users/ken/Desktop/slack/web/src/pages/index.stories.tsx":"132","/Users/ken/Desktop/slack/web/src/pages/index.tsx":"133","/Users/ken/Desktop/slack/web/src/pages/GetStarted.tsx":"134","/Users/ken/Desktop/slack/web/src/components/molecules/card/index.tsx":"135","/Users/ken/Desktop/slack/web/src/routes/Workspace.tsx":"136","/Users/ken/Desktop/slack/web/src/components/layout/layout.component.tsx":"137","/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.stories.tsx":"138","/Users/ken/Desktop/slack/web/src/components/molecules/seperator/seperator.date.tsx":"139","/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.tsx":"140","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/index.tsx":"141","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Profile.tsx":"142","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Channels.tsx":"143","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Channel.tsx":"144","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Sections.tsx":"145","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Messages.tsx":"146","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Message.tsx":"147","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Option.tsx":"148","/Users/ken/Desktop/slack/web/src/styles/FindTeam/index.ts":"149","/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/MessageHeader.tsx":"150","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Options.tsx":"151","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.switch.tsx":"152","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Section.tsx":"153","/Users/ken/Desktop/slack/web/src/animations/FadeInStagger.ts":"154","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.workspace.tsx":"155","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.stories.tsx":"156","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.tsx":"157","/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.menu.tsx":"158","/Users/ken/Desktop/slack/web/src/components/molecules/option/option.profile.tsx":"159","/Users/ken/Desktop/slack/web/src/components/molecules/option/index.tsx":"160","/Users/ken/Desktop/slack/web/src/components/molecules/option/option.menu.tsx":"161","/Users/ken/Desktop/slack/web/src/components/molecules/option/option.status.tsx":"162","/Users/ken/Desktop/slack/web/src/components/prototype/create/index.tsx":"163","/Users/ken/Desktop/slack/web/src/components/prototype/create/create.name.tsx":"164","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.signin.tsx":"165","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.getstarted.tsx":"166","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.signup.tsx":"167","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.invited.tsx":"168","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.find.tsx":"169","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.workspaces.tsx":"170","/Users/ken/Desktop/slack/web/src/components/prototype/auth/index.tsx":"171","/Users/ken/Desktop/slack/web/src/components/atoms/button/index.tsx":"172","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.auth.tsx":"173","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.stories.tsx":"174","/Users/ken/Desktop/slack/web/src/components/prototype/create/index.stories.tsx":"175","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.email.tsx":"176"},{"size":460,"mtime":1610180626391,"results":"177","hashOfConfig":"178"},{"size":740,"mtime":1610264965395,"results":"179","hashOfConfig":"178"},{"size":843,"mtime":1610180626430,"results":"180","hashOfConfig":"178"},{"size":843,"mtime":1610180626443,"results":"181","hashOfConfig":"178"},{"size":750,"mtime":1610248049071,"results":"182","hashOfConfig":"178"},{"size":1298,"mtime":1610249231723,"results":"183","hashOfConfig":"178"},{"size":621,"mtime":1610264983846,"results":"184","hashOfConfig":"178"},{"size":475,"mtime":1610246469400,"results":"185","hashOfConfig":"178"},{"size":2758,"mtime":1610258195346,"results":"186","hashOfConfig":"178"},{"size":2638,"mtime":1610180626429,"results":"187","hashOfConfig":"178"},{"size":5321,"mtime":1610258158623,"results":"188","hashOfConfig":"178"},{"size":1101,"mtime":1610180626401,"results":"189","hashOfConfig":"178"},{"size":1539,"mtime":1610246634847,"results":"190","hashOfConfig":"178"},{"size":4263,"mtime":1610248348752,"results":"191","hashOfConfig":"178"},{"size":440,"mtime":1610180626392,"results":"192","hashOfConfig":"178"},{"size":2287,"mtime":1610236816416,"results":"193","hashOfConfig":"178"},{"size":1102,"mtime":1610265836673,"results":"194","hashOfConfig":"178"},{"size":697,"mtime":1610180626395,"results":"195","hashOfConfig":"178"},{"size":2877,"mtime":1610180626396,"results":"196","hashOfConfig":"178"},{"size":1684,"mtime":1610237477618,"results":"197","hashOfConfig":"178"},{"size":3194,"mtime":1610180626421,"results":"198","hashOfConfig":"178"},{"size":1564,"mtime":1610247634271,"results":"199","hashOfConfig":"178"},{"size":5458,"mtime":1610180626440,"results":"200","hashOfConfig":"178"},{"size":521,"mtime":1610180626443,"results":"201","hashOfConfig":"178"},{"size":1922,"mtime":1610258244391,"results":"202","hashOfConfig":"178"},{"size":2003,"mtime":1610180626446,"results":"203","hashOfConfig":"178"},{"size":1676,"mtime":1610266730953,"results":"204","hashOfConfig":"178"},{"size":66015,"mtime":1610265775637,"results":"205","hashOfConfig":"178"},{"size":1762,"mtime":1610180626449,"results":"206","hashOfConfig":"178"},{"size":596,"mtime":1610180626392,"results":"207","hashOfConfig":"178"},{"size":420,"mtime":1610180626437,"results":"208","hashOfConfig":"178"},{"size":722,"mtime":1610180626427,"results":"209","hashOfConfig":"178"},{"size":652,"mtime":1610180626408,"results":"210","hashOfConfig":"178"},{"size":923,"mtime":1610247380135,"results":"211","hashOfConfig":"178"},{"size":896,"mtime":1610247507612,"results":"212","hashOfConfig":"178"},{"size":934,"mtime":1610248144378,"results":"213","hashOfConfig":"178"},{"size":5232,"mtime":1610258128112,"results":"214","hashOfConfig":"178"},{"size":1414,"mtime":1610258134969,"results":"215","hashOfConfig":"178"},{"size":1525,"mtime":1610180626422,"results":"216","hashOfConfig":"178"},{"size":1703,"mtime":1610180626421,"results":"217","hashOfConfig":"178"},{"size":4083,"mtime":1610180626426,"results":"218","hashOfConfig":"178"},{"size":798,"mtime":1610235589063,"results":"219","hashOfConfig":"178"},{"size":1352,"mtime":1610246834301,"results":"220","hashOfConfig":"178"},{"size":1250,"mtime":1610246806482,"results":"221","hashOfConfig":"178"},{"size":731,"mtime":1610180626396,"results":"222","hashOfConfig":"178"},{"size":5055,"mtime":1610255807251,"results":"223","hashOfConfig":"178"},{"size":185,"mtime":1610180626482,"results":"224","hashOfConfig":"178"},{"size":9179,"mtime":1610259516676,"results":"225","hashOfConfig":"178"},{"size":13437,"mtime":1610180626386,"results":"226","hashOfConfig":"178"},{"size":494,"mtime":1610180626401,"results":"227","hashOfConfig":"178"},{"size":826,"mtime":1610180626391,"results":"228","hashOfConfig":"178"},{"size":739,"mtime":1610180626450,"results":"229","hashOfConfig":"178"},{"size":1115,"mtime":1610244248879,"results":"230","hashOfConfig":"178"},{"size":588,"mtime":1610180626391,"results":"231","hashOfConfig":"178"},{"size":6027,"mtime":1610249073536,"results":"232","hashOfConfig":"178"},{"size":49,"mtime":1610180626386,"results":"233","hashOfConfig":"178"},{"size":1135,"mtime":1610180626440,"results":"234","hashOfConfig":"178"},{"size":865,"mtime":1610180626404,"results":"235","hashOfConfig":"178"},{"size":1509,"mtime":1610258287613,"results":"236","hashOfConfig":"178"},{"size":490,"mtime":1610180626443,"results":"237","hashOfConfig":"178"},{"size":7908,"mtime":1610258608436,"results":"238","hashOfConfig":"178"},{"size":1129,"mtime":1610243277870,"results":"239","hashOfConfig":"178"},{"size":694,"mtime":1610237122941,"results":"240","hashOfConfig":"178"},{"size":737,"mtime":1610180626397,"results":"241","hashOfConfig":"178"},{"size":684,"mtime":1610247447498,"results":"242","hashOfConfig":"178"},{"size":3457,"mtime":1610258567622,"results":"243","hashOfConfig":"178"},{"size":423,"mtime":1610248256025,"results":"244","hashOfConfig":"178"},{"size":1050,"mtime":1610255808765,"results":"245","hashOfConfig":"178"},{"size":1978,"mtime":1610255808765,"results":"246","hashOfConfig":"178"},{"size":194,"mtime":1610180626460,"results":"247","hashOfConfig":"178"},{"size":1174,"mtime":1610180626364,"results":"248","hashOfConfig":"178"},{"size":3822,"mtime":1610248533685,"results":"249","hashOfConfig":"178"},{"size":8026,"mtime":1610255808765,"results":"250","hashOfConfig":"178"},{"size":1008,"mtime":1610180626476,"results":"251","hashOfConfig":"178"},{"size":381,"mtime":1610180626442,"results":"252","hashOfConfig":"178"},{"size":3603,"mtime":1610244188294,"results":"253","hashOfConfig":"178"},{"size":1928,"mtime":1610180626419,"results":"254","hashOfConfig":"178"},{"size":598,"mtime":1610180626424,"results":"255","hashOfConfig":"178"},{"size":2489,"mtime":1610255799328,"results":"256","hashOfConfig":"178"},{"size":2102,"mtime":1610180626475,"results":"257","hashOfConfig":"258"},{"size":264,"mtime":1610180626475,"results":"259","hashOfConfig":"178"},{"size":426,"mtime":1610180626395,"results":"260","hashOfConfig":"178"},{"size":2885,"mtime":1610258140925,"results":"261","hashOfConfig":"178"},{"size":715,"mtime":1610180626393,"results":"262","hashOfConfig":"178"},{"size":698,"mtime":1610246496063,"results":"263","hashOfConfig":"178"},{"size":747,"mtime":1610249072904,"results":"264","hashOfConfig":"178"},{"size":655,"mtime":1610248942071,"results":"265","hashOfConfig":"178"},{"size":2010,"mtime":1610180626482,"results":"266","hashOfConfig":"178"},{"size":447,"mtime":1610247875695,"results":"267","hashOfConfig":"178"},{"size":487,"mtime":1610180626422,"results":"268","hashOfConfig":"178"},{"size":2036,"mtime":1610247071505,"results":"269","hashOfConfig":"178"},{"size":4258,"mtime":1610246527392,"results":"270","hashOfConfig":"178"},{"size":264,"mtime":1610180626476,"results":"271","hashOfConfig":"178"},{"size":648,"mtime":1610162018016,"results":"272","hashOfConfig":"258"},{"size":2017,"mtime":1610261173741,"results":"273","hashOfConfig":"178"},{"size":1920,"mtime":1610255201664,"results":"274","hashOfConfig":"178"},{"size":518,"mtime":1610266271410,"results":"275","hashOfConfig":"178"},{"size":483,"mtime":1610259641465,"results":"276","hashOfConfig":"178"},{"size":9896,"mtime":1610259627232,"results":"277","hashOfConfig":"178"},{"size":1518,"mtime":1610180626468,"results":"278","hashOfConfig":"178"},{"size":1286,"mtime":1610180626481,"results":"279","hashOfConfig":"178"},{"size":258,"mtime":1610180626480,"results":"280","hashOfConfig":"178"},{"size":797,"mtime":1610180626480,"results":"281","hashOfConfig":"178"},{"size":852,"mtime":1610180626479,"results":"282","hashOfConfig":"178"},{"size":899,"mtime":1610180626479,"results":"283","hashOfConfig":"178"},{"size":960,"mtime":1610180626467,"results":"284","hashOfConfig":"178"},{"size":277,"mtime":1610180626445,"results":"285","hashOfConfig":"178"},{"size":1903,"mtime":1610266469749,"results":"286","hashOfConfig":"178"},{"size":5039,"mtime":1610259787477,"results":"287","hashOfConfig":"178"},{"size":2994,"mtime":1610241828840,"results":"288","hashOfConfig":"178"},{"size":355,"mtime":1610180626474,"results":"289","hashOfConfig":"178"},{"size":2160,"mtime":1610255808762,"results":"290","hashOfConfig":"178"},{"size":1582,"mtime":1610255807251,"results":"291","hashOfConfig":"178"},{"size":3935,"mtime":1610248573333,"results":"292","hashOfConfig":"178"},{"size":952,"mtime":1610234969081,"results":"293","hashOfConfig":"178"},{"size":2177,"mtime":1610180626480,"results":"294","hashOfConfig":"178"},{"size":876,"mtime":1610180626479,"results":"295","hashOfConfig":"178"},{"size":2062,"mtime":1610180626451,"results":"296","hashOfConfig":"178"},{"size":657,"mtime":1610246987968,"results":"297","hashOfConfig":"178"},{"size":6913,"mtime":1610255808801,"results":"298","hashOfConfig":"178"},{"size":3133,"mtime":1610255808762,"results":"299","hashOfConfig":"178"},{"size":180,"mtime":1610180626451,"results":"300","hashOfConfig":"178"},{"size":665,"mtime":1610245315341,"results":"301","hashOfConfig":"178"},{"size":1270,"mtime":1610259674038,"results":"302","hashOfConfig":"178"},{"size":1332,"mtime":1610180626442,"results":"303","hashOfConfig":"178"},{"size":133,"mtime":1610180626482,"results":"304","hashOfConfig":"178"},{"size":1187,"mtime":1610180626480,"results":"305","hashOfConfig":"178"},{"size":1535,"mtime":1610258258126,"results":"306","hashOfConfig":"178"},{"size":752,"mtime":1610246968926,"results":"307","hashOfConfig":"178"},{"size":902,"mtime":1610180626479,"results":"308","hashOfConfig":"178"},{"size":500,"mtime":1610180626481,"results":"309","hashOfConfig":"178"},{"size":961,"mtime":1610180626466,"results":"310","hashOfConfig":"178"},{"size":902,"mtime":1610180626466,"results":"311","hashOfConfig":"178"},{"size":709,"mtime":1610255480678,"results":"312","hashOfConfig":"178"},{"size":665,"mtime":1610247129384,"results":"313","hashOfConfig":"178"},{"size":1336,"mtime":1610259830983,"results":"314","hashOfConfig":"178"},{"size":596,"mtime":1610180626405,"results":"315","hashOfConfig":"178"},{"size":394,"mtime":1610180626409,"results":"316","hashOfConfig":"178"},{"size":1881,"mtime":1610237663378,"results":"317","hashOfConfig":"178"},{"size":348,"mtime":1610180626410,"results":"318","hashOfConfig":"178"},{"size":1207,"mtime":1610258632761,"results":"319","hashOfConfig":"178"},{"size":1705,"mtime":1610258179291,"results":"320","hashOfConfig":"178"},{"size":600,"mtime":1610180626432,"results":"321","hashOfConfig":"178"},{"size":885,"mtime":1610247663112,"results":"322","hashOfConfig":"178"},{"size":2215,"mtime":1610258964607,"results":"323","hashOfConfig":"178"},{"size":1194,"mtime":1610258789900,"results":"324","hashOfConfig":"178"},{"size":755,"mtime":1610258671620,"results":"325","hashOfConfig":"178"},{"size":1526,"mtime":1610247743806,"results":"326","hashOfConfig":"178"},{"size":197,"mtime":1610180626470,"results":"327","hashOfConfig":"178"},{"size":1471,"mtime":1610258277004,"results":"328","hashOfConfig":"178"},{"size":1808,"mtime":1610180626434,"results":"329","hashOfConfig":"178"},{"size":992,"mtime":1610180626413,"results":"330","hashOfConfig":"178"},{"size":2650,"mtime":1610249411410,"results":"331","hashOfConfig":"178"},{"size":341,"mtime":1610180626364,"results":"332","hashOfConfig":"178"},{"size":6576,"mtime":1610244224686,"results":"333","hashOfConfig":"178"},{"size":455,"mtime":1610180626411,"results":"334","hashOfConfig":"178"},{"size":445,"mtime":1610237747961,"results":"335","hashOfConfig":"178"},{"size":2635,"mtime":1610258493590,"results":"336","hashOfConfig":"178"},{"size":1885,"mtime":1610239351751,"results":"337","hashOfConfig":"178"},{"size":510,"mtime":1610240045539,"results":"338","hashOfConfig":"178"},{"size":1997,"mtime":1610245228754,"results":"339","hashOfConfig":"178"},{"size":1080,"mtime":1610249093271,"results":"340","hashOfConfig":"178"},{"size":347,"mtime":1610247950636,"results":"341","hashOfConfig":"178"},{"size":1440,"mtime":1610245279134,"results":"342","hashOfConfig":"178"},{"size":1890,"mtime":1610267089820,"results":"343","hashOfConfig":"178"},{"size":4699,"mtime":1610255806226,"results":"344","hashOfConfig":"178"},{"size":2407,"mtime":1610259433964,"results":"345","hashOfConfig":"178"},{"size":2179,"mtime":1610259384339,"results":"346","hashOfConfig":"178"},{"size":1279,"mtime":1610259050606,"results":"347","hashOfConfig":"178"},{"size":3207,"mtime":1610255021673,"results":"348","hashOfConfig":"178"},{"size":1484,"mtime":1610263619181,"results":"349","hashOfConfig":"178"},{"size":2256,"mtime":1610255782856,"results":"350","hashOfConfig":"178"},{"size":834,"mtime":1610263813867,"results":"351","hashOfConfig":"178"},{"size":1486,"mtime":1610263546925,"results":"352","hashOfConfig":"178"},{"size":409,"mtime":1610247946272,"results":"353","hashOfConfig":"178"},{"size":746,"mtime":1610265489729,"results":"354","hashOfConfig":"178"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},"1x578ns",{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"366"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"366"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"366"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"366"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"366"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"366"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"366"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"366"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"366"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"366"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"366"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"366"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"366"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"366"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"366"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"366"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"366"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},"gk2xnr",{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"366"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"366"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"578"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"578"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"366"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"366"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"366"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"366"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"617"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"366"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"366"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"617"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"366"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"366"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"578"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"366"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"366"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"617"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"578"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"578"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"366"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"578"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"617"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"366"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"366"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"366"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"366"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"366"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.stories.tsx",[],["749","750"],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.component.tsx",[],["751","752"],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.channel.tsx",["753","754"],"import * as React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\nimport { size } from \"global/sizes\";\n\n// Svgs\nimport { User, MapPinAlt } from \"assets/svg\";\n\n// Query\nimport {\n  useGetBelongingUsersQuery,\n  useGetChannelByIdQuery,\n} from \"generated/graphql\";\n\nexport const ChannelSubSection: React.FC<{\n  channelId?: string;\n}> = ({ channelId = \"channelId\" }) => {\n  // const { data: { getBelongingUsers } = {} } = useGetBelongingUsersQuery({\n  //   variables: { channelId },\n  // });\n  // const { data: { getChannelById } = {} } = useGetChannelByIdQuery({\n  //   variables: { channelId },\n  // });\n\n  return (\n    <Wrapper>\n      <b.Flex>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <IconWrapper className=\"person\">\n              <User />\n            </IconWrapper>\n            <b.Box ml={1}>\n              <b.Text fontSize={13} color=\"gray__light\">\n                {/* {getBelongingUsers?.belongingUsers?.length} */}\n              </b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <Seperator />\n          </b.Flex>\n        </b.Box>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <IconWrapper className=\"pin\">\n              <MapPinAlt />\n            </IconWrapper>\n            <b.Box ml={1}>\n              <b.Text fontSize={13} color=\"gray__light\">\n                1\n              </b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <Seperator className=\"second\" />\n          </b.Flex>\n        </b.Box>\n        <Descriptions>\n          <b.Flex alignItems=\"center\">\n            <b.Box className=\"descriptions__wrapper\">\n              <b.Span fontSize={13} color=\"gray__light\">\n                {/* {getChannelById?.ok && getChannelById.channel?.topic} */}\n              </b.Span>\n            </b.Box>\n          </b.Flex>\n        </Descriptions>\n      </b.Flex>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.person {\n    bottom: 0.8px;\n    svg {\n      width: 10px;\n      height: 10px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n\n  &.pin {\n    svg {\n      width: 10px;\n      height: 10px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst Seperator = styled(b.Box)`\n  height: 10px;\n  width: 1.2px;\n  background-color: ${({ theme }) => theme.colors.gray__light};\n  margin: 0 4px;\n  &.second {\n    display: none;\n    @media ${size[\"xs\"]} {\n      display: block;\n    }\n  }\n`;\n\nconst Descriptions = styled(b.Box)`\n  display: none;\n  @media ${size[\"xs\"]} {\n    display: block;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.invite.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.landing.tsx",["755"],"import React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport { size } from \"../../../global/sizes\";\nimport * as b from \"../../../global/blocks\";\nimport { Close } from \"../../../assets/svg\";\nimport { NameLogo } from \"../../../assets/svg/Logo\";\nimport { ChevronRight } from \"../../../assets/svg\";\nimport { useToggleDispatch } from \"../../../context/toggle-context\";\nimport { TransparentButtonMotion } from \"../../../animations/Buttons\";\n\nimport { useMyTeamsQuery } from \"../../../generated/graphql\";\n\nexport const LandingModal: React.FC<{ data?: any; loading?: boolean }> = ({\n  data,\n  loading,\n}) => {\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    document.body.style.height = \"100vh\";\n    return () => {\n      document.body.style.overflow = \"initial\";\n      document.body.style.height = \"initial\";\n    };\n  }, []);\n  const dispatchToggle = useToggleDispatch();\n\n  const options = [\n    { name: \"Why Slack?\", sub: [] },\n    { name: \"Solutions\", sub: [] },\n    { name: \"Resources\", sub: [] },\n    { name: \"Enterprise\" },\n    { name: \"Pricing\" },\n  ];\n\n  return (\n    <Wrapper>\n      <b.Box className=\"header\">\n        <b.Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <IconWrapper className=\"logo\">\n            <NameLogo />\n          </IconWrapper>\n          <IconButtonWrapper\n            className=\"close\"\n            onClick={() => dispatchToggle({ type: \"toggle_landing\" })}\n          >\n            <Close />\n          </IconButtonWrapper>\n        </b.Flex>\n      </b.Box>\n      <b.Box className=\"content\">\n        {options.map((option) => {\n          return (\n            <Option>\n              <b.Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <b.Box>\n                  <b.Text>{option.name}</b.Text>\n                </b.Box>\n                {option.sub && (\n                  <b.Box>\n                    <IconWrapper className=\"arrow\">\n                      <ChevronRight />\n                    </IconWrapper>\n                  </b.Box>\n                )}\n              </b.Flex>\n            </Option>\n          );\n        })}\n      </b.Box>\n      <Buttons>\n        <b.Box>\n          {!loading &&\n          data &&\n          data.myTeams.teams! &&\n          data.myTeams.teams!.length > 0 ? (\n            <Button\n              initial=\"rest\"\n              animate=\"rest\"\n              whileHover=\"hovered\"\n              className=\"button__filled\"\n            >\n              <b.Button>Sign In</b.Button>\n            </Button>\n          ) : (\n            <Button\n              initial=\"rest\"\n              animate=\"rest\"\n              whileHover=\"hovered\"\n              className=\"button__filled\"\n            >\n              <b.Button>Launch</b.Button>\n            </Button>\n          )}\n          <Button\n            initial=\"rest\"\n            animate=\"rest\"\n            whileHover=\"hovered\"\n            className=\"button__border\"\n          >\n            <b.Button variants={TransparentButtonMotion}>\n              Download Slack\n            </b.Button>\n          </Button>\n        </b.Box>\n      </Buttons>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  background-color: white;\n  position: fixed;\n  z-index: 9999;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  .header {\n    padding: 25px;\n    margin-bottom: 7px;\n  }\n  .content {\n    padding-right: 5px;\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.logo {\n    svg {\n      width: 100px;\n      height: auto;\n\n      path {\n        &:nth-child(2) {\n          fill: ${({ theme }) => theme.colors.blue__lighter};\n        }\n        &:nth-child(3) {\n          fill: ${({ theme }) => theme.colors.green__lighter};\n        }\n        &:nth-child(4) {\n          fill: ${({ theme }) => theme.colors.yellow};\n        }\n        &:nth-child(5) {\n          fill: ${({ theme }) => theme.colors.red};\n        }\n      }\n    }\n  }\n  &.arrow {\n    margin-right: 16px;\n    svg {\n      width: 10px;\n    }\n  }\n`;\n\nexport const IconButtonWrapper = styled(b.Button)`\n  &.close {\n    margin-right: 8px;\n    svg {\n      width: 16px;\n    }\n  }\n`;\n\nconst Option = styled(b.Box)`\n  padding: 17px 25px;\n  p {\n    font-family: \"SlackLato-Regular\";\n    font-size: 17px;\n  }\n`;\n\nconst Buttons = styled(b.Box)`\n  position: absolute;\n  bottom: 10px;\n  width: 100%;\n  background-color: white;\n\n  & > div {\n    display: block;\n    padding: 15px;\n    @media ${size.md} {\n      width: 100%;\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      grid-column-gap: 10px;\n    }\n  }\n`;\n\nconst Button = styled(b.AnimatedBox)`\n  & > button {\n    font-size: 14px;\n    font-family: \"CircularPro-Bold\";\n\n    letter-spacing: 1px;\n    width: 100%;\n    padding: 20px 0;\n    text-transform: uppercase;\n    height: 60px;\n    @media ${size.lg} {\n      width: auto;\n      padding: 0 40px;\n    }\n  }\n  &.button__filled {\n    border-radius: 6px;\n    background-color: ${({ theme }) => theme.colors.primary};\n    & > button {\n      color: ${({ theme }) => theme.colors.white};\n    }\n  }\n\n  &.button__border {\n    border-radius: 6px;\n    margin-top: 15px;\n    margin-left: 0px;\n    @media ${size.md} {\n      margin-top: 0;\n      margin-left: 15px;\n    }\n    & > button {\n      background-color: transparent;\n      border: 1px solid ${({ theme }) => theme.colors.primary__light};\n      color: ${({ theme }) => theme.colors.primary__light};\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.error.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.together.tsx",[],"/Users/ken/Desktop/slack/web/src/components/template/invite/invite.after.tsx",["756"],"import React from \"react\";\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\n// Svg\nimport { PaperPlaneLight } from \"assets/svg\";\n\nexport const AfterInvite: React.FC<{\n  input?: { email: string; name: string; done: boolean };\n  dispatchToggle?: any;\n}> = ({\n  input = { email: \"email@gmail.com\", name: \"name\", done: false },\n  dispatchToggle,\n}) => {\n  return (\n    <>\n      <Header>\n        <b.Flex justifyContent=\"space-between\">\n          <Title>\n            <b.Text>Invites sent</b.Text>\n          </Title>\n        </b.Flex>\n      </Header>\n      <Description>\n        <b.Text>\n          You've invited <span>1 Member</span> to your workspace\n        </b.Text>\n      </Description>\n      <Content>\n        <ContentHeader>\n          <b.Flex>\n            <b.Box className=\"content__section\">\n              <b.Text>Email Address</b.Text>\n            </b.Box>\n            <b.Box className=\"content__section\">\n              <b.Text>Name</b.Text>\n            </b.Box>\n          </b.Flex>\n        </ContentHeader>\n        <Line />\n        <b.Box my={2} width={1}>\n          <b.Flex>\n            <b.Box width={1 / 2}>\n              <b.Text fontSize={14}>{input.name}</b.Text>\n            </b.Box>\n            <b.Box width={1 / 2}>\n              <b.Text fontSize={14}>{input.name}</b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n      </Content>\n      <Footer>\n        <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <b.Box>\n            <b.Flex>\n              <IconWrapper className=\"paper-plane\" mr={2}>\n                <PaperPlaneLight />\n              </IconWrapper>\n              <b.Box>\n                <b.Text>See past invites</b.Text>\n              </b.Box>\n            </b.Flex>\n          </b.Box>\n          <SendButton\n            onClick={() => {\n              dispatchToggle({ type: \"toggle_invite\" });\n            }}\n          >\n            Done\n          </SendButton>\n        </b.Flex>\n      </Footer>\n    </>\n  );\n};\n\nconst Header = styled(b.Box)`\n  margin-bottom: 20px;\n`;\n\nconst Title = styled(b.Box)`\n  & > p {\n    font-family: \"SlackLato-Black\";\n    font-size: 18px;\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.user-plus {\n    & svg {\n      width: 20px;\n      height: 20px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue};\n      }\n    }\n  }\n\n  &.plus-circle {\n    & svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue__light};\n      }\n    }\n  }\n\n  &.google {\n    & svg {\n      width: 18px;\n      height: 18px;\n    }\n  }\n\n  &.paper-plane {\n    & svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst IconButtonWrapper = styled(b.Button)`\n  position: relative;\n  &.close {\n    width: 35px;\n    height: 35px;\n    svg {\n      position: relative;\n      top: 2px;\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.black};\n      }\n    }\n    &:hover {\n      border-radius: 100%;\n      background-color: ${({ theme }) => theme.colors.white__dark};\n    }\n  }\n  &.info {\n    top: 1.5px;\n    svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n  }\n`;\n\nconst Footer = styled(b.Box)`\n  margin-top: 60px;\n\n  & p {\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.gray__light};\n  }\n`;\n\nconst SendButton = styled(b.Button)`\n  background-color: ${({ theme }) => theme.colors.green};\n  padding: 8px 18px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.white};\n  font-family: \"SlackLato-Bold\";\n  font-size: 14px;\n`;\n\nconst Description = styled(b.Box)`\n  & > p {\n    font-family: \"SlackLato-Regular\";\n    font-size: 14px;\n\n    & > span {\n      font-family: \"SlackLato-Bold\";\n    }\n  }\n`;\nconst Content = styled(b.Box)``;\n\nconst ContentHeader = styled(b.Box)`\n  margin: 20px 0 6px 0;\n  & p {\n    font-size: 14px;\n    font-family: \"SlackLato-Bold\";\n  }\n\n  & div {\n    &.content__section {\n      width: 50%;\n    }\n  }\n`;\n\nconst Line = styled(b.Box)`\n  background-color: ${({ theme }) => theme.colors.green};\n  width: 100%;\n  height: 2px;\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.hashtag.tsx",["757"],"import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as b from \"global/blocks\";\n\nimport { ThinHashTag } from \"assets/svg\";\n\nimport { ThemeContext } from \"styled-components\";\n\nexport const HashtagBullet: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  return (\n    <b.Box bottom={1.5}>\n      <ThinHashTag width={8} height={8} fill={theme.colors.pink__light} />\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/atoms/button/button.workspace.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.confirm.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.launch.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.nav.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/input.password.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.mention.tsx",["758","759","760"],"import React from \"react\";\n\nimport * as b from \"global/blocks\";\n\n// Svgs\nimport { AtSign, Close } from \"assets/svg\";\n\nimport styled from \"styled-components\";\n\nimport { Card } from \"../../molecules/card\";\n\nexport const MentionContent: React.FC<{}> = () => {\n  return (\n    <Bottom>\n      <Notice p={3}>\n        <b.Box>\n          <b.Flex justifyContent=\"space-between\">\n            <NoticeTitle>\n              <b.Flex alignItems=\"center\">\n                <IconWrapper className=\"atsign\" mr={2}>\n                  <AtSign />\n                </IconWrapper>\n                <b.Box mb={1}>\n                  <b.Text>See new activity in real time</b.Text>\n                </b.Box>\n              </b.Flex>\n            </NoticeTitle>\n            <IconWrapper className=\"close\">\n              <Close />\n            </IconWrapper>\n          </b.Flex>\n        </b.Box>\n        <NoticeDescription mt={3}>\n          <b.Text>\n            When people react to your messages or mention you or your keywords,\n            you’ll see it here.\n          </b.Text>\n        </NoticeDescription>\n      </Notice>\n      <div>\n        <Card variant=\"activity\" />\n        <Card variant=\"activity\" />\n      </div>\n    </Bottom>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  display: grid;\n  grid-template-rows: 65px auto;\n\n  & > div {\n    &.top {\n      border-bottom: 1px solid ${({ theme }) => theme.colors.white__dark};\n      height: 100%;\n    }\n\n    &.bottom {\n      height: 100%;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      background-color: ${({ theme }) => theme.colors.white__dark};\n    }\n  }\n`;\n\nconst Top = styled(b.Flex)`\n  justify-content: space-between;\n  align-items: center;\n  height: inherit;\n  padding: 0 19px;\n`;\n\nconst Bottom = styled(b.Box)`\n  width: 100%;\n  padding: 20px 20px 0px 20px;\n  /* margin: 20px 20px 0 20px; */\n`;\n\nconst Section = styled(b.Box)`\n  & > p {\n    color: ${({ theme }) => theme.colors.black__light};\n    font-family: \"SlackLato-Black\";\n    font-size: 15px;\n  }\n`;\n\nconst Notice = styled(b.Box)`\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 25px;\n  border-radius: 10px;\n  margin-bottom: 25px;\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.atsign {\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.orange__dark};\n      }\n    }\n  }\n\n  &.close {\n    svg {\n      width: 13px;\n      height: 13px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n\n  &.sideoption {\n    padding: 8px 10px 6px 10px;\n    background-color: transparent;\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.white__dark};\n      border-radius: 3px;\n    }\n\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n`;\n\nconst NoticeTitle = styled(b.Box)`\n  p {\n    color: ${({ theme }) => theme.colors.black__light};\n    font-size: 18px;\n    font-family: \"SlackLato-Bold\";\n    letter-spacing: -0.025em;\n  }\n`;\n\nconst NoticeDescription = styled(b.Box)`\n  & > p {\n    font-family: \"SlackLato-Regular\";\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.black__light};\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.launch.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.software.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.saved.tsx",["761","762","763"],"import React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Svgs\nimport { Bookmark } from \"assets/svg\";\nimport { Transition } from \"assets/svg\";\n\nimport { Layout } from \"components/layout/layout.component\";\nimport { Content } from \"components/organisms/content/content.component\";\n\nexport const SavedWorkspace: React.FC<{}> = () => {\n  return (\n    <Layout\n      variant=\"workspace\"\n      section=\"Saved items\"\n      content={<Content variant=\"saved\" />}\n      options={<div>saved</div>}\n    />\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.channel.tsx",["764","765"],"import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as b from \"global/blocks\";\n// Query\nimport { useGetChannelByIdQuery } from \"generated/graphql\";\n\n// Components\nimport { Layout } from \"components/layout/layout.component\";\n\nimport styled from \"styled-components\";\n\nimport { Info } from \"assets/svg\";\nimport { SubSection } from \"components/organisms/subsection/subsection.component\";\nimport { Content } from \"components/organisms/content/content.component\";\n// Styles\n\nexport const ChannelWorkspace: React.FC<{}> = () => {\n  const { channelId } = useParams<{ channelId: string }>();\n  // const { data: { getChannelById } = {} } = useGetChannelByIdQuery({\n  //   variables: { channelId },\n  // });\n\n  // useEffect(() => {\n  //   if (getChannelById) {\n  //     document.title = `Slack | ${getChannelById?.channel!.name}`;\n  //   }\n  // }, [getChannelById]);\n\n  // ${getChannelById?.channel!.name }\n  return (\n    // <>\n    //   {getChannelById?.channel && (\n    <Layout\n      variant=\"workspace\"\n      section={`# `}\n      subsection={<SubSection variant=\"channel\" channelId={channelId} />}\n      content={<Content variant=\"channel\" />}\n      options={\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <IconWrapper className=\"sideoption\" mr={2}>\n              <Info />\n            </IconWrapper>\n            <b.Box>\n              <b.Text fontSize={14} fontFamily=\"SlackLato-Regular\">\n                Details\n              </b.Text>\n            </b.Box>\n          </b.Flex>\n        </b.Box>\n      }\n    />\n    //   )}\n    // </>\n  );\n};\n\nconst IconWrapper = styled(b.Box)`\n  &.sideoption {\n    padding: 8px 10px 6px 10px;\n    background-color: transparent;\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.white__dark};\n      border-radius: 3px;\n    }\n\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/context/toggle-context.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/input.plain.tsx",[],"/Users/ken/Desktop/slack/web/src/assets/svg/Icons.tsx",["766"],"/Users/ken/Desktop/slack/web/src/global/colors.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.more.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.channel.tsx",["767","768","769","770","771","772"],"import * as React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\n// Svg\nimport { LayerPlus, UserPlus } from \"assets/svg\";\n\n// Components\nimport { useParams } from \"react-router-dom\";\nimport { useGetChannelByIdQuery } from \"generated/graphql\";\n\nimport { MessageContainer } from \"components/Workspace/Channel/Container\";\nimport { MessageBox } from \"components/Workspace/MessageBox\";\nimport { useSendMessageMutation } from \"generated/graphql\";\n\nexport const ChannelContent: React.FC<{}> = () => {\n  const { channelId } = useParams<{ channelId: string }>();\n  // const { data: { getChannelById } = {} } = useGetChannelByIdQuery({\n  //   variables: { channelId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n\n  // const [send] = useSendMessageMutation();\n  // const sendMessage = async (message: string) => {\n  //   if (localStorage.getItem(\"teamId\")) {\n  //     await send({\n  //       variables: {\n  //         channelId,\n  //         teamId: localStorage.getItem(\"teamId\")!,\n  //         body: message,\n  //       },\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Wrapper>\n        <b.Box className=\"section_header\">\n          {/* <Title mb={2}>\n            {getChannelById?.channel && (\n              <b.Text> #{getChannelById?.channel?.name}</b.Text>\n            )}\n          </Title>\n          <Description>\n            <b.Text>\n              <b.Span className=\"creator\">\n                @{getChannelById?.channel?.fullname}\n              </b.Span>{\" \"}\n              created this channel on{\" \"}\n              {getChannelById?.channel?.createdAt\n                .split(\",\")\n                .slice(0, 2)\n                .join(\",\")}\n              . This is the very beginning of the{\" \"}\n              <b.Span className=\"channel_name\">\n                #{getChannelById?.channel?.name}\n              </b.Span>{\" \"}\n              channel. &nbsp;\n              {getChannelById?.channel &&\n                getChannelById?.channel.description &&\n                `Description: ${getChannelById?.channel?.description}`}\n              &nbsp;\n              <b.Span>\n                {getChannelById?.channel &&\n                  getChannelById?.channel.description && (\n                    <>\n                      <b.Span>(</b.Span>\n                      <b.Span className=\"edit_button\">edit</b.Span>\n                      <b.Span>)</b.Span>\n                    </>\n                  )}\n              </b.Span>\n            </b.Text>\n          </Description> */}\n          <Options>\n            <b.Flex alignItems=\"center\">\n              <Option mr={2}>\n                <b.Flex alignItems=\"center\">\n                  <IconWrapper className=\"layer_plus\" mr={2}>\n                    <LayerPlus />\n                  </IconWrapper>\n                  <b.Box>\n                    <b.Text>Add an app</b.Text>\n                  </b.Box>\n                </b.Flex>\n              </Option>\n              <Option>\n                <b.Flex alignItems=\"center\">\n                  <IconWrapper className=\"user_plus\" mr={2}>\n                    <UserPlus />\n                  </IconWrapper>\n                  <b.Box>\n                    <b.Text>Add people</b.Text>\n                  </b.Box>\n                </b.Flex>\n              </Option>\n            </b.Flex>\n          </Options>\n        </b.Box>\n        <MessageContainer />\n        {/* <MessageBox sendMessage={sendMessage} /> */}\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  height: calc(100vh - 65px - 37px);\n  overflow-y: auto;\n  position: relative;\n  & > div {\n    &.section_header {\n      padding: 25px 20px;\n    }\n    &.section_content {\n      position: relative;\n      height: calc(100vh - 65px - 180px- 104px);\n      padding: 40px 20px 40px 20px;\n    }\n  }\n`;\n\nconst Title = styled(b.Box)`\n  & > p {\n    font-size: 28px;\n    font-family: \"SlackLato-Black\";\n  }\n`;\n\nconst Description = styled(b.Box)`\n  & > p {\n    font-size: 18px;\n    line-height: 1.5;\n    span {\n      &.creator {\n        background-color: ${({ theme }) => theme.colors.blue__0};\n        color: ${({ theme }) => theme.colors.blue};\n      }\n      &.channel_name {\n        font-family: \"SlackLato-Bold\";\n      }\n      &.edit_button {\n        color: ${({ theme }) => theme.colors.blue};\n        &:hover {\n          cursor: pointer;\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n`;\n\nconst Options = styled(b.Box)`\n  margin: 15px 0 25px 0;\n`;\n\nconst Option = styled(b.Button)`\n  p {\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.blue__light};\n  }\n  &:hover {\n    & > div {\n      & > div {\n        &:nth-child(1) {\n          & > svg {\n            & > path {\n              fill: ${({ theme }) => theme.colors.blue};\n            }\n          }\n        }\n        &:nth-child(2) {\n          & > p {\n            color: ${({ theme }) => theme.colors.blue};\n          }\n        }\n      }\n    }\n  }\n  &:nth-child(2) {\n    position: relative;\n    top: 2px;\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  position: relative;\n  &.layer_plus {\n    svg {\n      width: 15px;\n      height: 15px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue__light};\n      }\n    }\n  }\n  &.user_plus {\n    svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: ${({ theme }) => theme.colors.blue__light};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.directmessage.tsx",["773","774","775","776","777"],"import React from \"react\";\nimport { useState } from \"react\";\n\n// Components\nimport { MessageContainer } from \"components/Workspace/DirectMessage/Container\";\nimport { MessageBox } from \"components/Workspace/MessageBox\";\n\nimport styled from \"styled-components\";\nimport * as b from \"global/blocks\";\n\n// Styles\n\nimport { useParams } from \"react-router\";\nimport { useSendDirectMessageMutation, useUserQuery } from \"generated/graphql\";\n\nexport const DirectMessageContent: React.FC<{}> = () => {\n  const { userId } = useParams<{ userId: string }>();\n\n  // const { data, loading } = useUserQuery({\n  //   variables: { userId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n  // const [value, setValue] = useState<any>(\n  //   localStorage.getItem(`${userId}`)\n  //     ? JSON.parse(localStorage.getItem(`${userId}`)!)\n  //     : [\n  //         {\n  //           type: \"paragraph\",\n  //           children: [{ text: \"\" }],\n  //         },\n  //       ]\n  // );\n  // const [send] = useSendDirectMessageMutation();\n\n  // const sendMessage = async (message: any) => {\n  //   if (localStorage.getItem(\"teamId\")) {\n  //     await send({\n  //       variables: {\n  //         toId: userId,\n  //         body: message,\n  //       },\n  //     });\n  //   }\n  // };\n\n  return (\n    <Wrapper>\n      <MessageContainer />\n      {/* <MessageBox sendMessage={sendMessage} /> */}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  height: calc(100vh - 65px - 37px);\n  overflow-y: auto;\n  position: relative;\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.thread.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.saved.tsx",["778"],"import React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Svgs\nimport { Bookmark } from \"assets/svg\";\nimport styled from \"styled-components\";\n\nexport const SavedContent: React.FC<{}> = () => {\n  return (\n    <Wrapper>\n      <b.Flex justifyContent=\"center\" alignItems=\"center\">\n        <Bottom>\n          <IconWrapper className=\"bookmark\">\n            <Bookmark />\n          </IconWrapper>\n          <b.Box pt={3} pb={2}>\n            <b.Text fontSize={17} fontFamily=\"SlackLato-Bold\" color=\"black\">\n              Save messages and files to come back to later\n            </b.Text>\n          </b.Box>\n          <b.Box>\n            <b.Text\n              fontSize={15}\n              fontFamily=\"SlackLato-Regular\"\n              color=\"gray__light\"\n            >\n              Mark your to-dos or save something for another time. Only you can\n              see your saved items, so use them however you’d like.\n            </b.Text>\n          </b.Box>\n        </Bottom>\n      </b.Flex>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.Box)`\n  height: 100%;\n`;\n\nconst Bottom = styled(b.Box)`\n  max-width: 420px;\n  text-align: center;\n`;\n\nconst SideOption = styled(b.Button)`\n  padding: 8px 10px 6px 10px;\n  background-color: transparent;\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.white__dark};\n    border-radius: 3px;\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  &.bookmark {\n    svg {\n      width: 26px;\n      height: 26px;\n      path {\n        fill: ${({ theme }) => theme.colors.pink__dark};\n      }\n    }\n  }\n\n  &.transition {\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.find.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.transparent.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.socialmedia.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.getstarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.link.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.banner.tsx",[],"/Users/ken/Desktop/slack/web/src/util/string.ts",["779"],"declare global {\n  interface String {\n    capitalize(): string;\n  }\n}\n\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nexport {};\n","/Users/ken/Desktop/slack/web/src/components/template/invite/invite.before.tsx",[],"/Users/ken/Desktop/slack/web/src/assets/svg/Logo.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.password.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bar/bar.validation.tsx",[],"/Users/ken/Desktop/slack/web/src/global/globalStyles.ts",[],"/Users/ken/Desktop/slack/web/src/global/globalFonts.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.check.tsx",[],"/Users/ken/Desktop/slack/web/src/global/blocks.ts",[],"/Users/ken/Desktop/slack/web/src/assets/svg/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/input.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.directmessage.tsx",["780","781"],"import * as React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Layout } from \"components/layout/layout.component\";\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\nimport { Info } from \"assets/svg\";\n// Query\nimport { useUserQuery } from \"generated/graphql\";\nimport { Content } from \"components/organisms/content/content.component\";\n\nexport const DirectMessageWorkspace: React.FC<{}> = () => {\n  const { userId } = useParams<{ userId: string }>();\n  // const { data: userData } = useUserQuery({ variables: { userId } });\n  // ${userData?.user.user?.fullname}\n  return (\n    <>\n      <Layout\n        variant=\"workspace\"\n        section={`df`}\n        content={<Content variant=\"directmessage\" />}\n        options={\n          <b.Box>\n            <b.Flex alignItems=\"center\">\n              <IconWrapper className=\"sideoption\" mr={2}>\n                <Info />\n              </IconWrapper>\n              <b.Box>\n                <b.Text fontSize={14} fontFamily=\"SlackLato-Regular\">\n                  Details\n                </b.Text>\n              </b.Box>\n            </b.Flex>\n          </b.Box>\n        }\n      />\n    </>\n  );\n};\n\nconst IconWrapper = styled(b.Box)`\n  &.sideoption {\n    padding: 8px 10px 6px 10px;\n    background-color: transparent;\n    &:hover {\n      background-color: ${({ theme }: any) => theme.colors.white__dark};\n      border-radius: 3px;\n    }\n\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }: any) => theme.colors.gray};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.threads.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.channel.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.primary.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.square.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.reaction.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.workspace.tsx",["782","783","784"],"import * as React from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\n/** styles */\nimport * as b from \"global/blocks\";\nimport styled from \"styled-components\";\n\n// Breakpoints\nimport { home, size } from \"global/sizes\";\n\n/** vectors */\nimport { Clock, Magnify, Info } from \"assets/svg\";\n\nexport const WorkspaceHeader: React.FC<{}> = () => {\n  const { teamId } = useParams<{ teamId: string }>();\n\n  return (\n    <b.Box\n      height={37}\n      backgroundColor=\"primary__dark\"\n      borderBottom={1}\n      borderBottomStyle=\"solid\"\n      borderBottomColor=\"primary__lighter\"\n    >\n      <b.Flex alignItems=\"center\" justifyContent=\"center\">\n        <b.Box style={{ flex: 1 }} pr={4} pl={3}>\n          <b.Flex style={{ justifyContent: \"flex-end\" }}>\n            <IconWrapper className=\"clock\">\n              <Clock />\n            </IconWrapper>\n          </b.Flex>\n        </b.Box>\n        {/* {team && (\n            <Input borderRadius={5}>\n              <b.Box>\n                <b.Flex alignItems=\"center\" justifyContent=\"center\">\n                  <IconWrapper px={1} className=\"magnify\">\n                    <Magnify />\n                  </IconWrapper>\n                  <b.Box px={1} style={{ top: 1 }}>\n                    <b.Text fontFamily=\"SlackLato-Regular\" fontSize={13}>\n                      Search {team.team?.name}\n                    </b.Text>\n                  </b.Box>\n                </b.Flex>\n              </b.Box>\n            </Input>\n          )} */}\n        <b.Box style={{ flex: 1 }} pr={3} pl={3}>\n          <b.Flex style={{ justifyContent: \"flex-end\" }}>\n            <b.Button ml={2} background=\"transparent\">\n              <b.Flex alignItems=\"center\">\n                <IconWrapper className=\"info\">\n                  <Info />\n                </IconWrapper>\n              </b.Flex>\n            </b.Button>\n          </b.Flex>\n        </b.Box>\n      </b.Flex>\n    </b.Box>\n  );\n};\n\nconst Input = styled(b.Button)`\n  height: 24px;\n  border: 1.3px solid ${({ theme }) => theme.colors.purple};\n  padding: 0 8px;\n  width: 100%;\n  max-width: 320px;\n  background-color: ${({ theme }) => theme.colors.primary__lighter};\n  color: ${({ theme }) => theme.colors.white__dark};\n  fill: ${({ theme }) => theme.colors.white__dark};\n\n  @media ${home.lg} {\n    width: 500px;\n  }\n\n  &:hover {\n    border: 1.3px solid ${({ theme }) => theme.colors.purple};\n    color: ${({ theme }) => theme.colors.white__dark};\n    fill: ${({ theme }) => theme.colors.white__dark};\n  }\n`;\n\nconst IconWrapper = styled(b.Box)`\n  position: relative;\n\n  &.info {\n    display: none;\n    top: 2px;\n    svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: ${({ theme }) => theme.colors.white};\n      }\n    }\n    @media ${size[\"12xs\"]} {\n      display: block;\n    }\n  }\n\n  &.clock {\n    display: none;\n    border-radius: 5px;\n    padding: 6px 6px 3px 7px;\n    svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: ${({ theme }) => theme.colors.white};\n      }\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.primary__lighter};\n    }\n\n    @media ${size[\"12xs\"]} {\n      display: block;\n    }\n  }\n  &.magnify {\n    svg {\n      width: 12px;\n      height: 12px;\n      path {\n        fill: ${({ theme }) => theme.colors.white};\n      }\n    }\n  }\n\n  &.present {\n    top: 1px;\n    svg {\n      width: 14px;\n      height: 14px;\n      path {\n        fill: ${({ theme }) => theme.colors.white};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/template/invite/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.getstarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.available.tsx",[],"/Users/ken/Desktop/slack/web/src/hooks/useTabTitle.ts",["785"],"import { useEffect } from \"react\";\n\nexport const useTabTitle: (name: string) => void = (\n  name = \"Where work happens | Slack\"\n) => {\n  useEffect(() => {\n    document.title = name;\n  }, []);\n};\n","/Users/ken/Desktop/slack/web/src/animations/Buttons.ts",[],"/Users/ken/Desktop/slack/web/src/components/Workspace/Channel/Container.tsx",["786","787","788","789","790","791","792"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as b from \"global/blocks\";\nimport { Seperator } from \"components/molecules/seperator\";\nimport { Card } from \"../../molecules/card\";\nimport { Wrapper } from \"styles/Workspace/Channel/Container\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\n\nexport const MessageContainer = () => {\n  const { channelId } = useParams<{ channelId: string }>();\n\n  // const subscribeToNewMessages = (latestChannel: string) =>\n  //   subscribeToMore({\n  //     document: SUBSCRIBE_TO_MESSAGES,\n  //     variables: { channelID: latestChannel },\n  //     updateQuery: (prev, { subscriptionData }) => {\n  //       if (!subscriptionData.data) return prev;\n  //       const newMessage = subscriptionData.data.subscribeToMessages;\n  //       return Object.assign({}, prev, {\n  //         fetchMessages: [...prev.fetchMessages, newMessage],\n  //       });\n  //     },\n  //   });\n\n  // useEffect(() => {\n  //   const unsubscribe = subscribeToNewMessages(channelId);\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // }, [channelId, subscribeToNewMessages]);\n\n  // const SUBSCRIBE_TO_MESSAGES = gql`\n  //   subscription SubscribeToMessages($channelID: String!) {\n  //     subscribeToMessages(channelID: $channelID) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const FETCH_MESSAGES = gql`\n  //   query FetchMessages($channelId: String!) {\n  //     fetchMessages(channelId: $channelId) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const {\n  //   subscribeToMore,\n  //   data: fetchMessagesData,\n  //   loading: fetchMessagesLoading,\n  // } = useQuery(FETCH_MESSAGES, {\n  //   variables: { channelId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n\n  // // this gives an object with dates as keys\n\n  // type tplotOptions = {\n  //   [key: string]: {\n  //     id: number;\n  //     fullname: string;\n  //     avatarBackground: string;\n  //     body: string;\n  //     createdAt: string;\n  //   }[];\n  // };\n\n  // let messagesByDates;\n\n  // if (!fetchMessagesLoading && fetchMessagesData) {\n  //   let groups: tplotOptions = fetchMessagesData.fetchMessages.reduce(\n  //     (groups: any, message: any) => {\n  //       const createdAt = message.createdAt.split(\",\").slice(0, 2);\n  //       if (!groups[createdAt]) {\n  //         groups[createdAt] = [];\n  //       }\n  //       groups[createdAt].push(message);\n  //       return groups;\n  //     },\n  //     {}\n  //   );\n  //   messagesByDates = Object.keys(groups).map((createdAt) => {\n  //     return {\n  //       createdAt,\n  //       messages: groups[createdAt],\n  //     };\n  //   });\n  // }\n\n  return (\n    <>\n      <Wrapper>\n        {/* {messagesByDates?.map((element, index) => {\n          return (\n            <React.Fragment key={index}>\n              <DateSeperator\n                date={element.createdAt.split(\",\").slice(0, 2).join(\", \")}\n              />\n              <b.Box className=\"section_content\">\n                {element.messages.map((message, index) => {\n                  return (\n                    <div key={index}>\n                      <Card\n                        variant=\"message\"\n                        id={message.id}\n                        sender={message.fullname}\n                        avatar={message.avatarBackground}\n                        time={message.createdAt}\n                        body={{ type: \"message\", message: message.body }}\n                      />\n                    </div>\n                  );\n                })}\n              </b.Box>\n            </React.Fragment>\n          );\n        })} */}\n      </Wrapper>\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.landing.tsx",["793"],"import React, { useContext } from \"react\";\nimport * as b from \"global/blocks\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n/** assets */\nimport { Globe } from \"assets/svg\";\nimport { BottomArrow } from \"assets/svg\";\nimport { NoNameLogo } from \"assets/svg/Logo\";\n\n/** global */\nimport { size } from \"global/sizes\";\n\n/** components */\nimport { Button } from \"components/atoms/button/button.component\";\n\nexport const LandingFooter: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  const options = [\n    { name: \"Status\", url: \"/\" },\n    { name: \"Privacy & Terms\", url: \"/\" },\n    { name: \"Contact Us\", url: \"/\" },\n  ];\n\n  const socialmedias = [\"twitter\", \"facebook\", \"linkedin\", \"youtube\"];\n\n  const sections = [\n    {\n      subsections: [\n        {\n          title: \"Product\",\n          items: [\n            { name: \"Features\", url: \"/\" },\n            { name: \"Enterprise\", url: \"/\" },\n            { name: \"Security\", url: \"/\" },\n            { name: \"Customer Stories\", url: \"/\" },\n            { name: \"Pricing\", url: \"/\" },\n            { name: \"Slack Demo\", url: \"/\" },\n          ],\n        },\n        {\n          title: \"Slack for teams\",\n          items: [\n            { name: \"Engineering\", url: \"/\" },\n            { name: \"Financial Services\", url: \"/\" },\n            { name: \"Sales\", url: \"/\" },\n            { name: \"IT\", url: \"/\" },\n            { name: \"Marketing\", url: \"/\" },\n            { name: \"Customer Support\", url: \"/\" },\n            { name: \"Human Resources\", url: \"/\" },\n            { name: \"Project Management\", url: \"/\" },\n            { name: \"Media\", url: \"/\" },\n          ],\n        },\n      ],\n    },\n    {\n      subsections: [\n        {\n          title: \"Resources\",\n          items: [\n            { name: \"Slack Tips\", url: \"/\" },\n            { name: \"Blog\", url: \"/\" },\n            { name: \"Events\", url: \"/\" },\n            { name: \"Slack Certified Program\", url: \"/\" },\n            { name: \"Help Center\", url: \"/\" },\n            { name: \"API\", url: \"/\" },\n            { name: \"App Directory\", url: \"/\" },\n            { name: \"Download Slack\", url: \"/\" },\n            { name: \"Partners\", url: \"/\" },\n          ],\n        },\n        {\n          title: \"Company\",\n          items: [\n            { name: \"About Us\", url: \"/\" },\n            { name: \"Leadership\", url: \"/\" },\n            { name: \"News\", url: \"/\" },\n            { name: \"Media Kit\", url: \"/\" },\n            { name: \"Careers\", url: \"/\" },\n          ],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div>\n      <b.Box className=\"footer__logo\">\n        <b.Container>\n          <b.Box py={4} className=\"logo\">\n            <b.Flex>\n              <Logo>\n                <NoNameLogo width={65} />\n              </Logo>\n              <Sections>\n                {sections.map((section, index) => {\n                  return (\n                    <b.Box width={1} key={index}>\n                      <b.Flex>\n                        {section.subsections.map((subsection, index) => {\n                          return (\n                            <SectionWrapper key={index}>\n                              <b.Box>\n                                <b.Box py={2}>\n                                  <b.Text\n                                    color={theme.colors.gray__lighter}\n                                    uppercase\n                                    fontSize={14}\n                                    fontFamily=\"CircularPro-Bold\"\n                                  >\n                                    {subsection.title}\n                                  </b.Text>\n                                </b.Box>\n                                <b.Box p={0} m={0}>\n                                  {subsection.items.map((item, index) => {\n                                    return (\n                                      <b.Li py={3} key={index}>\n                                        <b.Text\n                                          fontSize={14}\n                                          color={theme.colors.gray__light}\n                                        >\n                                          {item.name}\n                                        </b.Text>\n                                      </b.Li>\n                                    );\n                                  })}\n                                </b.Box>\n                              </b.Box>\n                            </SectionWrapper>\n                          );\n                        })}\n                      </b.Flex>\n                    </b.Box>\n                  );\n                })}\n              </Sections>\n            </b.Flex>\n          </b.Box>\n        </b.Container>\n      </b.Box>\n      <b.Box className=\"footer__options\">\n        <b.Box py={4}>\n          <b.Container>\n            <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <OptionsWrapper>\n                <b.Flex alignItems=\"center\">\n                  <b.Flex>\n                    {options.map((option, index) => {\n                      return (\n                        <b.Box mr={3} key={index}>\n                          <Button\n                            variant=\"transparent\"\n                            to={option.url}\n                            content={\n                              <b.Text fontSize={15}>{option.name}</b.Text>\n                            }\n                          />\n                        </b.Box>\n                      );\n                    })}\n                  </b.Flex>\n                  <Button\n                    variant=\"transparent\"\n                    content={\n                      <b.Flex alignItems=\"center\">\n                        <b.Box mr={1}>\n                          <Globe\n                            width={16}\n                            height={16}\n                            fill={theme.colors.gray}\n                          />\n                        </b.Box>\n                        <b.Text fontSize={15}>Change Region</b.Text>\n                        <b.Box ml={2}>\n                          <b.Box>\n                            <BottomArrow\n                              width={8}\n                              height={8}\n                              fill={theme.colors.gray}\n                            />\n                          </b.Box>\n                        </b.Box>\n                      </b.Flex>\n                    }\n                  />\n                </b.Flex>\n              </OptionsWrapper>\n              <SocialMediaWrapper>\n                {socialmedias.map((socialmedia, index) => {\n                  return (\n                    <div key={index}>\n                      <Button variant=\"socialmedia\" type={socialmedia} />\n                    </div>\n                  );\n                })}\n              </SocialMediaWrapper>\n            </b.Flex>\n          </b.Container>\n        </b.Box>\n      </b.Box>\n      <b.Box backgroundColor={theme.colors.gray__lighter} py={3}>\n        <b.Container>\n          <b.Text fontSize={12}>\n            © Copyright 2020 Slack Technologies, Inc. All rights reserved.\n            Various trademarks held by their respective owners.\n          </b.Text>\n        </b.Container>\n      </b.Box>\n    </div>\n  );\n};\n\nconst OptionsWrapper = styled(b.Box)`\n  & > div {\n    flex-direction: column;\n    @media ${size.sm} {\n      flex-direction: row;\n    }\n  }\n`;\n\nconst Logo = styled(b.Box)`\n  width: 100%;\n  margin-bottom: 30px;\n  @media ${size.md} {\n    width: 35%;\n    margin-bottom: 0;\n  }\n`;\n\nconst Sections = styled(b.Box)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  @media ${size.xs} {\n    flex-direction: row;\n  }\n`;\n\nconst SectionWrapper = styled(b.Flex)`\n  width: 100%;\n  flex-direction: row;\n  @media ${size.xs} {\n    width: 50%;\n  }\n\n  & > div {\n    width: 50%;\n  }\n`;\n\nconst ItemLink = styled(Link)`\n  &:hover {\n    color: #1264a3;\n  }\n`;\n\nconst SocialMediaWrapper = styled(b.Flex)`\n  justify-content: center;\n  @media ${size.sm} {\n    justify-content: flex-end;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/MessageHeader.ts",[],"/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.draft.tsx",[],"/Users/ken/Desktop/slack/web/src/components/layout/layout.workspace.tsx",["794"],"import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useCallback } from \"react\";\n\n// Blocks\nimport * as b from \"../../global/blocks\";\n\nimport { size } from \"../../global/sizes\";\n\n// Svgs\nimport { Sidebar } from \"../../assets/svg\";\n\nexport const WorkspaceLayout: React.FC<{\n  section?: string;\n  subsection?: React.ReactChild;\n  options?: React.ReactChild;\n  content?: React.ReactChild;\n}> = ({\n  section = <h3>Section</h3>,\n  subsection = <h3>SubSection</h3>,\n  options = <h3>Options</h3>,\n  content = <h3>Content</h3>,\n}) => {\n  return (\n    <div>\n      <Wrapper>\n        <b.Box className=\"top\">\n          <Top>\n            <b.Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <b.Box className=\"top__left\">\n                <b.Flex alignItems=\"center\">\n                  <IconWrapper className=\"sidebar\" mr={3}>\n                    <b.Flex alignItems=\"center\">\n                      <Sidebar />\n                    </b.Flex>\n                  </IconWrapper>\n                  <b.Box>\n                    <Section>\n                      <b.Text>{section}</b.Text>\n                    </Section>\n                    {subsection && <b.Box>{subsection}</b.Box>}\n                  </b.Box>\n                </b.Flex>\n              </b.Box>\n              <b.Box className=\"top__right\">{options}</b.Box>\n            </b.Flex>\n          </Top>\n        </b.Box>\n        <b.Box className=\"bottom\">{content}</b.Box>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport const Wrapper = styled(b.Box)`\n  height: 100%;\n  display: grid;\n  grid-template-rows: 65px auto;\n\n  & > div {\n    &.top {\n      height: 65px;\n      padding: 15px 0;\n      border-bottom: 1px solid ${({ theme }) => theme.colors.white__dark};\n    }\n\n    &.bottom {\n      height: 100%;\n    }\n  }\n`;\n\nexport const Top = styled(b.Box)`\n  padding: 0 19px;\n  height: auto;\n\n  & div {\n    &.top__left {\n      display: flex;\n      flex-grow: 1;\n      flex-direction: column;\n    }\n\n    &.top__right {\n      width: 100px;\n    }\n  }\n`;\n\nexport const Bottom = styled(b.Box)`\n  max-width: 420px;\n  text-align: center;\n`;\n\nexport const IconWrapper = styled(b.Box)`\n  &.sidebar {\n    width: 35px;\n    height: 35px;\n    & svg {\n      position: relative;\n      top: 2.5px;\n      left: 4.5px;\n      width: 25px;\n      height: 25px;\n      path {\n        fill: ${({ theme }) => theme.colors.gray__light};\n      }\n    }\n\n    @media ${size[\"7xs\"]} {\n      display: none;\n    }\n\n    &:hover {\n      border-radius: 5px;\n      background-color: ${({ theme }) => theme.colors.white__dark};\n    }\n  }\n`;\n\nexport const Title = styled(b.Box)`\n  & > p {\n    font-size: 17px;\n    font-family: \"SlackLato-Bold\";\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\n\nexport const Description = styled(b.Box)`\n  & > p {\n    font-size: 15px;\n    font-family: \"SlackLato-Regular\";\n    color: ${({ theme }) => theme.colors.gray__light};\n  }\n`;\n\nexport const NewMessage = styled(b.Button)`\n  display: inline-block;\n  border: 1px solid ${({ theme }) => theme.colors.gray__lighter};\n  & > p {\n    font-size: 15px;\n    font-family: \"SlackLato-Regular\";\n    color: ${({ theme }) => theme.colors.black__light};\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.white__dark};\n  }\n`;\n\nexport const Section = styled(b.Box)`\n  & > p {\n    color: ${({ theme }) => theme.colors.black};\n    font-family: \"SlackLato-Black\";\n    font-size: 15px;\n  }\n`;\n\nexport const SubSection = styled(b.Text)`\n  margin: 4px 0;\n  & > p {\n    font-size: 13px;\n    font-family: \"SlackLato-Regular\";\n    color: ${({ theme }) => theme.colors.gray};\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/organisms/content/content.draft.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Content/DragDrop.ts",[],["795","796"],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Channel/Container.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.hamburger.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.landing.tsx",["797","798","799","800","801","802","803","804","805"],"import React, { useState, useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { useToggleDispatch } from \"../../../context/toggle-context\";\n\nimport * as b from \"../../../global/blocks\";\nimport { size } from \"../../../global/sizes\";\n\nimport { NameLogo } from \"../../../assets/svg/Logo\";\n\nimport { Button } from \"../../atoms/button\";\nimport { Modal } from \"../modal/modal.component\";\nimport { useHistory } from \"react-router\";\nimport { useMeQuery, useMyTeamsQuery } from \"generated/graphql\";\n\nexport const LandingHeader: React.FC<{}> = () => {\n  const history = useHistory();\n  const [pressed, setPressed] = useState(false);\n  const dispatchToggle = useToggleDispatch();\n\n  // const { data: meData } = useMeQuery();\n  // const { data: teamsData, loading } = useMyTeamsQuery();\n  return (\n    <div>\n      <b.Box py={3}>\n        <b.Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <b.Box width={1}>\n            <b.Flex alignItems=\"center\">\n              <b.Box mr={3}>\n                <NameLogo width={110} />\n              </b.Box>\n              <Options>\n                <div>\n                  <Button variant=\"nav\" nav=\"why\" />\n                </div>\n                <div>\n                  <Button variant=\"nav\" nav=\"solutions\" />\n                </div>\n                <div>\n                  <Button variant=\"nav\" nav=\"resources\" />\n                </div>\n              </Options>\n            </b.Flex>\n          </b.Box>\n\n          {/* <div>\n            <Button\n              variant=\"primary\"\n              size=\"sm\"\n              title=\"Launch\"\n              onPress={() => setPressed(!pressed)}\n            />\n          </div> */}\n\n          <div>\n            <Normal>\n              <b.Flex alignItems=\"center\">\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    size=\"sm\"\n                    title=\"Sign in\"\n                    to=\"/signin\"\n                  />\n                </div>\n              </b.Flex>\n            </Normal>\n            <Mobile>\n              <Button\n                variant=\"hamburger\"\n                onPress={() => dispatchToggle({ type: \"toggle_landing\" })}\n              />\n            </Mobile>\n          </div>\n        </b.Flex>\n      </b.Box>\n      {/* {pressed && teamsData ? (\n        <LaunchWrapper>\n          <Modal variant=\"launch\" teams={teamsData} />\n        </LaunchWrapper>\n      ) : null} */}\n    </div>\n  );\n};\n\nconst Normal = styled.div`\n  display: none;\n  @media ${size.sm} {\n    display: block;\n  }\n`;\n\nconst Mobile = styled.div`\n  display: block;\n  @media ${size.sm} {\n    display: none;\n  }\n`;\n\nconst LaunchWrapper = styled(b.Box)`\n  display: none;\n\n  @media ${size.md} {\n    display: block;\n    position: absolute;\n    top: 80px;\n    right: calc(5%);\n    border-radius: 3px;\n  }\n`;\n\nconst Options = styled(b.Flex)`\n  display: none;\n  @media ${size.sm} {\n    display: flex;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/bullet/bullet.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.next.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.email.tsx",[],"/Users/ken/Desktop/slack/web/src/util/passwordUtil.ts",[],"/Users/ken/Desktop/slack/web/src/components/organisms/subsection/subsection.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/content/content.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.message.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.together.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/DirectMessage/Container.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Switch.ts",[],["806","807"],"/Users/ken/Desktop/slack/web/src/index.tsx",[],"/Users/ken/Desktop/slack/web/src/routes/GetStarted.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/Signin.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/FindTeam.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/ConfirmDigit.tsx",["808","809","810","811","812","813","814","815","816"],"import { useContext } from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styled, { ThemeContext } from \"styled-components\";\n\n// Components\nimport * as b from \"../global/blocks\";\nimport { Layout } from \"../components/layout/layout.component\";\nimport { Button } from \"../components/atoms/button\";\n\nimport {\n  LoadingText,\n  Rotate,\n  spinTransition,\n} from \"../styles/ConfirmDigit/Dialog\";\nimport { Warning } from \"../assets/svg\";\n\nexport const ConfirmDigitPage: React.FC<{}> = () => {\n  const input_1: any = useRef(null);\n  const input_2: any = useRef(null);\n  const input_3: any = useRef(null);\n  const input_4: any = useRef(null);\n  const input_5: any = useRef(null);\n  const input_6: any = useRef(null);\n  const formRef = useRef(null);\n\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n\n  const [first, setFirst] = useState(\"\");\n  const [second, setSecond] = useState(\"\");\n  const [third, setThird] = useState(\"\");\n  const [fourth, setFourth] = useState(\"\");\n  const [fifth, setFifth] = useState(\"\");\n  const [sixth, setSixth] = useState(\"\");\n\n  const location: any = useLocation();\n\n  useEffect(() => {\n    if (first && second && third && fourth && fifth && sixth) {\n      sendQuery();\n    }\n  }, [first, second, third, fourth, fifth, sixth]);\n\n  const sendQuery = async () => {\n    try {\n      const newDigit = parseInt(\n        `${first}${second}${third}${fourth}${fifth}${sixth}`,\n        10\n      );\n    } catch (err) {\n      setError(\"something went awfully wrong\");\n    }\n  };\n\n  const theme = useContext(ThemeContext);\n\n  return (\n    <Layout variant=\"getstarted\">\n      <b.Box py={4}>\n        <b.Flex flexDirection=\"column\" alignItems=\"center\">\n          <b.Box maxWidth={768}>\n            <form\n              ref={formRef}\n              onSubmit={() => {\n                console.log(`${first}`);\n              }}\n            >\n              <b.Box>\n                <b.Box>\n                  <b.Text\n                    fontSize={48}\n                    color={theme.colors.black__light}\n                    fontFamily=\"Larsseit-Bold\"\n                    textAlign=\"center\"\n                  >\n                    Check your email for a code\n                  </b.Text>\n                </b.Box>\n                <b.Box pt={2} pb={4}>\n                  <b.Text\n                    lineHeight={1.5}\n                    textAlign=\"center\"\n                    color={theme.colors.gray}\n                    fontFamily=\"SlackLato-Regular\"\n                    fontSize={20}\n                  >\n                    We've sent a 6-digit code to\n                    {/* <b.Span>{location?.state?.email || \"Email\"}</b.Span>. The */}\n                    code expires shortly, so please enter it soon.\n                  </b.Text>\n                </b.Box>\n\n                <b.Box>\n                  <b.Flex justifyContent=\"center\">\n                    <b.Box>\n                      <b.Flex>\n                        <b.Box>\n                          <TextInput\n                            type=\"text\"\n                            className={\n                              first !== \"\" ? `added input_1` : `input_1`\n                            }\n                            ref={input_1}\n                            maxLength={1}\n                            onChange={(e: any) => {\n                              setFirst(e.target?.value);\n                              input_2.current!.focus();\n                            }}\n                          />\n                        </b.Box>\n                        <b.Box>\n                          <TextInput\n                            className={\n                              second !== \"\" ? `added input_2` : `input_2`\n                            }\n                            ref={input_2}\n                            maxLength={1}\n                            onChange={(e: any) => {\n                              setSecond(e.target?.value);\n                              input_3.current!.focus();\n                            }}\n                          />\n                        </b.Box>\n                        <b.Box>\n                          <TextInput\n                            className={\n                              third !== \"\" ? `added input_3` : `input_3`\n                            }\n                            ref={input_3}\n                            maxLength={1}\n                            onChange={(e: any) => {\n                              setThird(e.target?.value);\n                              input_4.current!.focus();\n                            }}\n                          />\n                        </b.Box>\n                      </b.Flex>\n                    </b.Box>\n                    <b.Box mx={3}>\n                      <b.Flex alignItems=\"center\">\n                        <b.Box>\n                          <b.Text fontFamily=\"SlackLato-Thin\" fontSize={32}>\n                            -\n                          </b.Text>\n                        </b.Box>\n                      </b.Flex>\n                    </b.Box>\n                    <b.Box>\n                      <b.Flex>\n                        <b.Box>\n                          <TextInput\n                            className={\n                              fourth !== \"\" ? `added input_4` : `input_4`\n                            }\n                            ref={input_4}\n                            maxLength={1}\n                            onChange={(e: any) => {\n                              setFourth(e.target?.value);\n                              input_5.current!.focus();\n                            }}\n                          />\n                        </b.Box>\n                        <b.Box>\n                          <TextInput\n                            className={\n                              fifth !== \"\" ? `added input_5` : `input_5`\n                            }\n                            ref={input_5}\n                            maxLength={1}\n                            onChange={(e: any) => {\n                              setFifth(e.target?.value);\n\n                              input_6.current!.focus();\n                            }}\n                          />\n                        </b.Box>\n                        <b.Box>\n                          <TextInput\n                            className={\n                              sixth !== \"\" ? `added input_6` : `input_6`\n                            }\n                            ref={input_6}\n                            maxLength={1}\n                            onChange={(e: any) => {\n                              setSixth(e.target?.value);\n                            }}\n                          />\n                        </b.Box>\n                      </b.Flex>\n                    </b.Box>\n                  </b.Flex>\n                </b.Box>\n              </b.Box>\n            </form>\n            <b.Box mt={2} mb={3}>\n              {/* {loading ? (\n                <b.Flex justifyContent=\"center\" alignItems=\"center\">\n                  <b.Box>\n                    <b.Flex justifyContent=\"center\" alignItems=\"center\">\n                      <LoadingText mr={3}>\n                        <b.Text>Hold on...</b.Text>\n                      </LoadingText>\n                      <Rotate>\n                        <b.AnimatedSpan\n                          transition={spinTransition}\n                          animate={{ rotate: 360 }}\n                        />\n                      </Rotate>\n                    </b.Flex>\n                  </b.Box>\n                </b.Flex>\n              ) : null}\n              {error !== \"\" ? (\n                <b.Flex justifyContent=\"center\" alignItems=\"center\">\n                  <b.Flex justifyContent=\"center\" alignItems=\"center\">\n                    <Warning />\n                    <b.Box>\n                      <b.Text\n                        color=\"black\"\n                        fontSize={13}\n                        fontFamily=\"SlackLato-Thin\"\n                      >\n                        That code wasn't valid. Give it another go!\n                      </b.Text>\n                    </b.Box>\n                  </b.Flex>\n                </b.Flex>\n              ) : null} */}\n            </b.Box>\n            <b.Flex justifyContent=\"center\">\n              <b.Box mr={2}>\n                <Button variant=\"email\" type=\"gmail\" />\n              </b.Box>\n              <Button variant=\"email\" type=\"outlook\" />\n            </b.Flex>\n            <b.Box my={4}>\n              <b.Flex justifyContent=\"center\">\n                <b.Text fontFamily=\"SlackLato-Thin\" fontSize={13}>\n                  Can't find your code? Check your spam folder!\n                </b.Text>\n              </b.Flex>\n            </b.Box>\n          </b.Box>\n        </b.Flex>\n      </b.Box>\n    </Layout>\n  );\n};\n\nconst TextInput = styled.input`\n  font-size: 56px;\n  width: 80px;\n  padding: 15px 0 15px 37px;\n  border: 0.5px solid gray;\n  color: ${({ theme }) => theme.colors.black};\n\n  &:focus {\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  }\n\n  &.added {\n    padding: 15px 0 15px 23px;\n  }\n\n  &.input_1 {\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n  }\n\n  &.input_2 {\n    border-top: 0.5px solid gray;\n    border-left: none;\n\n    &:focus {\n      border-left: 0.5px solid gray;\n    }\n  }\n\n  &.input_3 {\n    border-top: 0.5px solid gray;\n    border-left: none;\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  &.input_4 {\n    border-top: 0.5px solid gray;\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n  }\n\n  &.input_5 {\n    border-top: 0.5px solid gray;\n    border-left: none;\n    &:focus {\n      border-left: 0.5px solid gray;\n    }\n  }\n\n  &.input_6 {\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-left: none;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/styles/ConfirmDigit/Dialog.ts",[],["817","818"],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/index.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Sections.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Options.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Option.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Channel.ts",[],"/Users/ken/Desktop/slack/web/src/routes/App.tsx",[],"/Users/ken/Desktop/slack/web/src/context/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/layout/layout.getstarted.tsx",["819"],"/Users/ken/Desktop/slack/web/src/routes/Create.tsx",["820","821","822","823","824","825","826","827","828"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\n\nimport { Prototype } from \"components/prototype/create\";\n\nimport { Page } from \"pages\";\n\nimport { randomColor } from \"util/randomColor\";\nimport { avatar } from \"global/colors\";\n\nexport const CreateRoutes: React.SFC = () => {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const [input, setInput] = useState(\"\");\n  const location: any = useLocation();\n\n  const avatarBackground = randomColor(avatar);\n  const [info, setInfo] = useState({\n    team: \"\",\n    channel: \"\",\n  });\n\n  return (\n    <>\n      <Switch>\n        <Route path={match.url + \"/verifyemail\"}>\n          <Page variant=\"confirmdigit\" />\n        </Route>\n        <Route path={match.url + \"/teamname\"}>\n          {/* {location.state! && location.state!.authenticated !== undefined ? (\n            <Prototype\n              variant=\"create\"\n              input={input}\n              modifyInput={setInput}\n              title=\"What's the name of your company or team?\"\n              inputPlaceholder=\"Ex. Tesla or Tesla Motors\"\n              requirePolicy\n              opacity={0.15}\n              transaction={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                setInfo({ ...info, team: input });\n                setInput(\"\");\n                history.push(\"/create/channelname\");\n              }}\n              authenticated={me?.ok}\n            />\n          ) : (\n            <Redirect to=\"/get-started\" />\n          )} */}\n        </Route>\n        <Route path={match.url + \"/channelname\"}>\n          {/* {info.team ? (\n            <Prototype\n              variant=\"create\"\n              input={input}\n              modifyInput={setInput}\n              title=\"What's a project your team is working on?\"\n              inputPlaceholder=\"Ex. The very exciting project\"\n              opacity={0.8}\n              team={info.team}\n              transaction={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                setInfo({ ...info, channel: input });\n                setInput(\"\");\n                history.push(\"/create/tada\");\n              }}\n            />\n          ) : (\n            <Redirect exact to=\"/get-started\" />\n          )} */}\n        </Route>\n        <Route path={match.url + \"/tada\"}>\n          {/* {info.team && info.channel ? (\n            <Prototype\n              variant=\"create\"\n              input={input}\n              modifyInput={setInput}\n              title={`Tada! Meet your team's first channel: #${info.channel}`}\n              description=\"You're leaving those unending email threads in the past. Channels give every project, topic, and team a dedicated space for all their messages and files\"\n              opacity={1}\n              team={info.team}\n              channel={info.channel}\n              buttonName=\"See your channel in Slack\"\n              transaction={async (e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                // const { data } = await createTeam({\n                //   variables: {\n                //     name: info.team,\n                //     avatarBackground,\n                //   },\n                // });\n\n                if (data && data?.createTeam?.team!.id) {\n                  // await createChannel({\n                  //   variables: {\n                  //     name: \"general\",\n                  //     teamId: data.createTeam.team.id,\n                  //     description:\n                  //       \"This channel is for workspace-wide communication and announcements. All members are in this channel.\",\n                  //     isPublic: true,\n                  //     topic:\n                  //       \"Company-wide announcements and work-based matters\",\n                  //   },\n                  // });\n\n                  // await createChannel({\n                  //   variables: {\n                  //     name: \"random\",\n                  //     teamId: data.createTeam.team.id,\n                  //     description:\n                  //       \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\",\n                  //     isPublic: true,\n                  //     topic: \"Non-work banter and water cooler conversation\",\n                  //   },\n                  // });\n\n                  // await createChannel({\n                  //   variables: {\n                  //     name: info.channel,\n                  //     teamId: data.createTeam.team.id,\n                  //     isPublic: true,\n                  //   },\n                  // });\n\n                  history.push(`/client/${data.createTeam.team.id}`);\n                }\n              }}\n            />\n          ) : (\n            <Redirect exact to=\"/get-started\" />\n          )} */}\n        </Route>\n      </Switch>\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/pages/CreateTeam.tsx",["829","830","831","832"],"import * as React from \"react\";\nimport { Dispatch, SetStateAction, FormEvent } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport { size } from \"../global/sizes\";\n\n// Blocks\nimport * as b from \"../global/blocks\";\n\nimport { Header } from \"../components/organisms/header/header.component\";\nimport { Modal } from \"../components/organisms/modal/modal.component\";\nimport { Prototype } from \"../components/prototype/create\";\n\ninterface Props {\n  title?: string;\n  inputPlaceholder?: string;\n  requirePolicy?: boolean;\n  opacity?: number;\n  name?: string;\n  description?: string;\n  buttonName?: string;\n  team?: string;\n  channel?: string;\n  authenticated?: boolean;\n  transaction?: (e: FormEvent<HTMLFormElement>) => void;\n  input?: string;\n  modifyInput?: Dispatch<SetStateAction<string>>;\n}\n\nexport const CreateTeamPage: React.FC<Props> = ({\n  title,\n  inputPlaceholder,\n  team,\n  channel,\n  requirePolicy,\n  opacity,\n  name,\n  description,\n  buttonName,\n  children,\n  authenticated,\n  transaction,\n  input,\n  modifyInput,\n}) => {\n  return (\n    <Wrapper exit={{ opacity: 0 }} initial=\"initial\" animate=\"animate\">\n      <Header variant=\"create\" />\n      <b.Box width={1} height=\"100%\">\n        <b.Flex>\n          <Left>\n            <b.Flex>\n              <b.Box maxWidth={400}>\n                <Prototype variant=\"default\" />\n              </b.Box>\n            </b.Flex>\n          </Left>\n          <Right pl={5}>\n            <b.Flex alignItems=\"center\">\n              <Modal\n                variant=\"workspace\"\n                team={team}\n                opacity={opacity}\n                channel={channel}\n                children={children}\n              />\n            </b.Flex>\n          </Right>\n        </b.Flex>\n      </b.Box>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(b.AnimatedBox)`\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 70px auto;\n`;\n\nconst Left = styled(b.Box)`\n  width: 100%;\n\n  @media ${size.md} {\n    display: block;\n    width: 50%;\n    padding-right: 58px;\n  }\n\n  & > div {\n    justify-content: center;\n    align-items: center;\n\n    @media ${size.md} {\n      justify-content: flex-end;\n    }\n  }\n`;\n\nconst Right = styled(b.Box)`\n  display: none;\n  background-color: ${({ theme }) => theme.colors.white__dark};\n\n  @media ${size.md} {\n    display: block;\n    width: 50%;\n  }\n`;\n\nconst LeftWrapper = styled(b.Box)`\n  max-width: 400px;\n`;\n\nconst Input = styled(b.Input)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.gray__dark};\n  border-radius: 7px;\n  padding: 15px 0px 15px 15px;\n`;\n\nconst NextButton = styled(b.Button)`\n  width: 100%;\n  padding: 12px 0;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.white};\n  font-family: \"SlackLato-Bold\";\n  font-size: 18px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary__lighter};\n  }\n`;\n\nconst Policy = styled(b.Box)`\n  span {\n    color: ${({ theme }) => theme.colors.blue__light};\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/styles/Landing/index.ts",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/card.activity.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/landing/landing.choose.tsx",[],"/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/Container.tsx",["833","834","835","836","837","838","839"],"import React from \"react\";\nimport { useEffect } from \"react\";\n\nimport * as b from \"global/blocks\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { MessageHeader } from \"components/Workspace/DirectMessage/MessageHeader\";\n\nimport { Wrapper } from \"styles/Workspace/DirectMessage/Container\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { Seperator } from \"components/molecules/seperator\";\nimport { Card } from \"../../molecules/card\";\n\nexport const MessageContainer = () => {\n  const { userId } = useParams<{ userId: string }>();\n\n  // const subscribeToNewMessages = (latestUser: string) =>\n  //   subscribeToMore({\n  //     document: SUBSCRIBE_TO_DIRECT_MESSAGES,\n  //     variables: { fromId: latestUser },\n  //     updateQuery: (prev, { subscriptionData }) => {\n  //       if (!subscriptionData.data) return prev;\n  //       const newMessage = subscriptionData.data.subscribeToDirectMessages;\n  //       return Object.assign({}, prev, {\n  //         fetchDirectMessages: [...prev.fetchDirectMessages, newMessage],\n  //       });\n  //     },\n  //   });\n\n  // useEffect(() => {\n  //   const unsubscribe = subscribeToNewMessages(userId);\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // }, [userId]);\n\n  // const SUBSCRIBE_TO_DIRECT_MESSAGES = gql`\n  //   subscription SubscribeToDirectMessages($fromId: String!) {\n  //     subscribeToDirectMessages(fromId: $fromId) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const FETCH_DIRECT_MESSAGES = gql`\n  //   query FetchDirectMessages($fromId: String!) {\n  //     fetchDirectMessages(fromId: $fromId) {\n  //       id\n  //       fullname\n  //       body\n  //       avatarBackground\n  //       createdAt\n  //     }\n  //   }\n  // `;\n\n  // const {\n  //   subscribeToMore,\n  //   data: fetchDirectMessagesData,\n  //   loading: fetchDirectMessagesLoading,\n  // } = useQuery(FETCH_DIRECT_MESSAGES, {\n  //   variables: { fromId: userId },\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n\n  // this gives an object with dates as keys\n\n  // type tplotOptions = {\n  //   [key: string]: {\n  //     id: number;\n  //     fullname: string;\n  //     avatarBackground: string;\n  //     body: string;\n  //     createdAt: string;\n  //   }[];\n  // };\n\n  // let messagesByDates;\n\n  // if (!fetchDirectMessagesLoading && fetchDirectMessagesData) {\n  //   let groups: tplotOptions = fetchDirectMessagesData.fetchDirectMessages.reduce(\n  //     (groups: any, message: any) => {\n  //       const createdAt = message.createdAt.split(\",\").slice(0, 2);\n  //       if (!groups[createdAt]) {\n  //         groups[createdAt] = [];\n  //       }\n  //       groups[createdAt].push(message);\n  //       return groups;\n  //     },\n  //     {}\n  //   );\n  //   messagesByDates = Object.keys(groups).map((createdAt) => {\n  //     return {\n  //       createdAt,\n  //       messages: groups[createdAt],\n  //     };\n  //   });\n  // }\n\n  return (\n    <Wrapper>\n      <MessageHeader />\n      {/* {messagesByDates?.map((element, index) => {\n        return (\n          <React.Fragment key={index}>\n            <DateSeperator\n              date={element.createdAt.split(\",\").slice(0, 2).join(\", \")}\n            />\n            <b.Box className=\"section_content\">\n              {element.messages.map((message, index) => {\n                return (\n                  <div key={index}>\n                    <Card\n                      variant=\"message\"\n                      id={message.id}\n                      sender={message.fullname}\n                      avatar={message.avatarBackground}\n                      time={message.createdAt}\n                      body={{ type: \"message\", message: message.body }}\n                    />\n                  </div>\n                );\n              })}\n            </b.Box>\n          </React.Fragment>\n        );\n      })} */}\n    </Wrapper>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/header/header.create.tsx",["840"],"import React, { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n/** global */\nimport * as b from \"../../../global/blocks\";\n\n/** assets */\nimport { NameLogo } from \"../../../assets/svg\";\n\nexport const CreateHeader: React.FC<{}> = () => {\n  const theme = useContext(ThemeContext);\n  return (\n    <b.Box position=\"sticky\" top=\"0\" zIndex={99}>\n      <b.Box\n        boxShadow=\"0 1px 1px rgba(0, 0, 0, 0.15)\"\n        borderBottom=\"0.5px solid\"\n        borderColor={theme.colors.white__dark}\n        height={70}\n        backgroundColor={theme.colors.white}\n      >\n        <b.Container>\n          <b.Flex alignItems=\"center\" justifyContent=\"center\">\n            <Link to=\"/\">\n              <b.Box mr={4}>\n                <NameLogo width={100} height={60} />\n              </b.Box>\n            </Link>\n          </b.Flex>\n        </b.Container>\n      </b.Box>\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Section.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Message.ts",[],["841","842"],"/Users/ken/Desktop/slack/web/src/global/sizes.ts",[],"/Users/ken/Desktop/slack/web/src/components/atoms/input/input.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/footer/footer.signin.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/header/header.signin.tsx",[],"/Users/ken/Desktop/slack/web/src/global/token.ts",[],"/Users/ken/Desktop/slack/web/src/assets/fonts/index.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/Workspace.tsx",["843"],"import { Redirect, useParams } from \"react-router-dom\";\n\n// Styles\nimport { Wrapper, ContentWrapper } from \"../styles/Workspace\";\n\n// Components\nimport { Header } from \"../components/organisms/header/header.component\";\nimport { Sidebar } from \"../components/organisms/sidebar\";\nimport { Toggle } from \"../components/molecules/toggle\";\nimport { Modal } from \"../components/organisms/modal/modal.component\";\n\n// Queries\n\nimport { useToggleState } from \"../context/toggle-context\";\nimport { useEffect } from \"react\";\n\ninterface Props {\n  route?: React.ReactNode;\n}\n\nexport const WorkspacePage: React.FC<Props> = ({ route }) => {\n  const state = useToggleState();\n\n  const { teamId } = useParams<{ teamId: string }>();\n  localStorage.setItem(\"teamId\", teamId);\n\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"initial\";\n    };\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        {state.channel && <Modal variant=\"channel\" />}\n        {state.invite && <Modal variant=\"invite\" />}\n        <Header variant=\"workspace\" />\n        {state.menu ? <Toggle variant=\"menu\" /> : null}\n        <ContentWrapper>\n          <Sidebar />\n          {route}\n        </ContentWrapper>\n      </Wrapper>\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/workspace/workspace.mention.tsx",["844","845"],"import * as React from \"react\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport styled from \"styled-components\";\n\n// Svgs\nimport { AtSign, Close, Settings, Transition } from \"assets/svg\";\n\n// Styles\n\nimport { Layout } from \"components/layout/layout.component\";\nimport { useTabTitle } from \"hooks/useTabTitle\";\nimport { Content } from \"components/organisms/content/content.component\";\n\nexport const MentionWorkspace: React.FC<{}> = () => {\n  useTabTitle(\"Temporary\");\n\n  return (\n    <Layout\n      variant=\"workspace\"\n      section=\"Mentions & reactions\"\n      content={<Content variant=\"mention\" />}\n      options={\n        <b.Box>\n          <b.Flex alignItems=\"center\">\n            <IconWrapper className=\"sideoption\" mr={2}>\n              <Settings />\n            </IconWrapper>\n            <IconWrapper className=\"sideoption\">\n              <Transition />\n            </IconWrapper>\n          </b.Flex>\n        </b.Box>\n      }\n    />\n  );\n};\n\nconst IconWrapper = styled(b.Box)`\n  &.sideoption {\n    padding: 8px 10px 6px 10px;\n    background-color: transparent;\n    &:hover {\n      background-color: ${({ theme }: any) => theme.colors.white__dark};\n      border-radius: 3px;\n    }\n\n    svg {\n      width: 17px;\n      height: 17px;\n      path {\n        fill: ${({ theme }: any) => theme.colors.gray};\n      }\n    }\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/util/randomColor.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Profile.ts",[],"/Users/ken/Desktop/slack/web/src/pages/Landing.tsx",["846","847"],"import { useContext, useEffect } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { ThemeContext } from \"styled-components\";\nimport * as b from \"../global/blocks\";\nimport { Header } from \"../components/organisms/header/header.component\";\n\nimport { Footer } from \"../components/organisms/footer/footer.component\";\nimport { useMeQuery, useMyTeamsQuery } from \"../generated/graphql\";\nimport { Modal } from \"../components/organisms/modal/modal.component\";\nimport { useToggleState } from \"../context/toggle-context\";\nimport { ModalWrapper } from \"../styles/Landing\";\nimport { Prototype } from \"../components/prototype/landing/landing.component\";\n\nexport const LandingPage: React.FC<{}> = () => {\n  useEffect(() => {\n    document.title = \"Where work happens | Slack\";\n  }, []);\n\n  const state = useToggleState();\n  const theme = useContext(ThemeContext);\n  return (\n    <>\n      <AnimatePresence>\n        {state.landing && (\n          <ModalWrapper\n            initial={{ width: 0 }}\n            animate={{ width: \"100%\" }}\n            exit={{ width: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <Modal variant=\"landing\" />\n          </ModalWrapper>\n        )}\n      </AnimatePresence>\n      <b.Box zIndex={100} backgroundColor={theme.colors.white__darker}>\n        <b.Container>\n          <Header variant=\"landing\" />\n        </b.Container>\n      </b.Box>\n      <Prototype variant=\"banner\" />\n      <Prototype variant=\"together\" />\n      <Prototype variant=\"software\" />\n      <Prototype variant=\"choose\" />\n      <Footer variant=\"landing\" />\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/atoms/input/input.modal.tsx",["848"],"import React from \"react\";\nimport * as b from \"../../../global/blocks\";\nimport styled from \"styled-components\";\n\ntype Action =\n  | { type: \"add_email\"; payload: string }\n  | { type: \"add_name\"; payload: string };\n\nexport const ModalInput: React.FC<{ value?: string; onChange?: any }> = ({\n  value,\n  onChange,\n}) => {\n  return (\n    <StyledInput>\n      <input value={value} placeholder=\"name@example.com\" onChange={onChange} />\n    </StyledInput>\n  );\n};\n\nconst StyledInput = styled(b.Box)`\n  width: 50%;\n  padding-right: 7px;\n  & > input {\n    width: 100%;\n    border-radius: 5px;\n    border: 1px solid ${({ theme }) => theme.colors.gray__light};\n    font-size: 17px;\n    color: ${({ theme }) => theme.colors.gray};\n    padding: 7px 0 7px 6px;\n  }\n`;\n","/Users/ken/Desktop/slack/web/src/styles/Workspace/Sidebar/Messages.ts",[],"/Users/ken/Desktop/slack/web/src/styles/Workspace/index.ts",[],"/Users/ken/Desktop/slack/web/src/pages/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/index.tsx",[],"/Users/ken/Desktop/slack/web/src/pages/GetStarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/card/index.tsx",[],"/Users/ken/Desktop/slack/web/src/routes/Workspace.tsx",["849"],"import * as React from \"react\";\n\n// Routing\nimport {\n  Route,\n  Switch,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport { StaticContext, Redirect } from \"react-router\";\n\nimport { Prototype } from \"components/prototype/workspace/workspace.component\";\nimport { Page } from \"pages\";\n\ntype Props = RouteComponentProps<\n  {},\n  StaticContext,\n  { from: { pathname: string } }\n>;\n\nexport const ClientRoutes: React.FC<Props> = () => {\n  return (\n    <>\n      <Switch>\n        <Page variant=\"workspace\" route={<WorkspaceRoute />} />\n      </Switch>\n    </>\n  );\n};\n\nexport const WorkspaceRoute: React.FC<{}> = () => {\n  const match = useRouteMatch();\n  return (\n    <>\n      <Route exact path={match.url + \"/saved-page\"}>\n        <Prototype variant=\"saved\" />\n      </Route>\n      <Route exact path={match.url + \"/threads\"}>\n        <Prototype variant=\"threads\" />\n      </Route>\n      <Route path={match.url + \"/drafts\"}>\n        <Prototype variant=\"drafts\" />\n      </Route>\n      <Route path={match.url + \"/activity-page\"}>\n        <Prototype variant=\"mention\" />\n      </Route>\n      <Route path={match.url + \"/channel/:channelId\"}>\n        <Prototype variant=\"channel\" />\n      </Route>\n      <Route path={match.url + \"/user/:userId\"}>\n        <Prototype variant=\"directmessage\" />\n      </Route>\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/layout/layout.component.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/seperator/seperator.date.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/seperator/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/index.tsx",["850","851"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Components\nimport { Options } from \"./Options\";\nimport { SidebarSections } from \"./Sections\";\nimport { Profile } from \"./Profile\";\n\n// Styles\nimport { Wrapper } from \"styles/Workspace/Sidebar\";\n\ninterface Props {\n  team?: string;\n  displayMenu?: () => void;\n}\n\nexport const Sidebar: React.FC<Props> = ({ displayMenu }) => {\n  const [hovered, setHovered] = useState(false);\n  const { teamId } = useParams<{ teamId: string }>();\n  // const { data: { team } = {} } = useTeamQuery({\n  //   variables: { teamId },\n  // });\n\n  return (\n    <>\n      <Wrapper>\n        <b.Box\n          className={hovered ? \"profile hovered\" : \"profile\"}\n          onClick={displayMenu}\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n        >\n          {/* {team && team.team && <Profile team={team.team} hovered={hovered} />} */}\n        </b.Box>\n        <b.Box className=\"sidebar\" style={{ overflowY: \"scroll\" }}>\n          <Options />\n          <SidebarSections />\n        </b.Box>\n      </Wrapper>\n    </>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Profile.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Channels.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Channel.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Sections.tsx",["852","853","854","855","856"],"import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Components\nimport { SidebarSection } from \"./Section\";\nimport { Messages } from \"./Messages\";\nimport { Channels } from \"./Channels\";\n\n// Styles\nimport { Wrapper, InviteButton } from \"styles/Workspace/Sidebar/Sections\";\nimport { useToggleState, useToggleDispatch } from \"context/toggle-context\";\n\ninterface Props {}\n\nexport const SidebarSections: React.FC<Props> = () => {\n  const toggle = useToggleState();\n  const dispatchToggle = useToggleDispatch();\n\n  const [revealed, setRevealed] = useState({\n    channels: false,\n    messages: false,\n    apps: false,\n  });\n\n  const { teamId } = useParams<{ teamId: string }>();\n\n  // useEffect(() => {\n  //   refetch();\n  // }, [toggle.channel, refetch]);\n\n  return (\n    <Wrapper>\n      <SidebarSection\n        title=\"Channels\"\n        subtitle={\n          <b.Text\n            fontFamily=\"SlackLato-Light\"\n            color=\"pink__lighter\"\n            fontSize={15}\n          >\n            Add a channel\n          </b.Text>\n        }\n        onReveal={() => {\n          setRevealed({ ...revealed, channels: !revealed.channels });\n        }}\n      >\n        {/* {!loading && data && (\n          <>\n            {revealed.channels && data.channels ? (\n              <Channels data={data!.channels.channels} />\n            ) : null}\n          </>\n        )} */}\n      </SidebarSection>\n      <SidebarSection\n        title=\"Direct mesages\"\n        subtitle={\n          <InviteButton\n            onClick={() => {\n              dispatchToggle({ type: \"toggle_invite\" });\n            }}\n          >\n            <b.Text fontFamily=\"SlackLato-Black\" color=\"white\" fontSize={15}>\n              Invite people\n            </b.Text>\n          </InviteButton>\n        }\n        onReveal={() =>\n          setRevealed({ ...revealed, messages: !revealed.messages })\n        }\n      >\n        {/* {revealed.messages ? <Messages /> : null} */}\n      </SidebarSection>\n      <SidebarSection\n        title=\"Apps\"\n        onReveal={() => setRevealed({ ...revealed, apps: !revealed.apps })}\n      />\n    </Wrapper>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Messages.tsx",["857","858"],"import * as React from \"react\";\nimport * as b from \"../../../global/blocks\";\nimport { useParams } from \"react-router-dom\";\n\n// Styles\nimport { Message } from \"./Message\";\nimport { Heart } from \"../../../assets/svg\";\nimport {\n  IconWrapper,\n  SlackBot,\n  Name,\n} from \"../../../styles/Workspace/Sidebar/Messages\";\n\ninterface Props {}\n\nexport const Messages: React.FC<Props> = () => {\n  const { teamId } = useParams<{ teamId: string }>();\n  return (\n    <b.Box>\n      <SlackBot py={2}>\n        <b.Flex alignItems=\"center\">\n          <IconWrapper className=\"heart\" pr={2}>\n            <Heart />\n          </IconWrapper>\n          <Name>\n            <b.Text\n              fontFamily=\"SlackLato-Light\"\n              color=\"pink__lighter\"\n              fontSize={15}\n            >\n              Slackbot\n            </b.Text>\n          </Name>\n        </b.Flex>\n      </SlackBot>\n    </b.Box>\n  );\n};\n\n//  {/* {usersData &&\n//     usersData.users &&\n//     usersData.users.users!.map((user, index) => {\n//       return (\n//         <Message\n//           key={index}\n//           name={user.fullname}\n//           teamId={teamId}\n//           userId={user.id}\n//         />\n//       );\n//     })} */}\n","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Message.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Option.tsx",[],"/Users/ken/Desktop/slack/web/src/styles/FindTeam/index.ts",[],"/Users/ken/Desktop/slack/web/src/components/Workspace/DirectMessage/MessageHeader.tsx",["859","860","861","862","863"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\n// Styles\nimport {\n  Header,\n  Description,\n  Wrapper,\n  Profile,\n  IconWrapper,\n} from \"styles/Workspace/DirectMessage/MessageHeader\";\n\n// Svgs\nimport { UserAlt } from \"assets/svg\";\n\n// Queries\nimport { useUserQuery } from \"generated/graphql\";\n\nexport const MessageHeader = () => {\n  const { userId } = useParams<{ userId: string }>();\n  // const { data: userData } = useUserQuery({\n  //   variables: {\n  //     userId,\n  //   },\n  // });\n  return (\n    <Wrapper>\n      <b.Box>\n        <b.Flex alignItems=\"center\">\n          <b.Box mr={2}>\n            {/* {userData && userData.user.user && (\n              <Profile\n                backgroundColor={userData.user.user.avatarBackground}\n                mr={2}\n              >\n                <IconWrapper className=\"avatar\">\n                  <UserAlt />\n                </IconWrapper>\n              </Profile>\n            )} */}\n          </b.Box>\n          <Header>\n            {/* {userData && userData.user.user && (\n              <b.Text>{userData.user.user.fullname} </b.Text>\n            )} */}\n          </Header>\n        </b.Flex>\n      </b.Box>\n      <Description>\n        <b.Text>\n          This is the very beginning of your direct message history with &nbsp;\n          {/* {userData && userData.user.user && (\n            <b.Span>@{userData.user.user.fullname}</b.Span>\n          )} */}\n        </b.Text>\n      </Description>\n    </Wrapper>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Options.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.switch.tsx",[],"/Users/ken/Desktop/slack/web/src/components/organisms/sidebar/Section.tsx",[],"/Users/ken/Desktop/slack/web/src/animations/FadeInStagger.ts",[],"/Users/ken/Desktop/slack/web/src/components/organisms/modal/modal.workspace.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/toggle/toggle.menu.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/option.profile.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/option.menu.tsx",[],"/Users/ken/Desktop/slack/web/src/components/molecules/option/option.status.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/create/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/create/create.name.tsx",["864"],"import { Input } from \"components/atoms/input/input.component\";\nimport React from \"react\";\nimport * as b from \"global/blocks\";\n\nexport const NameCreate: React.FC<{ type?: string }> = ({ type }) => {\n  return (\n    <b.Box>\n      {/* <b.Box>\n        <b.Text fontFamily=\"SlackLato-Black\" fontSize={26} color=\"black__light\">\n          {title}\n        </b.Text>\n      </b.Box>\n      <form onSubmit={transaction}>\n        {inputPlaceholder && (\n          <b.Box mt={4} mb={3} width={1}>\n            <Input\n              value={input}\n              onChange={(e) => {\n                modifyInput(e.target.value);\n              }}\n              placeholder={inputPlaceholder}\n            />\n          </b.Box>\n        )}\n        {description && (\n          <b.Box mt={4} mb={3} width={1}>\n            <b.Text lineHeight={1.7}>{description}</b.Text>\n          </b.Box>\n        )}\n        <b.Box width={1}>\n          <NextButton name={name} type=\"submit\">\n            <b.Text>{buttonName ? `${buttonName}` : `Next`}</b.Text>\n          </NextButton>\n        </b.Box>\n      </form>\n      {requirePolicy ? (\n        <Policy my={4}>\n          <b.Text fontSize={12} fontFamily=\"SlackLato-Light\">\n            By continuing, you're agreeing to our{\" \"}\n            <span>Customer Terms of Service</span>, <span>Privacy Policy</span>,\n            and <span>Cookie Policy</span>.\n          </b.Text>\n        </Policy>\n      ) : null} */}\n    </b.Box>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.signin.tsx",["865","866"],"/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.getstarted.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.signup.tsx",["867","868","869","870"],"import React, { useState } from \"react\";\nimport * as b from \"global/blocks\";\nimport { Input } from \"components/atoms/input/input.component\";\nimport { Dialog } from \"components/atoms/dialog/dialog.component\";\nimport { Button } from \"components/atoms/button\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  emailRegex,\n  fullNameRegex,\n  weakRegex,\n} from \"../../../util/passwordUtil\";\nimport { randomColor } from \"../../../util/randomColor\";\nimport { profile } from \"global/colors\";\n\nexport const SignUpAuth: React.FC<{}> = () => {\n  const history = useHistory();\n  const [info, setInfo] = useState({\n    fullname: \"\",\n    password: \"\",\n    email: \"\",\n  });\n  const [errorLog, setErrorLog] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const createAccount = async () => {\n    if (!info.fullname) {\n      displayError(\"Whoops! You forgot your name!\");\n      return;\n    }\n\n    if (!info.fullname.match(fullNameRegex)) {\n      displayError(\"I want your full name! Not your nickname!\");\n      return;\n    }\n\n    if (!info.email) {\n      displayError(\"Wait,, you forgot your email!\");\n      return;\n    }\n\n    if (!info.email.match(emailRegex)) {\n      displayError(\"Is this really an email?\");\n      return;\n    }\n\n    if (!info.password.match(weakRegex)) {\n      displayError(\"The password is not 6 characters! Give it another try!\");\n      return;\n    }\n\n    const avatarBackground = randomColor(profile);\n  };\n\n  const displayError = (phrase: string) => {\n    setErrorLog(phrase);\n    setTimeout(() => {\n      setErrorLog(\"\");\n    }, 5000);\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        createAccount();\n      }}\n    >\n      <div>\n        <b.Box mt={3}>\n          {[\n            {\n              value: \"fullname\",\n              variant: \"plain\",\n            },\n            {\n              value: \"email\",\n              variant: \"plain\",\n            },\n            {\n              value: \"password\",\n              variant: \"password\",\n            },\n          ].map((params, index) => (\n            <b.Box my={2} key={index}>\n              <Input setInfo={setInfo} info={info} {...params} />\n            </b.Box>\n          ))}\n        </b.Box>\n        <div>\n          <Dialog variant=\"error\" error={errorLog} />\n        </div>\n        <div>\n          <Button variant=\"confirm\" block />\n        </div>\n      </div>\n    </form>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.invited.tsx",["871","872","873","874","875","876","877"],"import React, { useState } from \"react\";\nimport { useParams, Redirect, useHistory } from \"react-router-dom\";\n\n// Blocks\nimport * as b from \"global/blocks\";\n\nimport { Dialog } from \"components/atoms/dialog/dialog.component\";\n\n// Utils\nimport { Input } from \"components/atoms/input/input.component\";\n\nimport { fullNameRegex, weakRegex } from \"util/passwordUtil\";\nimport { randomColor } from \"util/randomColor\";\nimport { profile } from \"global/colors\";\n\nimport { Button } from \"components/atoms/button\";\n\nexport const InvitedAuth: React.FC<{}> = () => {\n  const { invitorId, token } = useParams<{\n    invitorId: string;\n    token: string;\n  }>();\n\n  const history = useHistory();\n\n  const [info, setInfo] = useState({\n    fullname: \"\",\n    password: \"\",\n  });\n  const [errorLog, setErrorLog] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const displayError = (phrase: string) => {\n    setErrorLog(phrase);\n    setTimeout(() => {\n      setErrorLog(\"\");\n    }, 5000);\n  };\n\n  const createAccount = async () => {\n    if (!info.fullname) {\n      displayError(\"Whoops! You forgot your name!\");\n      return;\n    }\n\n    if (!info.password) {\n      displayError(\"Password field is empty\");\n      return;\n    }\n\n    if (!info.fullname.match(fullNameRegex)) {\n      displayError(\"I want your full name! Not your nickname!\");\n      return;\n    }\n\n    if (!info.password.match(weakRegex)) {\n      displayError(\"The password is not 6 characters! Give it another try!\");\n      return;\n    }\n\n    const avatarBackground = randomColor(profile);\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          createAccount();\n        }}\n      >\n        {[\n          {\n            value: \"fullname\",\n            variant: \"plain\",\n          },\n          { value: \"password\", variant: \"password\" },\n        ].map((params, index) => (\n          <b.Box key={index}>\n            <Input invite info={info} setInfo={setInfo} {...params} />\n          </b.Box>\n        ))}\n        <Dialog variant=\"error\" error={errorLog} />\n        <b.Box mt={3}>\n          <Button variant=\"confirm\" block />\n        </b.Box>\n      </form>\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.find.tsx",["878","879"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Input } from \"components/atoms/input/input.component\";\nimport * as b from \"global/blocks\";\nimport { emailRegex } from \"util/passwordUtil\";\nimport { Dialog } from \"components/atoms/dialog/dialog.component\";\nimport { Button } from \"components/atoms/button\";\n\nexport const FindAuth: React.FC<{}> = () => {\n  // const [check, { data }] = useCheckEmailLazyQuery();\n  const [info, setInfo] = useState({\n    email: \"\",\n  });\n  return (\n    <div>\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault();\n          // check({ variables: { email: info.email } });\n        }}\n      >\n        <b.Box my={2}>\n          <Input\n            variant=\"plain\"\n            setInfo={setInfo}\n            info={info}\n            value=\"email\"\n            placeholder=\"name@work-email.com\"\n            criteria={info.email?.match(emailRegex)}\n          />\n        </b.Box>\n\n        <b.Box height={35} my={2}>\n          {/* {data?.checkEmail && (\n            <b.Box>\n              <Dialog variant=\"error\" />\n            </b.Box>\n          )} */}\n        </b.Box>\n        <b.Box>\n          <Button variant=\"confirm\" loading={false} block />\n        </b.Box>\n      </form>\n    </div>\n  );\n};\n","/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.workspaces.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/auth/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/index.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/button/button.auth.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/auth/auth.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/prototype/create/index.stories.tsx",[],"/Users/ken/Desktop/slack/web/src/components/atoms/dialog/dialog.email.tsx",[],{"ruleId":"880","replacedBy":"881"},{"ruleId":"882","replacedBy":"883"},{"ruleId":"880","replacedBy":"884"},{"ruleId":"882","replacedBy":"885"},{"ruleId":"886","severity":1,"message":"887","line":15,"column":3,"nodeType":"888","messageId":"889","endLine":15,"endColumn":28},{"ruleId":"886","severity":1,"message":"890","line":16,"column":3,"nodeType":"888","messageId":"889","endLine":16,"endColumn":25},{"ruleId":"886","severity":1,"message":"891","line":13,"column":10,"nodeType":"888","messageId":"889","endLine":13,"endColumn":25},{"ruleId":"886","severity":1,"message":"892","line":129,"column":7,"nodeType":"888","messageId":"889","endLine":129,"endColumn":24},{"ruleId":"886","severity":1,"message":"893","line":2,"column":8,"nodeType":"888","messageId":"889","endLine":2,"endColumn":14},{"ruleId":"886","severity":1,"message":"894","line":48,"column":7,"nodeType":"888","messageId":"889","endLine":48,"endColumn":14},{"ruleId":"886","severity":1,"message":"895","line":68,"column":7,"nodeType":"888","messageId":"889","endLine":68,"endColumn":10},{"ruleId":"886","severity":1,"message":"896","line":81,"column":7,"nodeType":"888","messageId":"889","endLine":81,"endColumn":14},{"ruleId":"886","severity":1,"message":"897","line":4,"column":13,"nodeType":"888","messageId":"889","endLine":4,"endColumn":14},{"ruleId":"886","severity":1,"message":"898","line":7,"column":10,"nodeType":"888","messageId":"889","endLine":7,"endColumn":18},{"ruleId":"886","severity":1,"message":"899","line":8,"column":10,"nodeType":"888","messageId":"889","endLine":8,"endColumn":20},{"ruleId":"886","severity":1,"message":"900","line":2,"column":10,"nodeType":"888","messageId":"889","endLine":2,"endColumn":19},{"ruleId":"886","severity":1,"message":"890","line":6,"column":10,"nodeType":"888","messageId":"889","endLine":6,"endColumn":32},{"ruleId":"886","severity":1,"message":"901","line":416,"column":11,"nodeType":"888","messageId":"889","endLine":416,"endColumn":16},{"ruleId":"886","severity":1,"message":"890","line":13,"column":10,"nodeType":"888","messageId":"889","endLine":13,"endColumn":32},{"ruleId":"886","severity":1,"message":"902","line":16,"column":10,"nodeType":"888","messageId":"889","endLine":16,"endColumn":20},{"ruleId":"886","severity":1,"message":"903","line":17,"column":10,"nodeType":"888","messageId":"889","endLine":17,"endColumn":32},{"ruleId":"886","severity":1,"message":"904","line":20,"column":11,"nodeType":"888","messageId":"889","endLine":20,"endColumn":20},{"ruleId":"886","severity":1,"message":"905","line":127,"column":7,"nodeType":"888","messageId":"889","endLine":127,"endColumn":12},{"ruleId":"886","severity":1,"message":"906","line":134,"column":7,"nodeType":"888","messageId":"889","endLine":134,"endColumn":18},{"ruleId":"886","severity":1,"message":"907","line":2,"column":10,"nodeType":"888","messageId":"889","endLine":2,"endColumn":18},{"ruleId":"886","severity":1,"message":"902","line":6,"column":10,"nodeType":"888","messageId":"889","endLine":6,"endColumn":20},{"ruleId":"886","severity":1,"message":"908","line":14,"column":10,"nodeType":"888","messageId":"889","endLine":14,"endColumn":38},{"ruleId":"886","severity":1,"message":"909","line":14,"column":40,"nodeType":"888","messageId":"889","endLine":14,"endColumn":52},{"ruleId":"886","severity":1,"message":"910","line":17,"column":11,"nodeType":"888","messageId":"889","endLine":17,"endColumn":17},{"ruleId":"886","severity":1,"message":"911","line":48,"column":7,"nodeType":"888","messageId":"889","endLine":48,"endColumn":17},{"ruleId":"912","severity":1,"message":"913","line":7,"column":1,"nodeType":"914","messageId":"915","endLine":9,"endColumn":2},{"ruleId":"886","severity":1,"message":"909","line":9,"column":10,"nodeType":"888","messageId":"889","endLine":9,"endColumn":22},{"ruleId":"886","severity":1,"message":"910","line":13,"column":11,"nodeType":"888","messageId":"889","endLine":13,"endColumn":17},{"ruleId":"886","severity":1,"message":"916","line":13,"column":17,"nodeType":"888","messageId":"889","endLine":13,"endColumn":24},{"ruleId":"886","severity":1,"message":"917","line":16,"column":11,"nodeType":"888","messageId":"889","endLine":16,"endColumn":17},{"ruleId":"886","severity":1,"message":"918","line":66,"column":7,"nodeType":"888","messageId":"889","endLine":66,"endColumn":12},{"ruleId":"919","severity":1,"message":"920","line":8,"column":6,"nodeType":"921","endLine":8,"endColumn":8,"suggestions":"922"},{"ruleId":"886","severity":1,"message":"900","line":1,"column":17,"nodeType":"888","messageId":"889","endLine":1,"endColumn":26},{"ruleId":"886","severity":1,"message":"897","line":3,"column":13,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"923","line":4,"column":10,"nodeType":"888","messageId":"889","endLine":4,"endColumn":19},{"ruleId":"886","severity":1,"message":"924","line":5,"column":10,"nodeType":"888","messageId":"889","endLine":5,"endColumn":14},{"ruleId":"886","severity":1,"message":"925","line":7,"column":8,"nodeType":"888","messageId":"889","endLine":7,"endColumn":11},{"ruleId":"886","severity":1,"message":"926","line":8,"column":10,"nodeType":"888","messageId":"889","endLine":8,"endColumn":18},{"ruleId":"886","severity":1,"message":"904","line":11,"column":11,"nodeType":"888","messageId":"889","endLine":11,"endColumn":20},{"ruleId":"886","severity":1,"message":"927","line":253,"column":7,"nodeType":"888","messageId":"889","endLine":253,"endColumn":15},{"ruleId":"886","severity":1,"message":"928","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":21},{"ruleId":"880","replacedBy":"929"},{"ruleId":"882","replacedBy":"930"},{"ruleId":"886","severity":1,"message":"931","line":1,"column":27,"nodeType":"888","messageId":"889","endLine":1,"endColumn":37},{"ruleId":"886","severity":1,"message":"932","line":2,"column":18,"nodeType":"888","messageId":"889","endLine":2,"endColumn":30},{"ruleId":"886","severity":1,"message":"933","line":12,"column":10,"nodeType":"888","messageId":"889","endLine":12,"endColumn":15},{"ruleId":"886","severity":1,"message":"934","line":14,"column":10,"nodeType":"888","messageId":"889","endLine":14,"endColumn":20},{"ruleId":"886","severity":1,"message":"891","line":14,"column":22,"nodeType":"888","messageId":"889","endLine":14,"endColumn":37},{"ruleId":"886","severity":1,"message":"935","line":17,"column":9,"nodeType":"888","messageId":"889","endLine":17,"endColumn":16},{"ruleId":"886","severity":1,"message":"936","line":18,"column":10,"nodeType":"888","messageId":"889","endLine":18,"endColumn":17},{"ruleId":"886","severity":1,"message":"937","line":18,"column":19,"nodeType":"888","messageId":"889","endLine":18,"endColumn":29},{"ruleId":"886","severity":1,"message":"938","line":100,"column":7,"nodeType":"888","messageId":"889","endLine":100,"endColumn":20},{"ruleId":"880","replacedBy":"939"},{"ruleId":"882","replacedBy":"940"},{"ruleId":"886","severity":1,"message":"941","line":12,"column":3,"nodeType":"888","messageId":"889","endLine":12,"endColumn":14},{"ruleId":"886","severity":1,"message":"942","line":13,"column":3,"nodeType":"888","messageId":"889","endLine":13,"endColumn":9},{"ruleId":"886","severity":1,"message":"943","line":14,"column":3,"nodeType":"888","messageId":"889","endLine":14,"endColumn":17},{"ruleId":"886","severity":1,"message":"944","line":16,"column":10,"nodeType":"888","messageId":"889","endLine":16,"endColumn":17},{"ruleId":"886","severity":1,"message":"935","line":27,"column":9,"nodeType":"888","messageId":"889","endLine":27,"endColumn":16},{"ruleId":"886","severity":1,"message":"945","line":28,"column":10,"nodeType":"888","messageId":"889","endLine":28,"endColumn":15},{"ruleId":"886","severity":1,"message":"946","line":37,"column":9,"nodeType":"888","messageId":"889","endLine":37,"endColumn":22},{"ruleId":"919","severity":1,"message":"947","line":43,"column":6,"nodeType":"921","endLine":43,"endColumn":50,"suggestions":"948"},{"ruleId":"886","severity":1,"message":"949","line":47,"column":13,"nodeType":"888","messageId":"889","endLine":47,"endColumn":21},{"ruleId":"880","replacedBy":"950"},{"ruleId":"882","replacedBy":"951"},{"ruleId":"886","severity":1,"message":"893","line":6,"column":8,"nodeType":"888","messageId":"889","endLine":6,"endColumn":14},{"ruleId":"886","severity":1,"message":"952","line":6,"column":3,"nodeType":"888","messageId":"889","endLine":6,"endColumn":11},{"ruleId":"886","severity":1,"message":"953","line":12,"column":10,"nodeType":"888","messageId":"889","endLine":12,"endColumn":19},{"ruleId":"886","severity":1,"message":"935","line":20,"column":9,"nodeType":"888","messageId":"889","endLine":20,"endColumn":16},{"ruleId":"886","severity":1,"message":"954","line":22,"column":10,"nodeType":"888","messageId":"889","endLine":22,"endColumn":15},{"ruleId":"886","severity":1,"message":"955","line":22,"column":17,"nodeType":"888","messageId":"889","endLine":22,"endColumn":25},{"ruleId":"886","severity":1,"message":"946","line":23,"column":9,"nodeType":"888","messageId":"889","endLine":23,"endColumn":22},{"ruleId":"886","severity":1,"message":"956","line":25,"column":9,"nodeType":"888","messageId":"889","endLine":25,"endColumn":25},{"ruleId":"886","severity":1,"message":"957","line":26,"column":10,"nodeType":"888","messageId":"889","endLine":26,"endColumn":14},{"ruleId":"886","severity":1,"message":"958","line":26,"column":16,"nodeType":"888","messageId":"889","endLine":26,"endColumn":23},{"ruleId":"886","severity":1,"message":"959","line":111,"column":7,"nodeType":"888","messageId":"889","endLine":111,"endColumn":18},{"ruleId":"886","severity":1,"message":"918","line":115,"column":7,"nodeType":"888","messageId":"889","endLine":115,"endColumn":12},{"ruleId":"886","severity":1,"message":"960","line":122,"column":7,"nodeType":"888","messageId":"889","endLine":122,"endColumn":17},{"ruleId":"886","severity":1,"message":"961","line":136,"column":7,"nodeType":"888","messageId":"889","endLine":136,"endColumn":13},{"ruleId":"886","severity":1,"message":"900","line":2,"column":10,"nodeType":"888","messageId":"889","endLine":2,"endColumn":19},{"ruleId":"886","severity":1,"message":"897","line":4,"column":13,"nodeType":"888","messageId":"889","endLine":4,"endColumn":14},{"ruleId":"886","severity":1,"message":"925","line":12,"column":8,"nodeType":"888","messageId":"889","endLine":12,"endColumn":11},{"ruleId":"886","severity":1,"message":"926","line":13,"column":10,"nodeType":"888","messageId":"889","endLine":13,"endColumn":18},{"ruleId":"886","severity":1,"message":"923","line":14,"column":10,"nodeType":"888","messageId":"889","endLine":14,"endColumn":19},{"ruleId":"886","severity":1,"message":"924","line":15,"column":10,"nodeType":"888","messageId":"889","endLine":15,"endColumn":14},{"ruleId":"886","severity":1,"message":"910","line":18,"column":11,"nodeType":"888","messageId":"889","endLine":18,"endColumn":17},{"ruleId":"886","severity":1,"message":"893","line":2,"column":8,"nodeType":"888","messageId":"889","endLine":2,"endColumn":14},{"ruleId":"880","replacedBy":"962"},{"ruleId":"882","replacedBy":"963"},{"ruleId":"886","severity":1,"message":"952","line":1,"column":10,"nodeType":"888","messageId":"889","endLine":1,"endColumn":18},{"ruleId":"886","severity":1,"message":"964","line":9,"column":10,"nodeType":"888","messageId":"889","endLine":9,"endColumn":16},{"ruleId":"886","severity":1,"message":"965","line":9,"column":18,"nodeType":"888","messageId":"889","endLine":9,"endColumn":23},{"ruleId":"886","severity":1,"message":"934","line":8,"column":10,"nodeType":"888","messageId":"889","endLine":8,"endColumn":20},{"ruleId":"886","severity":1,"message":"891","line":8,"column":22,"nodeType":"888","messageId":"889","endLine":8,"endColumn":37},{"ruleId":"886","severity":1,"message":"966","line":5,"column":6,"nodeType":"888","messageId":"889","endLine":5,"endColumn":12},{"ruleId":"886","severity":1,"message":"952","line":10,"column":25,"nodeType":"888","messageId":"889","endLine":10,"endColumn":33},{"ruleId":"886","severity":1,"message":"967","line":11,"column":10,"nodeType":"888","messageId":"889","endLine":11,"endColumn":17},{"ruleId":"886","severity":1,"message":"917","line":23,"column":11,"nodeType":"888","messageId":"889","endLine":23,"endColumn":17},{"ruleId":"886","severity":1,"message":"900","line":2,"column":20,"nodeType":"888","messageId":"889","endLine":2,"endColumn":29},{"ruleId":"886","severity":1,"message":"968","line":10,"column":10,"nodeType":"888","messageId":"889","endLine":10,"endColumn":18},{"ruleId":"886","severity":1,"message":"969","line":11,"column":10,"nodeType":"888","messageId":"889","endLine":11,"endColumn":18},{"ruleId":"886","severity":1,"message":"970","line":20,"column":9,"nodeType":"888","messageId":"889","endLine":20,"endColumn":15},{"ruleId":"886","severity":1,"message":"917","line":29,"column":11,"nodeType":"888","messageId":"889","endLine":29,"endColumn":17},{"ruleId":"886","severity":1,"message":"971","line":6,"column":10,"nodeType":"888","messageId":"889","endLine":6,"endColumn":17},{"ruleId":"886","severity":1,"message":"917","line":17,"column":11,"nodeType":"888","messageId":"889","endLine":17,"endColumn":17},{"ruleId":"886","severity":1,"message":"967","line":12,"column":3,"nodeType":"888","messageId":"889","endLine":12,"endColumn":10},{"ruleId":"886","severity":1,"message":"972","line":13,"column":3,"nodeType":"888","messageId":"889","endLine":13,"endColumn":14},{"ruleId":"886","severity":1,"message":"973","line":17,"column":10,"nodeType":"888","messageId":"889","endLine":17,"endColumn":17},{"ruleId":"886","severity":1,"message":"909","line":20,"column":10,"nodeType":"888","messageId":"889","endLine":20,"endColumn":22},{"ruleId":"886","severity":1,"message":"910","line":23,"column":11,"nodeType":"888","messageId":"889","endLine":23,"endColumn":17},{"ruleId":"886","severity":1,"message":"974","line":1,"column":10,"nodeType":"888","messageId":"889","endLine":1,"endColumn":15},{"ruleId":"886","severity":1,"message":"893","line":2,"column":8,"nodeType":"888","messageId":"889","endLine":2,"endColumn":14},{"ruleId":"886","severity":1,"message":"975","line":8,"column":10,"nodeType":"888","messageId":"889","endLine":8,"endColumn":16},{"ruleId":"886","severity":1,"message":"935","line":16,"column":9,"nodeType":"888","messageId":"889","endLine":16,"endColumn":16},{"ruleId":"886","severity":1,"message":"976","line":23,"column":10,"nodeType":"888","messageId":"889","endLine":23,"endColumn":17},{"ruleId":"886","severity":1,"message":"977","line":23,"column":19,"nodeType":"888","messageId":"889","endLine":23,"endColumn":29},{"ruleId":"886","severity":1,"message":"956","line":51,"column":11,"nodeType":"888","messageId":"889","endLine":51,"endColumn":27},{"ruleId":"886","severity":1,"message":"952","line":2,"column":21,"nodeType":"888","messageId":"889","endLine":2,"endColumn":29},{"ruleId":"886","severity":1,"message":"978","line":19,"column":11,"nodeType":"888","messageId":"889","endLine":19,"endColumn":20},{"ruleId":"886","severity":1,"message":"979","line":19,"column":22,"nodeType":"888","messageId":"889","endLine":19,"endColumn":27},{"ruleId":"886","severity":1,"message":"935","line":24,"column":9,"nodeType":"888","messageId":"889","endLine":24,"endColumn":16},{"ruleId":"886","severity":1,"message":"976","line":31,"column":10,"nodeType":"888","messageId":"889","endLine":31,"endColumn":17},{"ruleId":"886","severity":1,"message":"977","line":31,"column":19,"nodeType":"888","messageId":"889","endLine":31,"endColumn":29},{"ruleId":"886","severity":1,"message":"956","line":61,"column":11,"nodeType":"888","messageId":"889","endLine":61,"endColumn":27},{"ruleId":"886","severity":1,"message":"952","line":2,"column":10,"nodeType":"888","messageId":"889","endLine":2,"endColumn":18},{"ruleId":"886","severity":1,"message":"980","line":6,"column":10,"nodeType":"888","messageId":"889","endLine":6,"endColumn":16},"no-native-reassign",["981"],"no-negated-in-lhs",["982"],["981"],["982"],"@typescript-eslint/no-unused-vars","'useGetBelongingUsersQuery' is defined but never used.","Identifier","unusedVar","'useGetChannelByIdQuery' is defined but never used.","'useMyTeamsQuery' is defined but never used.","'IconButtonWrapper' is assigned a value but never used.","'styled' is defined but never used.","'Wrapper' is assigned a value but never used.","'Top' is assigned a value but never used.","'Section' is assigned a value but never used.","'b' is defined but never used.","'Bookmark' is defined but never used.","'Transition' is defined but never used.","'useEffect' is defined but never used.","'Props' is defined but never used.","'MessageBox' is defined but never used.","'useSendMessageMutation' is defined but never used.","'channelId' is assigned a value but never used.","'Title' is assigned a value but never used.","'Description' is assigned a value but never used.","'useState' is defined but never used.","'useSendDirectMessageMutation' is defined but never used.","'useUserQuery' is defined but never used.","'userId' is assigned a value but never used.","'SideOption' is assigned a value but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'Magnify' is defined but never used.","'teamId' is assigned a value but never used.","'Input' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["983"],"'Seperator' is defined but never used.","'Card' is defined but never used.","'gql' is defined but never used.","'useQuery' is defined but never used.","'ItemLink' is assigned a value but never used.","'useCallback' is defined but never used.",["981"],["982"],"'useContext' is defined but never used.","'ThemeContext' is defined but never used.","'Modal' is defined but never used.","'useMeQuery' is defined but never used.","'history' is assigned a value but never used.","'pressed' is assigned a value but never used.","'setPressed' is assigned a value but never used.","'LaunchWrapper' is assigned a value but never used.",["981"],["982"],"'LoadingText' is defined but never used.","'Rotate' is defined but never used.","'spinTransition' is defined but never used.","'Warning' is defined but never used.","'error' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sendQuery'. Either include it or remove the dependency array.",["984"],"'newDigit' is assigned a value but never used.",["981"],["982"],"'Redirect' is defined but never used.","'Prototype' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'avatarBackground' is assigned a value but never used.","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'LeftWrapper' is assigned a value but never used.","'NextButton' is assigned a value but never used.","'Policy' is assigned a value but never used.",["981"],["982"],"'AtSign' is defined but never used.","'Close' is defined but never used.","'Action' is defined but never used.","'Profile' is defined but never used.","'Messages' is defined but never used.","'Channels' is defined but never used.","'toggle' is assigned a value but never used.","'Message' is defined but never used.","'IconWrapper' is defined but never used.","'UserAlt' is defined but never used.","'Input' is defined but never used.","'signin' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'invitorId' is assigned a value but never used.","'token' is assigned a value but never used.","'Dialog' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"985","fix":"986"},{"desc":"987","fix":"988"},"Update the dependencies array to be: [name]",{"range":"989","text":"990"},"Update the dependencies array to be: [first, second, third, fourth, fifth, sixth, sendQuery]",{"range":"991","text":"992"},[186,188],"[name]",[1308,1352],"[first, second, third, fourth, fifth, sixth, sendQuery]"]