<<<<<<< HEAD
version: '3.7'
services:
  db:
    image: postgres
    env_file:
      - prod.env
    volumes:
      - database_postgres:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - slack
  server:
    build:
      context: ./server
      dockerfile: prod.Dockerfile
    depends_on:
      - db
      - redis
    ports:
      - '4000:4000'
    networks:
      - slack
    volumes:
      - ./server:/root
    env_file:
      - prod.env
=======
version: '3'
services:
  db:
    image: postgres
    ports:
      - 5432:5432
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB}
    networks:
      - slack_network

>>>>>>> a5e666a7a5cb31e579f94097560e4d1f5c03e38d
  redis:
    image: redis:latest
    command: ['redis-server', '--bind', 'redis', '--port', '6379']
    volumes:
      - ./data/redis:/data
<<<<<<< HEAD
    ports:
      - '6379:6379'
    networks:
      - slack
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    networks:
      - slack
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
    stdin_open: true

volumes:
  database_postgres:

networks:
  slack:
=======
    networks:
      - slack_network

  server:
    build: server/
    image: slack_server
    ports:
      - 4000:4000
    environment:
      - POSTGRES_HOST=db
      - POSTGRSE_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB}
    depends_on:
      - db
      - redis
    networks:
      - slack_network

networks:
  slack_network:
>>>>>>> a5e666a7a5cb31e579f94097560e4d1f5c03e38d
    driver: bridge
